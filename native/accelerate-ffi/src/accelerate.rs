/* automatically generated by rust-bindgen 0.71.1 */

pub const __WORDSIZE: u32 = 64;
pub const __has_safe_buffers: u32 = 1;
pub const __DARWIN_ONLY_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const __DARWIN_ONLY_VERS_1050: u32 = 1;
pub const __DARWIN_UNIX03: u32 = 1;
pub const __DARWIN_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_VERS_1050: u32 = 1;
pub const __DARWIN_NON_CANCELABLE: u32 = 0;
pub const __DARWIN_SUF_EXTSN: &[u8; 14] = b"$DARWIN_EXTSN\0";
pub const __DARWIN_C_ANSI: u32 = 4096;
pub const __DARWIN_C_FULL: u32 = 900000;
pub const __DARWIN_C_LEVEL: u32 = 900000;
pub const __STDC_WANT_LIB_EXT1__: u32 = 1;
pub const __DARWIN_NO_LONG_LONG: u32 = 0;
pub const _DARWIN_FEATURE_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_VERS_1050: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: u32 = 3;
pub const __has_ptrcheck: u32 = 0;
pub const __has_bounds_safety_attributes: u32 = 0;
pub const USE_CLANG_TYPES: u32 = 0;
pub const __PTHREAD_SIZE__: u32 = 8176;
pub const __PTHREAD_ATTR_SIZE__: u32 = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: u32 = 8;
pub const __PTHREAD_MUTEX_SIZE__: u32 = 56;
pub const __PTHREAD_CONDATTR_SIZE__: u32 = 8;
pub const __PTHREAD_COND_SIZE__: u32 = 40;
pub const __PTHREAD_ONCE_SIZE__: u32 = 8;
pub const __PTHREAD_RWLOCK_SIZE__: u32 = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: u32 = 16;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const INT64_MAX: u64 = 9223372036854775807;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT64_MIN: i64 = -9223372036854775808;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const UINT64_MAX: i32 = -1;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST64_MIN: i64 = -9223372036854775808;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const INT_LEAST64_MAX: u64 = 9223372036854775807;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const UINT_LEAST64_MAX: i32 = -1;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i32 = -32768;
pub const INT_FAST32_MIN: i32 = -2147483648;
pub const INT_FAST64_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u32 = 32767;
pub const INT_FAST32_MAX: u32 = 2147483647;
pub const INT_FAST64_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: u32 = 65535;
pub const UINT_FAST32_MAX: u32 = 4294967295;
pub const UINT_FAST64_MAX: i32 = -1;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const UINTPTR_MAX: i32 = -1;
pub const SIZE_MAX: i32 = -1;
pub const RSIZE_MAX: i32 = -1;
pub const WINT_MIN: i32 = -2147483648;
pub const WINT_MAX: u32 = 2147483647;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const API_TO_BE_DEPRECATED: u32 = 100000;
pub const API_TO_BE_DEPRECATED_MACOS: u32 = 100000;
pub const API_TO_BE_DEPRECATED_IOS: u32 = 100000;
pub const API_TO_BE_DEPRECATED_TVOS: u32 = 100000;
pub const API_TO_BE_DEPRECATED_WATCHOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACCATALYST: u32 = 100000;
pub const API_TO_BE_DEPRECATED_DRIVERKIT: u32 = 100000;
pub const API_TO_BE_DEPRECATED_VISIONOS: u32 = 100000;
pub const __MAC_10_0: u32 = 1000;
pub const __MAC_10_1: u32 = 1010;
pub const __MAC_10_2: u32 = 1020;
pub const __MAC_10_3: u32 = 1030;
pub const __MAC_10_4: u32 = 1040;
pub const __MAC_10_5: u32 = 1050;
pub const __MAC_10_6: u32 = 1060;
pub const __MAC_10_7: u32 = 1070;
pub const __MAC_10_8: u32 = 1080;
pub const __MAC_10_9: u32 = 1090;
pub const __MAC_10_10: u32 = 101000;
pub const __MAC_10_10_2: u32 = 101002;
pub const __MAC_10_10_3: u32 = 101003;
pub const __MAC_10_11: u32 = 101100;
pub const __MAC_10_11_2: u32 = 101102;
pub const __MAC_10_11_3: u32 = 101103;
pub const __MAC_10_11_4: u32 = 101104;
pub const __MAC_10_12: u32 = 101200;
pub const __MAC_10_12_1: u32 = 101201;
pub const __MAC_10_12_2: u32 = 101202;
pub const __MAC_10_12_4: u32 = 101204;
pub const __MAC_10_13: u32 = 101300;
pub const __MAC_10_13_1: u32 = 101301;
pub const __MAC_10_13_2: u32 = 101302;
pub const __MAC_10_13_4: u32 = 101304;
pub const __MAC_10_14: u32 = 101400;
pub const __MAC_10_14_1: u32 = 101401;
pub const __MAC_10_14_4: u32 = 101404;
pub const __MAC_10_14_5: u32 = 101405;
pub const __MAC_10_14_6: u32 = 101406;
pub const __MAC_10_15: u32 = 101500;
pub const __MAC_10_15_1: u32 = 101501;
pub const __MAC_10_15_4: u32 = 101504;
pub const __MAC_10_16: u32 = 101600;
pub const __MAC_11_0: u32 = 110000;
pub const __MAC_11_1: u32 = 110100;
pub const __MAC_11_3: u32 = 110300;
pub const __MAC_11_4: u32 = 110400;
pub const __MAC_11_5: u32 = 110500;
pub const __MAC_11_6: u32 = 110600;
pub const __MAC_12_0: u32 = 120000;
pub const __MAC_12_1: u32 = 120100;
pub const __MAC_12_2: u32 = 120200;
pub const __MAC_12_3: u32 = 120300;
pub const __MAC_12_4: u32 = 120400;
pub const __MAC_12_5: u32 = 120500;
pub const __MAC_12_6: u32 = 120600;
pub const __MAC_12_7: u32 = 120700;
pub const __MAC_13_0: u32 = 130000;
pub const __MAC_13_1: u32 = 130100;
pub const __MAC_13_2: u32 = 130200;
pub const __MAC_13_3: u32 = 130300;
pub const __MAC_13_4: u32 = 130400;
pub const __MAC_13_5: u32 = 130500;
pub const __MAC_13_6: u32 = 130600;
pub const __MAC_13_7: u32 = 130700;
pub const __MAC_14_0: u32 = 140000;
pub const __MAC_14_1: u32 = 140100;
pub const __MAC_14_2: u32 = 140200;
pub const __MAC_14_3: u32 = 140300;
pub const __MAC_14_4: u32 = 140400;
pub const __MAC_14_5: u32 = 140500;
pub const __MAC_14_6: u32 = 140600;
pub const __MAC_14_7: u32 = 140700;
pub const __MAC_15_0: u32 = 150000;
pub const __MAC_15_1: u32 = 150100;
pub const __MAC_15_2: u32 = 150200;
pub const __MAC_15_3: u32 = 150300;
pub const __MAC_15_4: u32 = 150400;
pub const __IPHONE_2_0: u32 = 20000;
pub const __IPHONE_2_1: u32 = 20100;
pub const __IPHONE_2_2: u32 = 20200;
pub const __IPHONE_3_0: u32 = 30000;
pub const __IPHONE_3_1: u32 = 30100;
pub const __IPHONE_3_2: u32 = 30200;
pub const __IPHONE_4_0: u32 = 40000;
pub const __IPHONE_4_1: u32 = 40100;
pub const __IPHONE_4_2: u32 = 40200;
pub const __IPHONE_4_3: u32 = 40300;
pub const __IPHONE_5_0: u32 = 50000;
pub const __IPHONE_5_1: u32 = 50100;
pub const __IPHONE_6_0: u32 = 60000;
pub const __IPHONE_6_1: u32 = 60100;
pub const __IPHONE_7_0: u32 = 70000;
pub const __IPHONE_7_1: u32 = 70100;
pub const __IPHONE_8_0: u32 = 80000;
pub const __IPHONE_8_1: u32 = 80100;
pub const __IPHONE_8_2: u32 = 80200;
pub const __IPHONE_8_3: u32 = 80300;
pub const __IPHONE_8_4: u32 = 80400;
pub const __IPHONE_9_0: u32 = 90000;
pub const __IPHONE_9_1: u32 = 90100;
pub const __IPHONE_9_2: u32 = 90200;
pub const __IPHONE_9_3: u32 = 90300;
pub const __IPHONE_10_0: u32 = 100000;
pub const __IPHONE_10_1: u32 = 100100;
pub const __IPHONE_10_2: u32 = 100200;
pub const __IPHONE_10_3: u32 = 100300;
pub const __IPHONE_11_0: u32 = 110000;
pub const __IPHONE_11_1: u32 = 110100;
pub const __IPHONE_11_2: u32 = 110200;
pub const __IPHONE_11_3: u32 = 110300;
pub const __IPHONE_11_4: u32 = 110400;
pub const __IPHONE_12_0: u32 = 120000;
pub const __IPHONE_12_1: u32 = 120100;
pub const __IPHONE_12_2: u32 = 120200;
pub const __IPHONE_12_3: u32 = 120300;
pub const __IPHONE_12_4: u32 = 120400;
pub const __IPHONE_13_0: u32 = 130000;
pub const __IPHONE_13_1: u32 = 130100;
pub const __IPHONE_13_2: u32 = 130200;
pub const __IPHONE_13_3: u32 = 130300;
pub const __IPHONE_13_4: u32 = 130400;
pub const __IPHONE_13_5: u32 = 130500;
pub const __IPHONE_13_6: u32 = 130600;
pub const __IPHONE_13_7: u32 = 130700;
pub const __IPHONE_14_0: u32 = 140000;
pub const __IPHONE_14_1: u32 = 140100;
pub const __IPHONE_14_2: u32 = 140200;
pub const __IPHONE_14_3: u32 = 140300;
pub const __IPHONE_14_5: u32 = 140500;
pub const __IPHONE_14_4: u32 = 140400;
pub const __IPHONE_14_6: u32 = 140600;
pub const __IPHONE_14_7: u32 = 140700;
pub const __IPHONE_14_8: u32 = 140800;
pub const __IPHONE_15_0: u32 = 150000;
pub const __IPHONE_15_1: u32 = 150100;
pub const __IPHONE_15_2: u32 = 150200;
pub const __IPHONE_15_3: u32 = 150300;
pub const __IPHONE_15_4: u32 = 150400;
pub const __IPHONE_15_5: u32 = 150500;
pub const __IPHONE_15_6: u32 = 150600;
pub const __IPHONE_15_7: u32 = 150700;
pub const __IPHONE_15_8: u32 = 150800;
pub const __IPHONE_16_0: u32 = 160000;
pub const __IPHONE_16_1: u32 = 160100;
pub const __IPHONE_16_2: u32 = 160200;
pub const __IPHONE_16_3: u32 = 160300;
pub const __IPHONE_16_4: u32 = 160400;
pub const __IPHONE_16_5: u32 = 160500;
pub const __IPHONE_16_6: u32 = 160600;
pub const __IPHONE_16_7: u32 = 160700;
pub const __IPHONE_17_0: u32 = 170000;
pub const __IPHONE_17_1: u32 = 170100;
pub const __IPHONE_17_2: u32 = 170200;
pub const __IPHONE_17_3: u32 = 170300;
pub const __IPHONE_17_4: u32 = 170400;
pub const __IPHONE_17_5: u32 = 170500;
pub const __IPHONE_17_6: u32 = 170600;
pub const __IPHONE_17_7: u32 = 170700;
pub const __IPHONE_18_0: u32 = 180000;
pub const __IPHONE_18_1: u32 = 180100;
pub const __IPHONE_18_2: u32 = 180200;
pub const __IPHONE_18_3: u32 = 180300;
pub const __IPHONE_18_4: u32 = 180400;
pub const __WATCHOS_1_0: u32 = 10000;
pub const __WATCHOS_2_0: u32 = 20000;
pub const __WATCHOS_2_1: u32 = 20100;
pub const __WATCHOS_2_2: u32 = 20200;
pub const __WATCHOS_3_0: u32 = 30000;
pub const __WATCHOS_3_1: u32 = 30100;
pub const __WATCHOS_3_1_1: u32 = 30101;
pub const __WATCHOS_3_2: u32 = 30200;
pub const __WATCHOS_4_0: u32 = 40000;
pub const __WATCHOS_4_1: u32 = 40100;
pub const __WATCHOS_4_2: u32 = 40200;
pub const __WATCHOS_4_3: u32 = 40300;
pub const __WATCHOS_5_0: u32 = 50000;
pub const __WATCHOS_5_1: u32 = 50100;
pub const __WATCHOS_5_2: u32 = 50200;
pub const __WATCHOS_5_3: u32 = 50300;
pub const __WATCHOS_6_0: u32 = 60000;
pub const __WATCHOS_6_1: u32 = 60100;
pub const __WATCHOS_6_2: u32 = 60200;
pub const __WATCHOS_7_0: u32 = 70000;
pub const __WATCHOS_7_1: u32 = 70100;
pub const __WATCHOS_7_2: u32 = 70200;
pub const __WATCHOS_7_3: u32 = 70300;
pub const __WATCHOS_7_4: u32 = 70400;
pub const __WATCHOS_7_5: u32 = 70500;
pub const __WATCHOS_7_6: u32 = 70600;
pub const __WATCHOS_8_0: u32 = 80000;
pub const __WATCHOS_8_1: u32 = 80100;
pub const __WATCHOS_8_3: u32 = 80300;
pub const __WATCHOS_8_4: u32 = 80400;
pub const __WATCHOS_8_5: u32 = 80500;
pub const __WATCHOS_8_6: u32 = 80600;
pub const __WATCHOS_8_7: u32 = 80700;
pub const __WATCHOS_8_8: u32 = 80800;
pub const __WATCHOS_9_0: u32 = 90000;
pub const __WATCHOS_9_1: u32 = 90100;
pub const __WATCHOS_9_2: u32 = 90200;
pub const __WATCHOS_9_3: u32 = 90300;
pub const __WATCHOS_9_4: u32 = 90400;
pub const __WATCHOS_9_5: u32 = 90500;
pub const __WATCHOS_9_6: u32 = 90600;
pub const __WATCHOS_10_0: u32 = 100000;
pub const __WATCHOS_10_1: u32 = 100100;
pub const __WATCHOS_10_2: u32 = 100200;
pub const __WATCHOS_10_3: u32 = 100300;
pub const __WATCHOS_10_4: u32 = 100400;
pub const __WATCHOS_10_5: u32 = 100500;
pub const __WATCHOS_10_6: u32 = 100600;
pub const __WATCHOS_10_7: u32 = 100700;
pub const __WATCHOS_11_0: u32 = 110000;
pub const __WATCHOS_11_1: u32 = 110100;
pub const __WATCHOS_11_2: u32 = 110200;
pub const __WATCHOS_11_3: u32 = 110300;
pub const __WATCHOS_11_4: u32 = 110400;
pub const __TVOS_9_0: u32 = 90000;
pub const __TVOS_9_1: u32 = 90100;
pub const __TVOS_9_2: u32 = 90200;
pub const __TVOS_10_0: u32 = 100000;
pub const __TVOS_10_0_1: u32 = 100001;
pub const __TVOS_10_1: u32 = 100100;
pub const __TVOS_10_2: u32 = 100200;
pub const __TVOS_11_0: u32 = 110000;
pub const __TVOS_11_1: u32 = 110100;
pub const __TVOS_11_2: u32 = 110200;
pub const __TVOS_11_3: u32 = 110300;
pub const __TVOS_11_4: u32 = 110400;
pub const __TVOS_12_0: u32 = 120000;
pub const __TVOS_12_1: u32 = 120100;
pub const __TVOS_12_2: u32 = 120200;
pub const __TVOS_12_3: u32 = 120300;
pub const __TVOS_12_4: u32 = 120400;
pub const __TVOS_13_0: u32 = 130000;
pub const __TVOS_13_2: u32 = 130200;
pub const __TVOS_13_3: u32 = 130300;
pub const __TVOS_13_4: u32 = 130400;
pub const __TVOS_14_0: u32 = 140000;
pub const __TVOS_14_1: u32 = 140100;
pub const __TVOS_14_2: u32 = 140200;
pub const __TVOS_14_3: u32 = 140300;
pub const __TVOS_14_5: u32 = 140500;
pub const __TVOS_14_6: u32 = 140600;
pub const __TVOS_14_7: u32 = 140700;
pub const __TVOS_15_0: u32 = 150000;
pub const __TVOS_15_1: u32 = 150100;
pub const __TVOS_15_2: u32 = 150200;
pub const __TVOS_15_3: u32 = 150300;
pub const __TVOS_15_4: u32 = 150400;
pub const __TVOS_15_5: u32 = 150500;
pub const __TVOS_15_6: u32 = 150600;
pub const __TVOS_16_0: u32 = 160000;
pub const __TVOS_16_1: u32 = 160100;
pub const __TVOS_16_2: u32 = 160200;
pub const __TVOS_16_3: u32 = 160300;
pub const __TVOS_16_4: u32 = 160400;
pub const __TVOS_16_5: u32 = 160500;
pub const __TVOS_16_6: u32 = 160600;
pub const __TVOS_17_0: u32 = 170000;
pub const __TVOS_17_1: u32 = 170100;
pub const __TVOS_17_2: u32 = 170200;
pub const __TVOS_17_3: u32 = 170300;
pub const __TVOS_17_4: u32 = 170400;
pub const __TVOS_17_5: u32 = 170500;
pub const __TVOS_17_6: u32 = 170600;
pub const __TVOS_18_0: u32 = 180000;
pub const __TVOS_18_1: u32 = 180100;
pub const __TVOS_18_2: u32 = 180200;
pub const __TVOS_18_3: u32 = 180300;
pub const __TVOS_18_4: u32 = 180400;
pub const __BRIDGEOS_2_0: u32 = 20000;
pub const __BRIDGEOS_3_0: u32 = 30000;
pub const __BRIDGEOS_3_1: u32 = 30100;
pub const __BRIDGEOS_3_4: u32 = 30400;
pub const __BRIDGEOS_4_0: u32 = 40000;
pub const __BRIDGEOS_4_1: u32 = 40100;
pub const __BRIDGEOS_5_0: u32 = 50000;
pub const __BRIDGEOS_5_1: u32 = 50100;
pub const __BRIDGEOS_5_3: u32 = 50300;
pub const __BRIDGEOS_6_0: u32 = 60000;
pub const __BRIDGEOS_6_2: u32 = 60200;
pub const __BRIDGEOS_6_4: u32 = 60400;
pub const __BRIDGEOS_6_5: u32 = 60500;
pub const __BRIDGEOS_6_6: u32 = 60600;
pub const __BRIDGEOS_7_0: u32 = 70000;
pub const __BRIDGEOS_7_1: u32 = 70100;
pub const __BRIDGEOS_7_2: u32 = 70200;
pub const __BRIDGEOS_7_3: u32 = 70300;
pub const __BRIDGEOS_7_4: u32 = 70400;
pub const __BRIDGEOS_7_6: u32 = 70600;
pub const __BRIDGEOS_8_0: u32 = 80000;
pub const __BRIDGEOS_8_1: u32 = 80100;
pub const __BRIDGEOS_8_2: u32 = 80200;
pub const __BRIDGEOS_8_3: u32 = 80300;
pub const __BRIDGEOS_8_4: u32 = 80400;
pub const __BRIDGEOS_8_5: u32 = 80500;
pub const __BRIDGEOS_8_6: u32 = 80600;
pub const __BRIDGEOS_9_0: u32 = 90000;
pub const __BRIDGEOS_9_1: u32 = 90100;
pub const __BRIDGEOS_9_2: u32 = 90200;
pub const __BRIDGEOS_9_3: u32 = 90300;
pub const __BRIDGEOS_9_4: u32 = 90400;
pub const __DRIVERKIT_19_0: u32 = 190000;
pub const __DRIVERKIT_20_0: u32 = 200000;
pub const __DRIVERKIT_21_0: u32 = 210000;
pub const __DRIVERKIT_22_0: u32 = 220000;
pub const __DRIVERKIT_22_4: u32 = 220400;
pub const __DRIVERKIT_22_5: u32 = 220500;
pub const __DRIVERKIT_22_6: u32 = 220600;
pub const __DRIVERKIT_23_0: u32 = 230000;
pub const __DRIVERKIT_23_1: u32 = 230100;
pub const __DRIVERKIT_23_2: u32 = 230200;
pub const __DRIVERKIT_23_3: u32 = 230300;
pub const __DRIVERKIT_23_4: u32 = 230400;
pub const __DRIVERKIT_23_5: u32 = 230500;
pub const __DRIVERKIT_23_6: u32 = 230600;
pub const __DRIVERKIT_24_0: u32 = 240000;
pub const __DRIVERKIT_24_1: u32 = 240100;
pub const __DRIVERKIT_24_2: u32 = 240200;
pub const __DRIVERKIT_24_3: u32 = 240300;
pub const __DRIVERKIT_24_4: u32 = 240400;
pub const __VISIONOS_1_0: u32 = 10000;
pub const __VISIONOS_1_1: u32 = 10100;
pub const __VISIONOS_1_2: u32 = 10200;
pub const __VISIONOS_1_3: u32 = 10300;
pub const __VISIONOS_2_0: u32 = 20000;
pub const __VISIONOS_2_1: u32 = 20100;
pub const __VISIONOS_2_2: u32 = 20200;
pub const __VISIONOS_2_3: u32 = 20300;
pub const __VISIONOS_2_4: u32 = 20400;
pub const MAC_OS_X_VERSION_10_0: u32 = 1000;
pub const MAC_OS_X_VERSION_10_1: u32 = 1010;
pub const MAC_OS_X_VERSION_10_2: u32 = 1020;
pub const MAC_OS_X_VERSION_10_3: u32 = 1030;
pub const MAC_OS_X_VERSION_10_4: u32 = 1040;
pub const MAC_OS_X_VERSION_10_5: u32 = 1050;
pub const MAC_OS_X_VERSION_10_6: u32 = 1060;
pub const MAC_OS_X_VERSION_10_7: u32 = 1070;
pub const MAC_OS_X_VERSION_10_8: u32 = 1080;
pub const MAC_OS_X_VERSION_10_9: u32 = 1090;
pub const MAC_OS_X_VERSION_10_10: u32 = 101000;
pub const MAC_OS_X_VERSION_10_10_2: u32 = 101002;
pub const MAC_OS_X_VERSION_10_10_3: u32 = 101003;
pub const MAC_OS_X_VERSION_10_11: u32 = 101100;
pub const MAC_OS_X_VERSION_10_11_2: u32 = 101102;
pub const MAC_OS_X_VERSION_10_11_3: u32 = 101103;
pub const MAC_OS_X_VERSION_10_11_4: u32 = 101104;
pub const MAC_OS_X_VERSION_10_12: u32 = 101200;
pub const MAC_OS_X_VERSION_10_12_1: u32 = 101201;
pub const MAC_OS_X_VERSION_10_12_2: u32 = 101202;
pub const MAC_OS_X_VERSION_10_12_4: u32 = 101204;
pub const MAC_OS_X_VERSION_10_13: u32 = 101300;
pub const MAC_OS_X_VERSION_10_13_1: u32 = 101301;
pub const MAC_OS_X_VERSION_10_13_2: u32 = 101302;
pub const MAC_OS_X_VERSION_10_13_4: u32 = 101304;
pub const MAC_OS_X_VERSION_10_14: u32 = 101400;
pub const MAC_OS_X_VERSION_10_14_1: u32 = 101401;
pub const MAC_OS_X_VERSION_10_14_4: u32 = 101404;
pub const MAC_OS_X_VERSION_10_14_5: u32 = 101405;
pub const MAC_OS_X_VERSION_10_14_6: u32 = 101406;
pub const MAC_OS_X_VERSION_10_15: u32 = 101500;
pub const MAC_OS_X_VERSION_10_15_1: u32 = 101501;
pub const MAC_OS_X_VERSION_10_15_4: u32 = 101504;
pub const MAC_OS_X_VERSION_10_16: u32 = 101600;
pub const MAC_OS_VERSION_11_0: u32 = 110000;
pub const MAC_OS_VERSION_11_1: u32 = 110100;
pub const MAC_OS_VERSION_11_3: u32 = 110300;
pub const MAC_OS_VERSION_11_4: u32 = 110400;
pub const MAC_OS_VERSION_11_5: u32 = 110500;
pub const MAC_OS_VERSION_11_6: u32 = 110600;
pub const MAC_OS_VERSION_12_0: u32 = 120000;
pub const MAC_OS_VERSION_12_1: u32 = 120100;
pub const MAC_OS_VERSION_12_2: u32 = 120200;
pub const MAC_OS_VERSION_12_3: u32 = 120300;
pub const MAC_OS_VERSION_12_4: u32 = 120400;
pub const MAC_OS_VERSION_12_5: u32 = 120500;
pub const MAC_OS_VERSION_12_6: u32 = 120600;
pub const MAC_OS_VERSION_12_7: u32 = 120700;
pub const MAC_OS_VERSION_13_0: u32 = 130000;
pub const MAC_OS_VERSION_13_1: u32 = 130100;
pub const MAC_OS_VERSION_13_2: u32 = 130200;
pub const MAC_OS_VERSION_13_3: u32 = 130300;
pub const MAC_OS_VERSION_13_4: u32 = 130400;
pub const MAC_OS_VERSION_13_5: u32 = 130500;
pub const MAC_OS_VERSION_13_6: u32 = 130600;
pub const MAC_OS_VERSION_13_7: u32 = 130700;
pub const MAC_OS_VERSION_14_0: u32 = 140000;
pub const MAC_OS_VERSION_14_1: u32 = 140100;
pub const MAC_OS_VERSION_14_2: u32 = 140200;
pub const MAC_OS_VERSION_14_3: u32 = 140300;
pub const MAC_OS_VERSION_14_4: u32 = 140400;
pub const MAC_OS_VERSION_14_5: u32 = 140500;
pub const MAC_OS_VERSION_14_6: u32 = 140600;
pub const MAC_OS_VERSION_14_7: u32 = 140700;
pub const MAC_OS_VERSION_15_0: u32 = 150000;
pub const MAC_OS_VERSION_15_1: u32 = 150100;
pub const MAC_OS_VERSION_15_2: u32 = 150200;
pub const MAC_OS_VERSION_15_3: u32 = 150300;
pub const MAC_OS_VERSION_15_4: u32 = 150400;
pub const __AVAILABILITY_VERSIONS_VERSION_HASH: u32 = 93585900;
pub const __AVAILABILITY_VERSIONS_VERSION_STRING: &[u8; 6] = b"Local\0";
pub const __AVAILABILITY_FILE: &[u8; 23] = b"AvailabilityVersions.h\0";
pub const __MAC_OS_X_VERSION_MAX_ALLOWED: u32 = 150400;
pub const __ENABLE_LEGACY_MAC_AVAILABILITY: u32 = 1;
pub type int_least8_t = i8;
pub type int_least16_t = i16;
pub type int_least32_t = i32;
pub type int_least64_t = i64;
pub type uint_least8_t = u8;
pub type uint_least16_t = u16;
pub type uint_least32_t = u32;
pub type uint_least64_t = u64;
pub type int_fast8_t = i8;
pub type int_fast16_t = i16;
pub type int_fast32_t = i32;
pub type int_fast64_t = i64;
pub type uint_fast8_t = u8;
pub type uint_fast16_t = u16;
pub type uint_fast32_t = u32;
pub type uint_fast64_t = u64;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 128usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 8usize];
    ["Offset of field: __mbstate_t::__mbstate8"]
        [::std::mem::offset_of!(__mbstate_t, __mbstate8) - 0usize];
    ["Offset of field: __mbstate_t::_mbstateL"]
        [::std::mem::offset_of!(__mbstate_t, _mbstateL) - 0usize];
};
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_pthread_handler_rec"]
        [::std::mem::size_of::<__darwin_pthread_handler_rec>() - 24usize];
    ["Alignment of __darwin_pthread_handler_rec"]
        [::std::mem::align_of::<__darwin_pthread_handler_rec>() - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__routine"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __routine) - 0usize];
    ["Offset of field: __darwin_pthread_handler_rec::__arg"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __arg) - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__next"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __next) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_attr_t"][::std::mem::size_of::<_opaque_pthread_attr_t>() - 64usize];
    ["Alignment of _opaque_pthread_attr_t"]
        [::std::mem::align_of::<_opaque_pthread_attr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_attr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_attr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_cond_t"][::std::mem::size_of::<_opaque_pthread_cond_t>() - 48usize];
    ["Alignment of _opaque_pthread_cond_t"]
        [::std::mem::align_of::<_opaque_pthread_cond_t>() - 8usize];
    ["Offset of field: _opaque_pthread_cond_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_cond_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_condattr_t"]
        [::std::mem::size_of::<_opaque_pthread_condattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_condattr_t"]
        [::std::mem::align_of::<_opaque_pthread_condattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_condattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_condattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutex_t"][::std::mem::size_of::<_opaque_pthread_mutex_t>() - 64usize];
    ["Alignment of _opaque_pthread_mutex_t"]
        [::std::mem::align_of::<_opaque_pthread_mutex_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutex_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutex_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutexattr_t"]
        [::std::mem::size_of::<_opaque_pthread_mutexattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_mutexattr_t"]
        [::std::mem::align_of::<_opaque_pthread_mutexattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_once_t"][::std::mem::size_of::<_opaque_pthread_once_t>() - 16usize];
    ["Alignment of _opaque_pthread_once_t"]
        [::std::mem::align_of::<_opaque_pthread_once_t>() - 8usize];
    ["Offset of field: _opaque_pthread_once_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_once_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlock_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlock_t>() - 200usize];
    ["Alignment of _opaque_pthread_rwlock_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlock_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlockattr_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlockattr_t>() - 24usize];
    ["Alignment of _opaque_pthread_rwlockattr_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlockattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_t"][::std::mem::size_of::<_opaque_pthread_t>() - 8192usize];
    ["Alignment of _opaque_pthread_t"][::std::mem::align_of::<_opaque_pthread_t>() - 8usize];
    ["Offset of field: _opaque_pthread_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_t::__cleanup_stack"]
        [::std::mem::offset_of!(_opaque_pthread_t, __cleanup_stack) - 8usize];
    ["Offset of field: _opaque_pthread_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_t, __opaque) - 16usize];
};
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sparse_m_float {
    _unused: [u8; 0],
}
pub type sparse_matrix_float = *mut sparse_m_float;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sparse_m_double {
    _unused: [u8; 0],
}
pub type sparse_matrix_double = *mut sparse_m_double;
pub type sparse_dimension = u64;
pub type sparse_stride = i64;
pub type sparse_index = i64;
pub const sparse_status_SPARSE_SUCCESS: sparse_status = 0;
pub const sparse_status_SPARSE_ILLEGAL_PARAMETER: sparse_status = -1000;
pub const sparse_status_SPARSE_CANNOT_SET_PROPERTY: sparse_status = -1001;
pub const sparse_status_SPARSE_SYSTEM_ERROR: sparse_status = -1002;
pub type sparse_status = ::std::os::raw::c_int;
pub const sparse_matrix_property_SPARSE_UPPER_TRIANGULAR: sparse_matrix_property = 1;
pub const sparse_matrix_property_SPARSE_LOWER_TRIANGULAR: sparse_matrix_property = 2;
pub const sparse_matrix_property_SPARSE_UPPER_SYMMETRIC: sparse_matrix_property = 4;
pub const sparse_matrix_property_SPARSE_LOWER_SYMMETRIC: sparse_matrix_property = 8;
pub type sparse_matrix_property = ::std::os::raw::c_uint;
pub const sparse_norm_SPARSE_NORM_ONE: sparse_norm = 171;
pub const sparse_norm_SPARSE_NORM_TWO: sparse_norm = 173;
pub const sparse_norm_SPARSE_NORM_INF: sparse_norm = 175;
pub const sparse_norm_SPARSE_NORM_R1: sparse_norm = 179;
pub type sparse_norm = ::std::os::raw::c_uint;
pub const CBLAS_ORDER_CblasRowMajor: CBLAS_ORDER = 101;
pub const CBLAS_ORDER_CblasColMajor: CBLAS_ORDER = 102;
pub type CBLAS_ORDER = ::std::os::raw::c_uint;
pub const CBLAS_TRANSPOSE_CblasNoTrans: CBLAS_TRANSPOSE = 111;
pub const CBLAS_TRANSPOSE_CblasTrans: CBLAS_TRANSPOSE = 112;
pub const CBLAS_TRANSPOSE_CblasConjTrans: CBLAS_TRANSPOSE = 113;
pub const CBLAS_TRANSPOSE_AtlasConj: CBLAS_TRANSPOSE = 114;
pub type CBLAS_TRANSPOSE = ::std::os::raw::c_uint;
pub const CBLAS_UPLO_CblasUpper: CBLAS_UPLO = 121;
pub const CBLAS_UPLO_CblasLower: CBLAS_UPLO = 122;
pub type CBLAS_UPLO = ::std::os::raw::c_uint;
pub const CBLAS_DIAG_CblasNonUnit: CBLAS_DIAG = 131;
pub const CBLAS_DIAG_CblasUnit: CBLAS_DIAG = 132;
pub type CBLAS_DIAG = ::std::os::raw::c_uint;
pub const CBLAS_SIDE_CblasLeft: CBLAS_SIDE = 141;
pub const CBLAS_SIDE_CblasRight: CBLAS_SIDE = 142;
pub type CBLAS_SIDE = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn cblas_errprn(
        __ierr: ::std::os::raw::c_int,
        __info: ::std::os::raw::c_int,
        __form: *mut ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cblas_xerbla(
        __p: ::std::os::raw::c_int,
        __rout: *mut ::std::os::raw::c_char,
        __form: *mut ::std::os::raw::c_char,
        ...
    );
}
unsafe extern "C" {
    pub fn cblas_sdsdot(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dsdot(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_sdot(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_ddot(
        __N: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *const f64,
        __incY: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_cdotu_sub(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __dotu: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cdotc_sub(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __dotc: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotu_sub(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __dotu: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotc_sub(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __dotc: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_snrm2(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_sasum(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dnrm2(
        __N: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_dasum(
        __N: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scnrm2(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_scasum(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dznrm2(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_dzasum(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_isamax(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cblas_idamax(
        __N: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cblas_icamax(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cblas_izamax(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cblas_sswap(
        __N: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_scopy(
        __N: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_saxpy(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_saxpby(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_sset(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dswap(
        __N: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dcopy(
        __N: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_daxpy(
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_daxpby(
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_dset(
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cswap(
        __N: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ccopy(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_caxpy(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_caxpby(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_cset(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zswap(
        __N: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zcopy(
        __N: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpy(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_zaxpby(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn catlas_zset(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_srotg(__a: *mut f32, __b: *mut f32, __c: *mut f32, __s: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_srotmg(__d1: *mut f32, __d2: *mut f32, __b1: *mut f32, __b2: f32, __P: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_srot(
        __N: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
        __c: f32,
        __s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_srotm(
        __N: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
        __P: *const f32,
    );
}
unsafe extern "C" {
    pub fn cblas_drotg(__a: *mut f64, __b: *mut f64, __c: *mut f64, __s: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_drotmg(__d1: *mut f64, __d2: *mut f64, __b1: *mut f64, __b2: f64, __P: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_drot(
        __N: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
        __c: f64,
        __s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_drotm(
        __N: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
        __P: *const f64,
    );
}
unsafe extern "C" {
    pub fn cblas_sscal(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dscal(
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cscal(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zscal(
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_csscal(
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zdscal(
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_crotg(
        __a: *mut ::std::os::raw::c_void,
        __b: *mut ::std::os::raw::c_void,
        __c: *mut ::std::os::raw::c_void,
        __s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zrotg(
        __a: *mut ::std::os::raw::c_void,
        __b: *mut ::std::os::raw::c_void,
        __c: *mut ::std::os::raw::c_void,
        __s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_csrot(
        __N: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __c: f32,
        __s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_zdrot(
        __N: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __c: f64,
        __s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_sgbmv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __KL: ::std::os::raw::c_int,
        __KU: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_strmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_stbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_stpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const f32,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_strsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_stbsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_stpsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const f32,
        __X: *mut f32,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dgbmv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __KL: ::std::os::raw::c_int,
        __KU: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const f64,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const f64,
        __X: *mut f64,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cgbmv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __KL: ::std::os::raw::c_int,
        __KU: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zgbmv(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __KL: ::std::os::raw::c_int,
        __KU: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpsv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __N: ::std::os::raw::c_int,
        __Ap: *const ::std::os::raw::c_void,
        __X: *mut ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_sspmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __Ap: *const f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __beta: f32,
        __Y: *mut f32,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_sger(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
        __A: *mut f32,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __A: *mut f32,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Ap: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
        __A: *mut f32,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const f32,
        __incX: ::std::os::raw::c_int,
        __Y: *const f32,
        __incY: ::std::os::raw::c_int,
        __A: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dsbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dspmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __Ap: *const f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __beta: f64,
        __Y: *mut f64,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dger(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *const f64,
        __incY: ::std::os::raw::c_int,
        __A: *mut f64,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __A: *mut f64,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Ap: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *const f64,
        __incY: ::std::os::raw::c_int,
        __A: *mut f64,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const f64,
        __incX: ::std::os::raw::c_int,
        __Y: *const f64,
        __incY: ::std::os::raw::c_int,
        __A: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_chemv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_chbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_chpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __Ap: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cgeru(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cgerc(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cher(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zhbmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpmv(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __Ap: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __Y: *mut ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zgeru(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zgerc(
        __Order: CBLAS_ORDER,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zher(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __A: *mut ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr2(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __X: *const ::std::os::raw::c_void,
        __incX: ::std::os::raw::c_int,
        __Y: *const ::std::os::raw::c_void,
        __incY: ::std::os::raw::c_int,
        __Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemm(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __TransB: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __B: *const f32,
        __ldb: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut f32,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __B: *const f32,
        __ldb: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut f32,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyrk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut f32,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __B: *const f32,
        __ldb: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut f32,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_strmm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __B: *mut f32,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_strsm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __B: *mut f32,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemm(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __TransB: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __B: *const f64,
        __ldb: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut f64,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __B: *const f64,
        __ldb: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut f64,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyrk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut f64,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __B: *const f64,
        __ldb: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut f64,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __B: *mut f64,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __B: *mut f64,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __TransB: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_csymm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_csyrk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_csyr2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *mut ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *mut ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm(
        __Order: CBLAS_ORDER,
        __TransA: CBLAS_TRANSPOSE,
        __TransB: CBLAS_TRANSPOSE,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zsymm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyrk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyr2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *mut ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __TransA: CBLAS_TRANSPOSE,
        __Diag: CBLAS_DIAG,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *mut ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_chemm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cherk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: f32,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemm(
        __Order: CBLAS_ORDER,
        __Side: CBLAS_SIDE,
        __Uplo: CBLAS_UPLO,
        __M: ::std::os::raw::c_int,
        __N: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: *const ::std::os::raw::c_void,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zherk(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2k(
        __Order: CBLAS_ORDER,
        __Uplo: CBLAS_UPLO,
        __Trans: CBLAS_TRANSPOSE,
        __N: ::std::os::raw::c_int,
        __K: ::std::os::raw::c_int,
        __alpha: *const ::std::os::raw::c_void,
        __A: *const ::std::os::raw::c_void,
        __lda: ::std::os::raw::c_int,
        __B: *const ::std::os::raw::c_void,
        __ldb: ::std::os::raw::c_int,
        __beta: f64,
        __C: *mut ::std::os::raw::c_void,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn appleblas_sgeadd(
        __order: CBLAS_ORDER,
        __transA: CBLAS_TRANSPOSE,
        __transB: CBLAS_TRANSPOSE,
        __m: ::std::os::raw::c_int,
        __n: ::std::os::raw::c_int,
        __alpha: f32,
        __A: *const f32,
        __lda: ::std::os::raw::c_int,
        __beta: f32,
        __B: *const f32,
        __ldb: ::std::os::raw::c_int,
        __C: *mut f32,
        __ldc: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn appleblas_dgeadd(
        __order: CBLAS_ORDER,
        __transA: CBLAS_TRANSPOSE,
        __transB: CBLAS_TRANSPOSE,
        __m: ::std::os::raw::c_int,
        __n: ::std::os::raw::c_int,
        __alpha: f64,
        __A: *const f64,
        __lda: ::std::os::raw::c_int,
        __beta: f64,
        __B: *const f64,
        __ldb: ::std::os::raw::c_int,
        __C: *mut f64,
        __ldc: ::std::os::raw::c_int,
    );
}
pub type BLASParamErrorProc = ::std::option::Option<
    unsafe extern "C" fn(
        funcName: *const ::std::os::raw::c_char,
        paramName: *const ::std::os::raw::c_char,
        paramPos: *const ::std::os::raw::c_int,
        paramValue: *const ::std::os::raw::c_int,
    ),
>;
unsafe extern "C" {
    pub fn SetBLASParamErrorProc(__ErrorProc: BLASParamErrorProc);
}
unsafe extern "C" {
    pub fn sparse_inner_product_dense_float(
        nz: sparse_dimension,
        x: *const f32,
        indx: *const sparse_index,
        y: *const f32,
        incy: sparse_stride,
    ) -> f32;
}
unsafe extern "C" {
    pub fn sparse_inner_product_dense_double(
        nz: sparse_dimension,
        x: *const f64,
        indx: *const sparse_index,
        y: *const f64,
        incy: sparse_stride,
    ) -> f64;
}
unsafe extern "C" {
    pub fn sparse_inner_product_sparse_float(
        nzx: sparse_dimension,
        nzy: sparse_dimension,
        x: *const f32,
        indx: *const sparse_index,
        y: *const f32,
        indy: *const sparse_index,
    ) -> f32;
}
unsafe extern "C" {
    pub fn sparse_inner_product_sparse_double(
        nzx: sparse_dimension,
        nzy: sparse_dimension,
        x: *const f64,
        indx: *const sparse_index,
        y: *const f64,
        indy: *const sparse_index,
    ) -> f64;
}
unsafe extern "C" {
    pub fn sparse_vector_add_with_scale_dense_float(
        nz: sparse_dimension,
        alpha: f32,
        x: *const f32,
        indx: *const sparse_index,
        y: *mut f32,
        incy: sparse_stride,
    );
}
unsafe extern "C" {
    pub fn sparse_vector_add_with_scale_dense_double(
        nz: sparse_dimension,
        alpha: f64,
        x: *const f64,
        indx: *const sparse_index,
        y: *mut f64,
        incy: sparse_stride,
    );
}
unsafe extern "C" {
    pub fn sparse_vector_norm_float(
        nz: sparse_dimension,
        x: *const f32,
        indx: *const sparse_index,
        norm: sparse_norm,
    ) -> f32;
}
unsafe extern "C" {
    pub fn sparse_vector_norm_double(
        nz: sparse_dimension,
        x: *const f64,
        indx: *const sparse_index,
        norm: sparse_norm,
    ) -> f64;
}
unsafe extern "C" {
    pub fn sparse_matrix_vector_product_dense_float(
        transa: CBLAS_TRANSPOSE,
        alpha: f32,
        A: sparse_matrix_float,
        x: *const f32,
        incx: sparse_stride,
        y: *mut f32,
        incy: sparse_stride,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_vector_product_dense_double(
        transa: CBLAS_TRANSPOSE,
        alpha: f64,
        A: sparse_matrix_double,
        x: *const f64,
        incx: sparse_stride,
        y: *mut f64,
        incy: sparse_stride,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_vector_triangular_solve_dense_float(
        transt: CBLAS_TRANSPOSE,
        alpha: f32,
        T: sparse_matrix_float,
        x: *mut f32,
        incx: sparse_stride,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_vector_triangular_solve_dense_double(
        transt: CBLAS_TRANSPOSE,
        alpha: f64,
        T: sparse_matrix_double,
        x: *mut f64,
        incx: sparse_stride,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_outer_product_dense_float(
        M: sparse_dimension,
        N: sparse_dimension,
        nz: sparse_dimension,
        alpha: f32,
        x: *const f32,
        incx: sparse_stride,
        y: *const f32,
        indy: *const sparse_index,
        C: *mut sparse_matrix_float,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_outer_product_dense_double(
        M: sparse_dimension,
        N: sparse_dimension,
        nz: sparse_dimension,
        alpha: f64,
        x: *const f64,
        incx: sparse_stride,
        y: *const f64,
        indy: *const sparse_index,
        C: *mut sparse_matrix_double,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_permute_rows_float(
        A: sparse_matrix_float,
        perm: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_permute_rows_double(
        A: sparse_matrix_double,
        perm: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_permute_cols_float(
        A: sparse_matrix_float,
        perm: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_permute_cols_double(
        A: sparse_matrix_double,
        perm: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_elementwise_norm_float(A: sparse_matrix_float, norm: sparse_norm) -> f32;
}
unsafe extern "C" {
    pub fn sparse_elementwise_norm_double(A: sparse_matrix_double, norm: sparse_norm) -> f64;
}
unsafe extern "C" {
    pub fn sparse_operator_norm_float(A: sparse_matrix_float, norm: sparse_norm) -> f32;
}
unsafe extern "C" {
    pub fn sparse_operator_norm_double(A: sparse_matrix_double, norm: sparse_norm) -> f64;
}
unsafe extern "C" {
    pub fn sparse_matrix_trace_float(A: sparse_matrix_float, offset: sparse_index) -> f32;
}
unsafe extern "C" {
    pub fn sparse_matrix_trace_double(A: sparse_matrix_double, offset: sparse_index) -> f64;
}
unsafe extern "C" {
    pub fn sparse_matrix_product_dense_float(
        order: CBLAS_ORDER,
        transa: CBLAS_TRANSPOSE,
        n: sparse_dimension,
        alpha: f32,
        A: sparse_matrix_float,
        B: *const f32,
        ldb: sparse_dimension,
        C: *mut f32,
        ldc: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_product_dense_double(
        order: CBLAS_ORDER,
        transa: CBLAS_TRANSPOSE,
        n: sparse_dimension,
        alpha: f64,
        A: sparse_matrix_double,
        B: *const f64,
        ldb: sparse_dimension,
        C: *mut f64,
        ldc: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_product_sparse_float(
        order: CBLAS_ORDER,
        transa: CBLAS_TRANSPOSE,
        alpha: f32,
        A: sparse_matrix_float,
        B: sparse_matrix_float,
        C: *mut f32,
        ldc: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_product_sparse_double(
        order: CBLAS_ORDER,
        transa: CBLAS_TRANSPOSE,
        alpha: f64,
        A: sparse_matrix_double,
        B: sparse_matrix_double,
        C: *mut f64,
        ldc: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_triangular_solve_dense_float(
        order: CBLAS_ORDER,
        transt: CBLAS_TRANSPOSE,
        nrhs: sparse_dimension,
        alpha: f32,
        T: sparse_matrix_float,
        B: *mut f32,
        ldb: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_triangular_solve_dense_double(
        order: CBLAS_ORDER,
        transt: CBLAS_TRANSPOSE,
        nrhs: sparse_dimension,
        alpha: f64,
        T: sparse_matrix_double,
        B: *mut f64,
        ldb: sparse_dimension,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_create_float(
        M: sparse_dimension,
        N: sparse_dimension,
    ) -> sparse_matrix_float;
}
unsafe extern "C" {
    pub fn sparse_matrix_create_double(
        M: sparse_dimension,
        N: sparse_dimension,
    ) -> sparse_matrix_double;
}
unsafe extern "C" {
    pub fn sparse_insert_entry_float(
        A: sparse_matrix_float,
        val: f32,
        i: sparse_index,
        j: sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_entry_double(
        A: sparse_matrix_double,
        val: f64,
        i: sparse_index,
        j: sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_entries_float(
        A: sparse_matrix_float,
        N: sparse_dimension,
        val: *const f32,
        indx: *const sparse_index,
        jndx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_entries_double(
        A: sparse_matrix_double,
        N: sparse_dimension,
        val: *const f64,
        indx: *const sparse_index,
        jndx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_col_float(
        A: sparse_matrix_float,
        j: sparse_index,
        nz: sparse_dimension,
        val: *const f32,
        indx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_col_double(
        A: sparse_matrix_double,
        j: sparse_index,
        nz: sparse_dimension,
        val: *const f64,
        indx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_row_float(
        A: sparse_matrix_float,
        i: sparse_index,
        nz: sparse_dimension,
        val: *const f32,
        jndx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_row_double(
        A: sparse_matrix_double,
        i: sparse_index,
        nz: sparse_dimension,
        val: *const f64,
        jndx: *const sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_sparse_row_float(
        A: sparse_matrix_float,
        row: sparse_index,
        column_start: sparse_index,
        column_end: *mut sparse_index,
        nz: sparse_dimension,
        val: *mut f32,
        jndx: *mut sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_sparse_row_double(
        A: sparse_matrix_double,
        row: sparse_index,
        column_start: sparse_index,
        column_end: *mut sparse_index,
        nz: sparse_dimension,
        val: *mut f64,
        jndx: *mut sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_sparse_column_float(
        A: sparse_matrix_float,
        column: sparse_index,
        row_start: sparse_index,
        row_end: *mut sparse_index,
        nz: sparse_dimension,
        val: *mut f32,
        indx: *mut sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_sparse_column_double(
        A: sparse_matrix_double,
        column: sparse_index,
        row_start: sparse_index,
        row_end: *mut sparse_index,
        nz: sparse_dimension,
        val: *mut f64,
        indx: *mut sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_matrix_block_create_float(
        Mb: sparse_dimension,
        Nb: sparse_dimension,
        k: sparse_dimension,
        l: sparse_dimension,
    ) -> sparse_matrix_float;
}
unsafe extern "C" {
    pub fn sparse_matrix_block_create_double(
        Mb: sparse_dimension,
        Nb: sparse_dimension,
        k: sparse_dimension,
        l: sparse_dimension,
    ) -> sparse_matrix_double;
}
unsafe extern "C" {
    pub fn sparse_matrix_variable_block_create_float(
        Mb: sparse_dimension,
        Nb: sparse_dimension,
        K: *const sparse_dimension,
        L: *const sparse_dimension,
    ) -> sparse_matrix_float;
}
unsafe extern "C" {
    pub fn sparse_matrix_variable_block_create_double(
        Mb: sparse_dimension,
        Nb: sparse_dimension,
        K: *const sparse_dimension,
        L: *const sparse_dimension,
    ) -> sparse_matrix_double;
}
unsafe extern "C" {
    pub fn sparse_insert_block_float(
        A: sparse_matrix_float,
        val: *const f32,
        row_stride: sparse_dimension,
        col_stride: sparse_dimension,
        bi: sparse_index,
        bj: sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_insert_block_double(
        A: sparse_matrix_double,
        val: *const f64,
        row_stride: sparse_dimension,
        col_stride: sparse_dimension,
        bi: sparse_index,
        bj: sparse_index,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_block_float(
        A: sparse_matrix_float,
        bi: sparse_index,
        bj: sparse_index,
        row_stride: sparse_dimension,
        col_stride: sparse_dimension,
        val: *mut f32,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_extract_block_double(
        A: sparse_matrix_double,
        bi: sparse_index,
        bj: sparse_index,
        row_stride: sparse_dimension,
        col_stride: sparse_dimension,
        val: *mut f64,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_get_block_dimension_for_row(
        A: *mut ::std::os::raw::c_void,
        i: sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_get_block_dimension_for_col(
        A: *mut ::std::os::raw::c_void,
        j: sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_commit(A: *mut ::std::os::raw::c_void) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_property(
        A: *mut ::std::os::raw::c_void,
        pname: sparse_matrix_property,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_set_matrix_property(
        A: *mut ::std::os::raw::c_void,
        pname: sparse_matrix_property,
    ) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_number_of_rows(A: *mut ::std::os::raw::c_void) -> sparse_dimension;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_number_of_columns(A: *mut ::std::os::raw::c_void) -> sparse_dimension;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_nonzero_count(
        A: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_nonzero_count_for_row(
        A: *mut ::std::os::raw::c_void,
        i: sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_get_matrix_nonzero_count_for_column(
        A: *mut ::std::os::raw::c_void,
        j: sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_matrix_destroy(A: *mut ::std::os::raw::c_void) -> sparse_status;
}
unsafe extern "C" {
    pub fn sparse_get_vector_nonzero_count_float(
        N: sparse_dimension,
        x: *const f32,
        incx: sparse_stride,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_get_vector_nonzero_count_double(
        N: sparse_dimension,
        x: *const f64,
        incx: sparse_stride,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_pack_vector_float(
        N: sparse_dimension,
        nz: sparse_dimension,
        x: *const f32,
        incx: sparse_stride,
        y: *mut f32,
        indy: *mut sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_pack_vector_double(
        N: sparse_dimension,
        nz: sparse_dimension,
        x: *const f64,
        incx: sparse_stride,
        y: *mut f64,
        indy: *mut sparse_index,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn sparse_unpack_vector_float(
        N: sparse_dimension,
        nz: sparse_dimension,
        zero: bool,
        x: *const f32,
        indx: *const sparse_index,
        y: *mut f32,
        incy: sparse_stride,
    );
}
unsafe extern "C" {
    pub fn sparse_unpack_vector_double(
        N: sparse_dimension,
        nz: sparse_dimension,
        zero: bool,
        x: *const f64,
        indx: *const sparse_index,
        y: *mut f64,
        incy: sparse_stride,
    );
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
