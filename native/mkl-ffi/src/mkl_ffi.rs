/* automatically generated by csbindgen */

#[allow(unused)]
use ::std::os::raw::*;

use super::mkl::*;


#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dcabs1(
    z: *const c_void
) -> f64
{
    cblas_dcabs1(
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scabs1(
    c: *const c_void
) -> f32
{
    cblas_scabs1(
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdot(
    N: c_int,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int
) -> f32
{
    cblas_sdot(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdoti(
    N: c_int,
    X: *const f32,
    indx: *const c_int,
    Y: *const f32
) -> f32
{
    cblas_sdoti(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ddot(
    N: c_int,
    X: *const f64,
    incX: c_int,
    Y: *const f64,
    incY: c_int
) -> f64
{
    cblas_ddot(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ddoti(
    N: c_int,
    X: *const f64,
    indx: *const c_int,
    Y: *const f64
) -> f64
{
    cblas_ddoti(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsdot(
    N: c_int,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int
) -> f64
{
    cblas_dsdot(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdsdot(
    N: c_int,
    sb: f32,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int
) -> f32
{
    cblas_sdsdot(
        N,
        sb,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotu_sub(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    dotu: *mut c_void
)
{
    cblas_cdotu_sub(
        N,
        X,
        incX,
        Y,
        incY,
        dotu
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotui_sub(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *const c_void,
    dotui: *mut c_void
)
{
    cblas_cdotui_sub(
        N,
        X,
        indx,
        Y,
        dotui
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotc_sub(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    dotc: *mut c_void
)
{
    cblas_cdotc_sub(
        N,
        X,
        incX,
        Y,
        incY,
        dotc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotci_sub(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *const c_void,
    dotui: *mut c_void
)
{
    cblas_cdotci_sub(
        N,
        X,
        indx,
        Y,
        dotui
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotu_sub(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    dotu: *mut c_void
)
{
    cblas_zdotu_sub(
        N,
        X,
        incX,
        Y,
        incY,
        dotu
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotui_sub(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *const c_void,
    dotui: *mut c_void
)
{
    cblas_zdotui_sub(
        N,
        X,
        indx,
        Y,
        dotui
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotc_sub(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    dotc: *mut c_void
)
{
    cblas_zdotc_sub(
        N,
        X,
        incX,
        Y,
        incY,
        dotc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotci_sub(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *const c_void,
    dotui: *mut c_void
)
{
    cblas_zdotci_sub(
        N,
        X,
        indx,
        Y,
        dotui
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_snrm2(
    N: c_int,
    X: *const f32,
    incX: c_int
) -> f32
{
    cblas_snrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sasum(
    N: c_int,
    X: *const f32,
    incX: c_int
) -> f32
{
    cblas_sasum(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dnrm2(
    N: c_int,
    X: *const f64,
    incX: c_int
) -> f64
{
    cblas_dnrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dasum(
    N: c_int,
    X: *const f64,
    incX: c_int
) -> f64
{
    cblas_dasum(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scnrm2(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> f32
{
    cblas_scnrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scasum(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> f32
{
    cblas_scasum(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dznrm2(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> f64
{
    cblas_dznrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dzasum(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> f64
{
    cblas_dzasum(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_isamax(
    N: c_int,
    X: *const f32,
    incX: c_int
) -> usize
{
    cblas_isamax(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idamax(
    N: c_int,
    X: *const f64,
    incX: c_int
) -> usize
{
    cblas_idamax(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icamax(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> usize
{
    cblas_icamax(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izamax(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> usize
{
    cblas_izamax(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_isamin(
    N: c_int,
    X: *const f32,
    incX: c_int
) -> usize
{
    cblas_isamin(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idamin(
    N: c_int,
    X: *const f64,
    incX: c_int
) -> usize
{
    cblas_idamin(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icamin(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> usize
{
    cblas_icamin(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izamin(
    N: c_int,
    X: *const c_void,
    incX: c_int
) -> usize
{
    cblas_izamin(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sswap(
    N: c_int,
    X: *mut f32,
    incX: c_int,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_sswap(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scopy(
    N: c_int,
    X: *const f32,
    incX: c_int,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_scopy(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpy(
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_saxpy(
        N,
        alpha,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpby(
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_saxpby(
        N,
        alpha,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpyi(
    N: c_int,
    alpha: f32,
    X: *const f32,
    indx: *const c_int,
    Y: *mut f32
)
{
    cblas_saxpyi(
        N,
        alpha,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgthr(
    N: c_int,
    Y: *const f32,
    X: *mut f32,
    indx: *const c_int
)
{
    cblas_sgthr(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgthrz(
    N: c_int,
    Y: *mut f32,
    X: *mut f32,
    indx: *const c_int
)
{
    cblas_sgthrz(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssctr(
    N: c_int,
    X: *const f32,
    indx: *const c_int,
    Y: *mut f32
)
{
    cblas_ssctr(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotg(
    a: *mut f32,
    b: *mut f32,
    c: *mut f32,
    s: *mut f32
)
{
    cblas_srotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dswap(
    N: c_int,
    X: *mut f64,
    incX: c_int,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dswap(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dcopy(
    N: c_int,
    X: *const f64,
    incX: c_int,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dcopy(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpy(
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_daxpy(
        N,
        alpha,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpby(
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_daxpby(
        N,
        alpha,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpyi(
    N: c_int,
    alpha: f64,
    X: *const f64,
    indx: *const c_int,
    Y: *mut f64
)
{
    cblas_daxpyi(
        N,
        alpha,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgthr(
    N: c_int,
    Y: *const f64,
    X: *mut f64,
    indx: *const c_int
)
{
    cblas_dgthr(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgthrz(
    N: c_int,
    Y: *mut f64,
    X: *mut f64,
    indx: *const c_int
)
{
    cblas_dgthrz(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsctr(
    N: c_int,
    X: *const f64,
    indx: *const c_int,
    Y: *mut f64
)
{
    cblas_dsctr(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotg(
    a: *mut f64,
    b: *mut f64,
    c: *mut f64,
    s: *mut f64
)
{
    cblas_drotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cswap(
    N: c_int,
    X: *mut c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_cswap(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ccopy(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_ccopy(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpy(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_caxpy(
        N,
        alpha,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpby(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_caxpby(
        N,
        alpha,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpyi(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    indx: *const c_int,
    Y: *mut c_void
)
{
    cblas_caxpyi(
        N,
        alpha,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgthr(
    N: c_int,
    Y: *const c_void,
    X: *mut c_void,
    indx: *const c_int
)
{
    cblas_cgthr(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgthrz(
    N: c_int,
    Y: *mut c_void,
    X: *mut c_void,
    indx: *const c_int
)
{
    cblas_cgthrz(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csctr(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *mut c_void
)
{
    cblas_csctr(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_crotg(
    a: *mut c_void,
    b: *const c_void,
    c: *mut f32,
    s: *mut c_void
)
{
    cblas_crotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zswap(
    N: c_int,
    X: *mut c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zswap(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zcopy(
    N: c_int,
    X: *const c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zcopy(
        N,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpy(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zaxpy(
        N,
        alpha,
        X,
        incX,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpby(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zaxpby(
        N,
        alpha,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpyi(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    indx: *const c_int,
    Y: *mut c_void
)
{
    cblas_zaxpyi(
        N,
        alpha,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgthr(
    N: c_int,
    Y: *const c_void,
    X: *mut c_void,
    indx: *const c_int
)
{
    cblas_zgthr(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgthrz(
    N: c_int,
    Y: *mut c_void,
    X: *mut c_void,
    indx: *const c_int
)
{
    cblas_zgthrz(
        N,
        Y,
        X,
        indx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsctr(
    N: c_int,
    X: *const c_void,
    indx: *const c_int,
    Y: *mut c_void
)
{
    cblas_zsctr(
        N,
        X,
        indx,
        Y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zrotg(
    a: *mut c_void,
    b: *const c_void,
    c: *mut f64,
    s: *mut c_void
)
{
    cblas_zrotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotmg(
    d1: *mut f32,
    d2: *mut f32,
    b1: *mut f32,
    b2: f32,
    P: *mut f32
)
{
    cblas_srotmg(
        d1,
        d2,
        b1,
        b2,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srot(
    N: c_int,
    X: *mut f32,
    incX: c_int,
    Y: *mut f32,
    incY: c_int,
    c: f32,
    s: f32
)
{
    cblas_srot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sroti(
    N: c_int,
    X: *mut f32,
    indx: *const c_int,
    Y: *mut f32,
    c: f32,
    s: f32
)
{
    cblas_sroti(
        N,
        X,
        indx,
        Y,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotm(
    N: c_int,
    X: *mut f32,
    incX: c_int,
    Y: *mut f32,
    incY: c_int,
    P: *const f32
)
{
    cblas_srotm(
        N,
        X,
        incX,
        Y,
        incY,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotmg(
    d1: *mut f64,
    d2: *mut f64,
    b1: *mut f64,
    b2: f64,
    P: *mut f64
)
{
    cblas_drotmg(
        d1,
        d2,
        b1,
        b2,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drot(
    N: c_int,
    X: *mut f64,
    incX: c_int,
    Y: *mut f64,
    incY: c_int,
    c: f64,
    s: f64
)
{
    cblas_drot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotm(
    N: c_int,
    X: *mut f64,
    incX: c_int,
    Y: *mut f64,
    incY: c_int,
    P: *const f64
)
{
    cblas_drotm(
        N,
        X,
        incX,
        Y,
        incY,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_droti(
    N: c_int,
    X: *mut f64,
    indx: *const c_int,
    Y: *mut f64,
    c: f64,
    s: f64
)
{
    cblas_droti(
        N,
        X,
        indx,
        Y,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csrot(
    N: c_int,
    X: *mut c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int,
    c: f32,
    s: f32
)
{
    cblas_csrot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdrot(
    N: c_int,
    X: *mut c_void,
    incX: c_int,
    Y: *mut c_void,
    incY: c_int,
    c: f64,
    s: f64
)
{
    cblas_zdrot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sscal(
    N: c_int,
    alpha: f32,
    X: *mut f32,
    incX: c_int
)
{
    cblas_sscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dscal(
    N: c_int,
    alpha: f64,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cscal(
    N: c_int,
    alpha: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_cscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zscal(
    N: c_int,
    alpha: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_zscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csscal(
    N: c_int,
    alpha: f32,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_csscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdscal(
    N: c_int,
    alpha: f64,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_zdscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_sgemv(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgbmv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    KL: c_int,
    KU: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_sgbmv(
        Layout,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const f32,
    lda: c_int,
    X: *mut f32,
    incX: c_int
)
{
    cblas_strmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const f32,
    lda: c_int,
    X: *mut f32,
    incX: c_int
)
{
    cblas_stbmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const f32,
    X: *mut f32,
    incX: c_int
)
{
    cblas_stpmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const f32,
    lda: c_int,
    X: *mut f32,
    incX: c_int
)
{
    cblas_strsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stbsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const f32,
    lda: c_int,
    X: *mut f32,
    incX: c_int
)
{
    cblas_stbsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stpsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const f32,
    X: *mut f32,
    incX: c_int
)
{
    cblas_stpsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dgemv(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgbmv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    KL: c_int,
    KU: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dgbmv(
        Layout,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const f64,
    lda: c_int,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtrmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const f64,
    lda: c_int,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtbmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const f64,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtpmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const f64,
    lda: c_int,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtrsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtbsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const f64,
    lda: c_int,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtbsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtpsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const f64,
    X: *mut f64,
    incX: c_int
)
{
    cblas_dtpsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_cgemv(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgbmv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    KL: c_int,
    KU: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_cgbmv(
        Layout,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctrmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctbmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctpmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctrsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctbsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctbsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctpsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ctpsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zgemv(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgbmv(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    KL: c_int,
    KU: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zgbmv(
        Layout,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztrmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztbmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztpmv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztrsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztbsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    K: c_int,
    A: *const c_void,
    lda: c_int,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztbsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztpsv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: c_int,
    Ap: *const c_void,
    X: *mut c_void,
    incX: c_int
)
{
    cblas_ztpsv(
        Layout,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssymv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_ssymv(
        Layout,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_ssbmv(
        Layout,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    Ap: *const f32,
    X: *const f32,
    incX: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int
)
{
    cblas_sspmv(
        Layout,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sger(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int,
    A: *mut f32,
    lda: c_int
)
{
    cblas_sger(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    A: *mut f32,
    lda: c_int
)
{
    cblas_ssyr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    Ap: *mut f32
)
{
    cblas_sspr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int,
    A: *mut f32,
    lda: c_int
)
{
    cblas_ssyr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    Y: *const f32,
    incY: c_int,
    A: *mut f32
)
{
    cblas_sspr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsymv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dsymv(
        Layout,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dsbmv(
        Layout,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    Ap: *const f64,
    X: *const f64,
    incX: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int
)
{
    cblas_dspmv(
        Layout,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dger(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    Y: *const f64,
    incY: c_int,
    A: *mut f64,
    lda: c_int
)
{
    cblas_dger(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    A: *mut f64,
    lda: c_int
)
{
    cblas_dsyr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    Ap: *mut f64
)
{
    cblas_dspr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    Y: *const f64,
    incY: c_int,
    A: *mut f64,
    lda: c_int
)
{
    cblas_dsyr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    Y: *const f64,
    incY: c_int,
    A: *mut f64
)
{
    cblas_dspr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chemv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_chemv(
        Layout,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_chbmv(
        Layout,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    Ap: *const c_void,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_chpmv(
        Layout,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgeru(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_cgeru(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgerc(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_cgerc(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const c_void,
    incX: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_cher(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f32,
    X: *const c_void,
    incX: c_int,
    A: *mut c_void
)
{
    cblas_chpr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_cher2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    Ap: *mut c_void
)
{
    cblas_chpr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhemv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zhemv(
        Layout,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhbmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zhbmv(
        Layout,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpmv(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    Ap: *const c_void,
    X: *const c_void,
    incX: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int
)
{
    cblas_zhpmv(
        Layout,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgeru(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_zgeru(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgerc(
    Layout: CBLAS_LAYOUT,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_zgerc(
        Layout,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const c_void,
    incX: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_zher(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpr(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: f64,
    X: *const c_void,
    incX: c_int,
    A: *mut c_void
)
{
    cblas_zhpr(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    A: *mut c_void,
    lda: c_int
)
{
    cblas_zher2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpr2(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    Y: *const c_void,
    incY: c_int,
    Ap: *mut c_void
)
{
    cblas_zhpr2(
        Layout,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *const f32,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_sgemm(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const f32,
    A_Array: *mut *const f32,
    lda_Array: *const c_int,
    B_Array: *mut *const f32,
    ldb_Array: *const c_int,
    beta_Array: *const f32,
    C_Array: *mut *mut f32,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_sgemm_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    stridea: c_int,
    B: *const f32,
    ldb: c_int,
    strideb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_sgemm_batch_strided(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        beta,
        C,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemmt(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *const f32,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_sgemmt(
        Layout,
        Uplo,
        TransA,
        TransB,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssymm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *const f32,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_ssymm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyrk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_ssyrk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *const f32,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_ssyr2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strmm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *mut f32,
    ldb: c_int
)
{
    cblas_strmm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    B: *mut f32,
    ldb: c_int
)
{
    cblas_strsm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsm_batch(
    Layout: CBLAS_LAYOUT,
    Side_Array: *const CBLAS_SIDE,
    Uplo_Array: *const CBLAS_UPLO,
    TransA_Array: *const CBLAS_TRANSPOSE,
    Diag_Array: *const CBLAS_DIAG,
    M_Array: *const c_int,
    N_Array: *const c_int,
    alpha_Array: *const f32,
    A_Array: *mut *const f32,
    lda_Array: *const c_int,
    B_Array: *mut *mut f32,
    ldb_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_strsm_batch(
        Layout,
        Side_Array,
        Uplo_Array,
        TransA_Array,
        Diag_Array,
        M_Array,
        N_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsm_batch_strided(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    stridea: c_int,
    B: *mut f32,
    ldb: c_int,
    strideb: c_int,
    batch_size: c_int
)
{
    cblas_strsm_batch_strided(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *const f64,
    ldb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dgemm(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const f64,
    A_Array: *mut *const f64,
    lda_Array: *const c_int,
    B_Array: *mut *const f64,
    ldb_Array: *const c_int,
    beta_Array: *const f64,
    C_Array: *mut *mut f64,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_dgemm_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    stridea: c_int,
    B: *const f64,
    ldb: c_int,
    strideb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_dgemm_batch_strided(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        beta,
        C,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemmt(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *const f64,
    ldb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dgemmt(
        Layout,
        Uplo,
        TransA,
        TransB,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsymm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *const f64,
    ldb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dsymm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyrk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dsyrk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *const f64,
    ldb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dsyr2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrmm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *mut f64,
    ldb: c_int
)
{
    cblas_dtrmm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    B: *mut f64,
    ldb: c_int
)
{
    cblas_dtrsm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsm_batch(
    Layout: CBLAS_LAYOUT,
    Side_Array: *const CBLAS_SIDE,
    Uplo_Array: *const CBLAS_UPLO,
    Transa_Array: *const CBLAS_TRANSPOSE,
    Diag_Array: *const CBLAS_DIAG,
    M_Array: *const c_int,
    N_Array: *const c_int,
    alpha_Array: *const f64,
    A_Array: *mut *const f64,
    lda_Array: *const c_int,
    B_Array: *mut *mut f64,
    ldb_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_dtrsm_batch(
        Layout,
        Side_Array,
        Uplo_Array,
        Transa_Array,
        Diag_Array,
        M_Array,
        N_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsm_batch_strided(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    stridea: c_int,
    B: *mut f64,
    ldb: c_int,
    strideb: c_int,
    batch_size: c_int
)
{
    cblas_dtrsm_batch_strided(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_cgemm(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm3m(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_cgemm3m(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *const c_void,
    ldb_Array: *const c_int,
    beta_Array: *const c_void,
    C_Array: *mut *mut c_void,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_cgemm_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    B: *const c_void,
    ldb: c_int,
    strideb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_cgemm_batch_strided(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        beta,
        C,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm3m_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *const c_void,
    ldb_Array: *const c_int,
    beta_Array: *const c_void,
    C_Array: *mut *mut c_void,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_cgemm3m_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemmt(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_cgemmt(
        Layout,
        Uplo,
        TransA,
        TransB,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csymm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_csymm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csyrk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_csyrk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csyr2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_csyr2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrmm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *mut c_void,
    ldb: c_int
)
{
    cblas_ctrmm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *mut c_void,
    ldb: c_int
)
{
    cblas_ctrsm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsm_batch(
    Layout: CBLAS_LAYOUT,
    Side_Array: *const CBLAS_SIDE,
    Uplo_Array: *const CBLAS_UPLO,
    Transa_Array: *const CBLAS_TRANSPOSE,
    Diag_Array: *const CBLAS_DIAG,
    M_Array: *const c_int,
    N_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *mut c_void,
    ldb_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_ctrsm_batch(
        Layout,
        Side_Array,
        Uplo_Array,
        Transa_Array,
        Diag_Array,
        M_Array,
        N_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsm_batch_strided(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    B: *mut c_void,
    ldb: c_int,
    strideb: c_int,
    batch_size: c_int
)
{
    cblas_ctrsm_batch_strided(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zgemm(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm3m(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zgemm3m(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *const c_void,
    ldb_Array: *const c_int,
    beta_Array: *const c_void,
    C_Array: *mut *mut c_void,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_zgemm_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    B: *const c_void,
    ldb: c_int,
    strideb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_zgemm_batch_strided(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        beta,
        C,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm3m_batch(
    Layout: CBLAS_LAYOUT,
    TransA_Array: *const CBLAS_TRANSPOSE,
    TransB_Array: *const CBLAS_TRANSPOSE,
    M_Array: *const c_int,
    N_Array: *const c_int,
    K_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *const c_void,
    ldb_Array: *const c_int,
    beta_Array: *const c_void,
    C_Array: *mut *mut c_void,
    ldc_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_zgemm3m_batch(
        Layout,
        TransA_Array,
        TransB_Array,
        M_Array,
        N_Array,
        K_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        beta_Array,
        C_Array,
        ldc_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemmt(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zgemmt(
        Layout,
        Uplo,
        TransA,
        TransB,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsymm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zsymm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsyrk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zsyrk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsyr2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zsyr2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrmm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *mut c_void,
    ldb: c_int
)
{
    cblas_ztrmm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *mut c_void,
    ldb: c_int
)
{
    cblas_ztrsm(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsm_batch(
    Layout: CBLAS_LAYOUT,
    Side_Array: *const CBLAS_SIDE,
    Uplo_Array: *const CBLAS_UPLO,
    Transa_Array: *const CBLAS_TRANSPOSE,
    Diag_Array: *const CBLAS_DIAG,
    M_Array: *const c_int,
    N_Array: *const c_int,
    alpha_Array: *const c_void,
    A_Array: *mut *const c_void,
    lda_Array: *const c_int,
    B_Array: *mut *mut c_void,
    ldb_Array: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_ztrsm_batch(
        Layout,
        Side_Array,
        Uplo_Array,
        Transa_Array,
        Diag_Array,
        M_Array,
        N_Array,
        alpha_Array,
        A_Array,
        lda_Array,
        B_Array,
        ldb_Array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsm_batch_strided(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    B: *mut c_void,
    ldb: c_int,
    strideb: c_int,
    batch_size: c_int
)
{
    cblas_ztrsm_batch_strided(
        Layout,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        B,
        ldb,
        strideb,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chemm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_chemm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cherk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_void,
    lda: c_int,
    beta: f32,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_cherk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: f32,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_cher2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhemm(
    Layout: CBLAS_LAYOUT,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: *const c_void,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zhemm(
        Layout,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zherk(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: f64,
    A: *const c_void,
    lda: c_int,
    beta: f64,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zherk(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher2k(
    Layout: CBLAS_LAYOUT,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: c_int,
    K: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    B: *const c_void,
    ldb: c_int,
    beta: f64,
    C: *mut c_void,
    ldc: c_int
)
{
    cblas_zher2k(
        Layout,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_pack_get_size(
    identifier: CBLAS_IDENTIFIER,
    M: c_int,
    N: c_int,
    K: c_int
) -> usize
{
    cblas_sgemm_pack_get_size(
        identifier,
        M,
        N,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_pack(
    Layout: CBLAS_LAYOUT,
    identifier: CBLAS_IDENTIFIER,
    Trans: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    src: *const f32,
    ld: c_int,
    dest: *mut f32
)
{
    cblas_sgemm_pack(
        Layout,
        identifier,
        Trans,
        M,
        N,
        K,
        alpha,
        src,
        ld,
        dest
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_compute(
    Layout: CBLAS_LAYOUT,
    TransA: c_int,
    TransB: c_int,
    M: c_int,
    N: c_int,
    K: c_int,
    A: *const f32,
    lda: c_int,
    B: *const f32,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_sgemm_compute(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_pack_get_size(
    identifier: CBLAS_IDENTIFIER,
    M: c_int,
    N: c_int,
    K: c_int
) -> usize
{
    cblas_dgemm_pack_get_size(
        identifier,
        M,
        N,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_pack(
    Layout: CBLAS_LAYOUT,
    identifier: CBLAS_IDENTIFIER,
    Trans: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f64,
    src: *const f64,
    ld: c_int,
    dest: *mut f64
)
{
    cblas_dgemm_pack(
        Layout,
        identifier,
        Trans,
        M,
        N,
        K,
        alpha,
        src,
        ld,
        dest
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_compute(
    Layout: CBLAS_LAYOUT,
    TransA: c_int,
    TransB: c_int,
    M: c_int,
    N: c_int,
    K: c_int,
    A: *const f64,
    lda: c_int,
    B: *const f64,
    ldb: c_int,
    beta: f64,
    C: *mut f64,
    ldc: c_int
)
{
    cblas_dgemm_compute(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s16s16s32(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    OffsetC: CBLAS_OFFSET,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_short,
    lda: c_int,
    ao: c_short,
    B: *const c_short,
    ldb: c_int,
    bo: c_short,
    beta: f32,
    C: *mut c_int,
    ldc: c_int,
    cb: *const c_int
)
{
    cblas_gemm_s16s16s32(
        Layout,
        TransA,
        TransB,
        OffsetC,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        ao,
        B,
        ldb,
        bo,
        beta,
        C,
        ldc,
        cb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s8u8s32(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    OffsetC: CBLAS_OFFSET,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_void,
    lda: c_int,
    ao: c_char,
    B: *const c_void,
    ldb: c_int,
    bo: c_char,
    beta: f32,
    C: *mut c_int,
    ldc: c_int,
    cb: *const c_int
)
{
    cblas_gemm_s8u8s32(
        Layout,
        TransA,
        TransB,
        OffsetC,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        ao,
        B,
        ldb,
        bo,
        beta,
        C,
        ldc,
        cb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_bf16bf16f32(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_ushort,
    lda: c_int,
    B: *const c_ushort,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_gemm_bf16bf16f32(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s8u8s32_pack_get_size(
    identifier: CBLAS_IDENTIFIER,
    M: c_int,
    N: c_int,
    K: c_int
) -> usize
{
    cblas_gemm_s8u8s32_pack_get_size(
        identifier,
        M,
        N,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s16s16s32_pack_get_size(
    identifier: CBLAS_IDENTIFIER,
    M: c_int,
    N: c_int,
    K: c_int
) -> usize
{
    cblas_gemm_s16s16s32_pack_get_size(
        identifier,
        M,
        N,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_bf16bf16f32_pack_get_size(
    identifier: CBLAS_IDENTIFIER,
    M: c_int,
    N: c_int,
    K: c_int
) -> usize
{
    cblas_gemm_bf16bf16f32_pack_get_size(
        identifier,
        M,
        N,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s8u8s32_pack(
    Layout: CBLAS_LAYOUT,
    identifier: CBLAS_IDENTIFIER,
    Trans: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    src: *const c_void,
    ld: c_int,
    dest: *mut c_void
)
{
    cblas_gemm_s8u8s32_pack(
        Layout,
        identifier,
        Trans,
        M,
        N,
        K,
        src,
        ld,
        dest
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s16s16s32_pack(
    Layout: CBLAS_LAYOUT,
    identifier: CBLAS_IDENTIFIER,
    Trans: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    src: *const c_short,
    ld: c_int,
    dest: *mut c_short
)
{
    cblas_gemm_s16s16s32_pack(
        Layout,
        identifier,
        Trans,
        M,
        N,
        K,
        src,
        ld,
        dest
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_bf16bf16f32_pack(
    Layout: CBLAS_LAYOUT,
    identifier: CBLAS_IDENTIFIER,
    Trans: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    K: c_int,
    src: *const c_ushort,
    ld: c_int,
    dest: *mut c_ushort
)
{
    cblas_gemm_bf16bf16f32_pack(
        Layout,
        identifier,
        Trans,
        M,
        N,
        K,
        src,
        ld,
        dest
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s8u8s32_compute(
    Layout: CBLAS_LAYOUT,
    TransA: c_int,
    TransB: c_int,
    offsetc: CBLAS_OFFSET,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_void,
    lda: c_int,
    ao: c_char,
    B: *const c_void,
    ldb: c_int,
    bo: c_char,
    beta: f32,
    C: *mut c_int,
    ldc: c_int,
    co: *const c_int
)
{
    cblas_gemm_s8u8s32_compute(
        Layout,
        TransA,
        TransB,
        offsetc,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        ao,
        B,
        ldb,
        bo,
        beta,
        C,
        ldc,
        co
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_s16s16s32_compute(
    Layout: CBLAS_LAYOUT,
    TransA: c_int,
    TransB: c_int,
    offsetc: CBLAS_OFFSET,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_short,
    lda: c_int,
    ao: c_short,
    B: *const c_short,
    ldb: c_int,
    bo: c_short,
    beta: f32,
    C: *mut c_int,
    ldc: c_int,
    co: *const c_int
)
{
    cblas_gemm_s16s16s32_compute(
        Layout,
        TransA,
        TransB,
        offsetc,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        ao,
        B,
        ldb,
        bo,
        beta,
        C,
        ldc,
        co
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_gemm_bf16bf16f32_compute(
    Layout: CBLAS_LAYOUT,
    TransA: c_int,
    TransB: c_int,
    M: c_int,
    N: c_int,
    K: c_int,
    alpha: f32,
    A: *const c_ushort,
    lda: c_int,
    B: *const c_ushort,
    ldb: c_int,
    beta: f32,
    C: *mut f32,
    ldc: c_int
)
{
    cblas_gemm_bf16bf16f32_compute(
        Layout,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cblas_jit_create_dgemm(
    jitter: *mut *mut c_void,
    layout: MKL_LAYOUT,
    transa: MKL_TRANSPOSE,
    transb: MKL_TRANSPOSE,
    m: c_int,
    n: c_int,
    k: c_int,
    alpha: f64,
    lda: c_int,
    ldb: c_int,
    beta: f64,
    ldc: c_int
) -> mkl_jit_status_t
{
    mkl_cblas_jit_create_dgemm(
        jitter,
        layout,
        transa,
        transb,
        m,
        n,
        k,
        alpha,
        lda,
        ldb,
        beta,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cblas_jit_create_sgemm(
    jitter: *mut *mut c_void,
    layout: MKL_LAYOUT,
    transa: MKL_TRANSPOSE,
    transb: MKL_TRANSPOSE,
    m: c_int,
    n: c_int,
    k: c_int,
    alpha: f32,
    lda: c_int,
    ldb: c_int,
    beta: f32,
    ldc: c_int
) -> mkl_jit_status_t
{
    mkl_cblas_jit_create_sgemm(
        jitter,
        layout,
        transa,
        transb,
        m,
        n,
        k,
        alpha,
        lda,
        ldb,
        beta,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cblas_jit_create_cgemm(
    jitter: *mut *mut c_void,
    layout: MKL_LAYOUT,
    transa: MKL_TRANSPOSE,
    transb: MKL_TRANSPOSE,
    m: c_int,
    n: c_int,
    k: c_int,
    alpha: *const c_void,
    lda: c_int,
    ldb: c_int,
    beta: *const c_void,
    ldc: c_int
) -> mkl_jit_status_t
{
    mkl_cblas_jit_create_cgemm(
        jitter,
        layout,
        transa,
        transb,
        m,
        n,
        k,
        alpha,
        lda,
        ldb,
        beta,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cblas_jit_create_zgemm(
    jitter: *mut *mut c_void,
    layout: MKL_LAYOUT,
    transa: MKL_TRANSPOSE,
    transb: MKL_TRANSPOSE,
    m: c_int,
    n: c_int,
    k: c_int,
    alpha: *const c_void,
    lda: c_int,
    ldb: c_int,
    beta: *const c_void,
    ldc: c_int
) -> mkl_jit_status_t
{
    mkl_cblas_jit_create_zgemm(
        jitter,
        layout,
        transa,
        transb,
        m,
        n,
        k,
        alpha,
        lda,
        ldb,
        beta,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_jit_get_dgemm_ptr(
    jitter: *const c_void
) -> dgemm_jit_kernel_t
{
    mkl_jit_get_dgemm_ptr(
        jitter
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_jit_get_sgemm_ptr(
    jitter: *const c_void
) -> sgemm_jit_kernel_t
{
    mkl_jit_get_sgemm_ptr(
        jitter
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_jit_get_cgemm_ptr(
    jitter: *const c_void
) -> cgemm_jit_kernel_t
{
    mkl_jit_get_cgemm_ptr(
        jitter
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_jit_get_zgemm_ptr(
    jitter: *const c_void
) -> zgemm_jit_kernel_t
{
    mkl_jit_get_zgemm_ptr(
        jitter
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_jit_destroy(
    jitter: *mut c_void
) -> mkl_jit_status_t
{
    mkl_jit_destroy(
        jitter
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpy_batch(
    n: *const c_int,
    alpha: *const f32,
    x: *mut *const f32,
    incx: *const c_int,
    y: *mut *mut f32,
    incy: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_saxpy_batch(
        n,
        alpha,
        x,
        incx,
        y,
        incy,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpy_batch(
    n: *const c_int,
    alpha: *const f64,
    x: *mut *const f64,
    incx: *const c_int,
    y: *mut *mut f64,
    incy: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_daxpy_batch(
        n,
        alpha,
        x,
        incx,
        y,
        incy,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpy_batch(
    n: *const c_int,
    alpha: *const c_void,
    x: *mut *const c_void,
    incx: *const c_int,
    y: *mut *mut c_void,
    incy: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_caxpy_batch(
        n,
        alpha,
        x,
        incx,
        y,
        incy,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpy_batch(
    n: *const c_int,
    alpha: *const c_void,
    x: *mut *const c_void,
    incx: *const c_int,
    y: *mut *mut c_void,
    incy: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_zaxpy_batch(
        n,
        alpha,
        x,
        incx,
        y,
        incy,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpy_batch_strided(
    N: c_int,
    alpha: f32,
    X: *const f32,
    incX: c_int,
    stridex: c_int,
    Y: *mut f32,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_saxpy_batch_strided(
        N,
        alpha,
        X,
        incX,
        stridex,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpy_batch_strided(
    N: c_int,
    alpha: f64,
    X: *const f64,
    incX: c_int,
    stridex: c_int,
    Y: *mut f64,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_daxpy_batch_strided(
        N,
        alpha,
        X,
        incX,
        stridex,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpy_batch_strided(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    stridex: c_int,
    Y: *mut c_void,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_caxpy_batch_strided(
        N,
        alpha,
        X,
        incX,
        stridex,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpy_batch_strided(
    N: c_int,
    alpha: *const c_void,
    X: *const c_void,
    incX: c_int,
    stridex: c_int,
    Y: *mut c_void,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_zaxpy_batch_strided(
        N,
        alpha,
        X,
        incX,
        stridex,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemv_batch(
    Layout: CBLAS_LAYOUT,
    TransA: *const CBLAS_TRANSPOSE,
    M: *const c_int,
    N: *const c_int,
    alpha: *const f32,
    A: *mut *const f32,
    lda: *const c_int,
    X: *mut *const f32,
    incX: *const c_int,
    beta: *const f32,
    Y: *mut *mut f32,
    incY: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_sgemv_batch(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemv_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: f32,
    A: *const f32,
    lda: c_int,
    stridea: c_int,
    X: *const f32,
    incX: c_int,
    stridex: c_int,
    beta: f32,
    Y: *mut f32,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_sgemv_batch_strided(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        X,
        incX,
        stridex,
        beta,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemv_batch(
    Layout: CBLAS_LAYOUT,
    TransA: *const CBLAS_TRANSPOSE,
    M: *const c_int,
    N: *const c_int,
    alpha: *const f64,
    A: *mut *const f64,
    lda: *const c_int,
    X: *mut *const f64,
    incX: *const c_int,
    beta: *const f64,
    Y: *mut *mut f64,
    incY: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_dgemv_batch(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemv_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: f64,
    A: *const f64,
    lda: c_int,
    stridea: c_int,
    X: *const f64,
    incX: c_int,
    stridex: c_int,
    beta: f64,
    Y: *mut f64,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_dgemv_batch_strided(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        X,
        incX,
        stridex,
        beta,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemv_batch(
    Layout: CBLAS_LAYOUT,
    TransA: *const CBLAS_TRANSPOSE,
    M: *const c_int,
    N: *const c_int,
    alpha: *const c_void,
    A: *mut *const c_void,
    lda: *const c_int,
    X: *mut *const c_void,
    incX: *const c_int,
    beta: *const c_void,
    Y: *mut *mut c_void,
    incY: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_cgemv_batch(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemv_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    X: *const c_void,
    incX: c_int,
    stridex: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_cgemv_batch_strided(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        X,
        incX,
        stridex,
        beta,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemv_batch(
    Layout: CBLAS_LAYOUT,
    TransA: *const CBLAS_TRANSPOSE,
    M: *const c_int,
    N: *const c_int,
    alpha: *const c_void,
    A: *mut *const c_void,
    lda: *const c_int,
    X: *mut *const c_void,
    incX: *const c_int,
    beta: *const c_void,
    Y: *mut *mut c_void,
    incY: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_zgemv_batch(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemv_batch_strided(
    Layout: CBLAS_LAYOUT,
    TransA: CBLAS_TRANSPOSE,
    M: c_int,
    N: c_int,
    alpha: *const c_void,
    A: *const c_void,
    lda: c_int,
    stridea: c_int,
    X: *const c_void,
    incX: c_int,
    stridex: c_int,
    beta: *const c_void,
    Y: *mut c_void,
    incY: c_int,
    stridey: c_int,
    batch_size: c_int
)
{
    cblas_zgemv_batch_strided(
        Layout,
        TransA,
        M,
        N,
        alpha,
        A,
        lda,
        stridea,
        X,
        incX,
        stridex,
        beta,
        Y,
        incY,
        stridey,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdgmm_batch(
    layout: CBLAS_LAYOUT,
    side: *const CBLAS_SIDE,
    m: *const c_int,
    n: *const c_int,
    a: *mut *const f32,
    lda: *const c_int,
    x: *mut *const f32,
    incx: *const c_int,
    c: *mut *mut f32,
    ldc: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_sdgmm_batch(
        layout,
        side,
        m,
        n,
        a,
        lda,
        x,
        incx,
        c,
        ldc,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdgmm_batch_strided(
    layout: CBLAS_LAYOUT,
    side: CBLAS_SIDE,
    m: c_int,
    n: c_int,
    a: *const f32,
    lda: c_int,
    stridea: c_int,
    x: *const f32,
    incx: c_int,
    stridex: c_int,
    c: *mut f32,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_sdgmm_batch_strided(
        layout,
        side,
        m,
        n,
        a,
        lda,
        stridea,
        x,
        incx,
        stridex,
        c,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ddgmm_batch(
    layout: CBLAS_LAYOUT,
    side: *const CBLAS_SIDE,
    m: *const c_int,
    n: *const c_int,
    a: *mut *const f64,
    lda: *const c_int,
    x: *mut *const f64,
    incx: *const c_int,
    c: *mut *mut f64,
    ldc: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_ddgmm_batch(
        layout,
        side,
        m,
        n,
        a,
        lda,
        x,
        incx,
        c,
        ldc,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ddgmm_batch_strided(
    layout: CBLAS_LAYOUT,
    side: CBLAS_SIDE,
    m: c_int,
    n: c_int,
    a: *const f64,
    lda: c_int,
    stridea: c_int,
    x: *const f64,
    incx: c_int,
    stridex: c_int,
    c: *mut f64,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_ddgmm_batch_strided(
        layout,
        side,
        m,
        n,
        a,
        lda,
        stridea,
        x,
        incx,
        stridex,
        c,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdgmm_batch(
    layout: CBLAS_LAYOUT,
    side: *const CBLAS_SIDE,
    m: *const c_int,
    n: *const c_int,
    a: *mut *const c_void,
    lda: *const c_int,
    x: *mut *const c_void,
    incx: *const c_int,
    c: *mut *mut c_void,
    ldc: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_cdgmm_batch(
        layout,
        side,
        m,
        n,
        a,
        lda,
        x,
        incx,
        c,
        ldc,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdgmm_batch_strided(
    layout: CBLAS_LAYOUT,
    side: CBLAS_SIDE,
    m: c_int,
    n: c_int,
    a: *const c_void,
    lda: c_int,
    stridea: c_int,
    x: *const c_void,
    incx: c_int,
    stridex: c_int,
    c: *mut c_void,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_cdgmm_batch_strided(
        layout,
        side,
        m,
        n,
        a,
        lda,
        stridea,
        x,
        incx,
        stridex,
        c,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdgmm_batch(
    layout: CBLAS_LAYOUT,
    side: *const CBLAS_SIDE,
    m: *const c_int,
    n: *const c_int,
    a: *mut *const c_void,
    lda: *const c_int,
    x: *mut *const c_void,
    incx: *const c_int,
    c: *mut *mut c_void,
    ldc: *const c_int,
    group_count: c_int,
    group_size: *const c_int
)
{
    cblas_zdgmm_batch(
        layout,
        side,
        m,
        n,
        a,
        lda,
        x,
        incx,
        c,
        ldc,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdgmm_batch_strided(
    layout: CBLAS_LAYOUT,
    side: CBLAS_SIDE,
    m: c_int,
    n: c_int,
    a: *const c_void,
    lda: c_int,
    stridea: c_int,
    x: *const c_void,
    incx: c_int,
    stridex: c_int,
    c: *mut c_void,
    ldc: c_int,
    stridec: c_int,
    batch_size: c_int
)
{
    cblas_zdgmm_batch_strided(
        layout,
        side,
        m,
        n,
        a,
        lda,
        stridea,
        x,
        incx,
        stridex,
        c,
        ldc,
        stridec,
        batch_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    numrank: *mut c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    cwork: *mut MKL_Complex8,
    lcwork: *mut c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    cgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        v,
        ldv,
        numrank,
        iwork,
        liwork,
        cwork,
        lcwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    s: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    numrank: *mut c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    work: *mut f64,
    lwork: *mut c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    dgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        v,
        ldv,
        numrank,
        iwork,
        liwork,
        work,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    s: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    numrank: *mut c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    work: *mut f32,
    lwork: *mut c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    sgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        v,
        ldv,
        numrank,
        iwork,
        liwork,
        work,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    numrank: *mut c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    cwork: *mut MKL_Complex16,
    lcwork: *mut c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    zgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        v,
        ldv,
        numrank,
        iwork,
        liwork,
        cwork,
        lcwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claunhr_col_getrfnp2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut MKL_Complex8,
    info: *mut c_int
)
{
    claunhr_col_getrfnp2_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claunhr_col_getrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut MKL_Complex8,
    info: *mut c_int
)
{
    claunhr_col_getrfnp_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaorhr_col_getrfnp2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    info: *mut c_int
)
{
    dlaorhr_col_getrfnp2_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaorhr_col_getrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    info: *mut c_int
)
{
    dlaorhr_col_getrfnp_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaorhr_col_getrfnp2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    info: *mut c_int
)
{
    slaorhr_col_getrfnp2_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaorhr_col_getrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    info: *mut c_int
)
{
    slaorhr_col_getrfnp_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaunhr_col_getrfnp2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlaunhr_col_getrfnp2_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaunhr_col_getrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlaunhr_col_getrfnp_(
        m,
        n,
        a,
        lda,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungtsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungtsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunhr_col_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    d: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunhr_col_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgtsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgtsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorhr_col_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    d: *mut f64,
    info: *mut c_int
)
{
    dorhr_col_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgtsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgtsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorhr_col_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    d: *mut f32,
    info: *mut c_int
)
{
    sorhr_col_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungtsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungtsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunhr_col_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    d: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunhr_col_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetsqrhrt_(
    m: *const c_int,
    n: *const c_int,
    mb1: *const c_int,
    nb1: *const c_int,
    nb2: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetsqrhrt_(
    m: *const c_int,
    n: *const c_int,
    mb1: *const c_int,
    nb1: *const c_int,
    nb2: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetsqrhrt_(
    m: *const c_int,
    n: *const c_int,
    mb1: *const c_int,
    nb1: *const c_int,
    nb2: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetsqrhrt_(
    m: *const c_int,
    n: *const c_int,
    mb1: *const c_int,
    nb1: *const c_int,
    nb2: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfb_gett_(
    ident: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    ldwork: *const c_int
)
{
    slarfb_gett_(
        ident,
        m,
        n,
        k,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfb_gett_(
    ident: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    ldwork: *const c_int
)
{
    dlarfb_gett_(
        ident,
        m,
        n,
        k,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfb_gett_(
    ident: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    ldwork: *const c_int
)
{
    clarfb_gett_(
        ident,
        m,
        n,
        k,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfb_gett_(
    ident: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    ldwork: *const c_int
)
{
    zlarfb_gett_(
        ident,
        m,
        n,
        k,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgtsqr_row_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgtsqr_row_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgtsqr_row_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgtsqr_row_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungtsqr_row_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungtsqr_row_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungtsqr_row_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungtsqr_row_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelq_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    tsize: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgelq_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelqt_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgelqt_(
        m,
        n,
        mb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelqt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    info: *mut c_int
)
{
    cgelqt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    t: *const MKL_Complex8,
    tsize: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgemlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgemlqt_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqr_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    tsize: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgeqr_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetsls_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgetsls_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clamswlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    clamswlq_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clamtsqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    clamtsqr_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claswlq_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    claswlq_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    clatsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctplqt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctplqt_(
        m,
        n,
        l,
        mb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctplqt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    info: *mut c_int
)
{
    ctplqt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelq_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    tsize: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgelq_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelqt_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgelqt_(
        m,
        n,
        mb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelqt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    info: *mut c_int
)
{
    dgelqt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    t: *const f64,
    tsize: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgemlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgemlqt_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqr_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    tsize: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeqr_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamswlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlamswlq_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamtsqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlamtsqr_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaswlq_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlaswlq_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlatsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtplqt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtplqt_(
        m,
        n,
        l,
        mb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtplqt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    info: *mut c_int
)
{
    dtplqt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelq_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    tsize: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgelq_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetsls_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgetsls_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelqt_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgelqt_(
        m,
        n,
        mb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelqt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    info: *mut c_int
)
{
    sgelqt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgemlqt_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqr_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    tsize: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeqr_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetsls_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgetsls_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamtsqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slamtsqr_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaswlq_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slaswlq_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stplqt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    stplqt_(
        m,
        n,
        l,
        mb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    stpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelq_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    tsize: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgelq_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    t: *const f32,
    tsize: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgemlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamswlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slamswlq_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slatsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stplqt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    info: *mut c_int
)
{
    stplqt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelqt_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgelqt_(
        m,
        n,
        mb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelqt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    info: *mut c_int
)
{
    zgelqt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    t: *const MKL_Complex16,
    tsize: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgemlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgemlqt_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqr_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    tsize: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgeqr_(
        m,
        n,
        a,
        lda,
        t,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetsls_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgetsls_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlamswlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlamswlq_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlamtsqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlamtsqr_(
        side,
        trans,
        m,
        n,
        k,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaswlq_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlaswlq_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatsqr_(
    m: *const c_int,
    n: *const c_int,
    mb: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlatsqr_(
        m,
        n,
        mb,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztplqt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztplqt_(
        m,
        n,
        l,
        mb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztplqt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    info: *mut c_int
)
{
    ztplqt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    mb: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chesv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahef_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clahef_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasyf_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut f64,
    ldh: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasyf_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsysv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasyf_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut f32,
    ldh: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slasyf_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssysv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhesv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahef_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlahef_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    t: *const MKL_Complex8,
    tsize: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgemqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    t: *const f64,
    tsize: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgemqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    t: *const f32,
    tsize: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgemqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    t: *const MKL_Complex16,
    tsize: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgemqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        t,
        tsize,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_checon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    checon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chesv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    chetf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    nb: *const c_int,
    info: *mut c_int
)
{
    chetri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chetrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahef_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clahef_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfy_(
    uplo: *const c_char,
    n: *const c_int,
    v: *const MKL_Complex8,
    incv: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8
)
{
    clarfy_(
        uplo,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clasyf_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clasyf_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clasyf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clasyf_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csycon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csycon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyconvf_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    csyconvf_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyconvf_rook_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *const c_int,
    info: *mut c_int
)
{
    csyconvf_rook_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csysv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csysv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    csytf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut MKL_Complex8,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    nb: *const c_int,
    info: *mut c_int
)
{
    csytri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    e: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    csytrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfy_(
    uplo: *const c_char,
    n: *const c_int,
    v: *const f64,
    incv: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64
)
{
    dlarfy_(
        uplo,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasyf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *mut c_int,
    w: *mut f64,
    ldw: *const c_int,
    info: *mut c_int
)
{
    dlasyf_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsycon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    e: *const f64,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsycon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyconvf_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dsyconvf_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyconvf_rook_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *const c_int,
    info: *mut c_int
)
{
    dsyconvf_rook_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsysv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dsytf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    ipiv: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *const f64,
    ipiv: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *const f64,
    ipiv: *const c_int,
    work: *mut f64,
    nb: *const c_int,
    info: *mut c_int
)
{
    dsytri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    e: *const f64,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsytrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfy_(
    uplo: *const c_char,
    n: *const c_int,
    v: *const f32,
    incv: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32
)
{
    slarfy_(
        uplo,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasyf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *mut c_int,
    w: *mut f32,
    ldw: *const c_int,
    info: *mut c_int
)
{
    slasyf_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssycon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    e: *const f32,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssycon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyconvf_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    ssyconvf_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyconvf_rook_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *const c_int,
    info: *mut c_int
)
{
    ssyconvf_rook_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssysv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    ssytf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    ipiv: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *const f32,
    ipiv: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *const f32,
    ipiv: *const c_int,
    work: *mut f32,
    nb: *const c_int,
    info: *mut c_int
)
{
    ssytri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    e: *const f32,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssytrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhecon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhecon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhesv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zhetf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    nb: *const c_int,
    info: *mut c_int
)
{
    zhetri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhetrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahef_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlahef_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfy_(
    uplo: *const c_char,
    n: *const c_int,
    v: *const MKL_Complex16,
    incv: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16
)
{
    zlarfy_(
        uplo,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlasyf_aa_(
    uplo: *const c_char,
    j1: *const c_int,
    m: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlasyf_aa_(
        uplo,
        j1,
        m,
        nb,
        a,
        lda,
        ipiv,
        h,
        ldh,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlasyf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlasyf_rk_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        e,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsycon_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsycon_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyconvf_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zsyconvf_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyconvf_rook_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *const c_int,
    info: *mut c_int
)
{
    zsyconvf_rook_(
        uplo,
        way,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsysv_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_rk_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsysv_rk_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytf2_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zsytf2_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_aa_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrf_aa_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_rk_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut MKL_Complex16,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrf_rk_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_3_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytri_3_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_3x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    nb: *const c_int,
    info: *mut c_int
)
{
    zsytri_3x_(
        uplo,
        n,
        a,
        lda,
        e,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_3_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    e: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zsytrs_3_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        e,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_aa_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrs_aa_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chb2st_kernels_(
    uplo: *const c_char,
    wantz: *const c_int,
    ttype: *const c_int,
    st: *const c_int,
    ed: *const c_int,
    sweep: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    ib: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    v: *mut MKL_Complex8,
    tau: *mut MKL_Complex8,
    ldvt: *const c_int,
    work: *mut MKL_Complex8
)
{
    chb2st_kernels_(
        uplo,
        wantz,
        ttype,
        st,
        ed,
        sweep,
        n,
        nb,
        ib,
        a,
        lda,
        v,
        tau,
        ldvt,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cheev_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cheevd_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cheevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    cheevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegv_2stage_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chegv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    hous2: *mut MKL_Complex8,
    lhous2: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrd_2stage_(
        vect,
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        hous2,
        lhous2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_hb2st_(
    stage1: *const c_char,
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    hous: *mut MKL_Complex8,
    lhous: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrd_hb2st_(
        stage1,
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        hous,
        lhous,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_he2hb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrd_he2hb_(
        uplo,
        n,
        kd,
        a,
        lda,
        ab,
        ldab,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsb2st_kernels_(
    uplo: *const c_char,
    wantz: *const c_int,
    ttype: *const c_int,
    st: *const c_int,
    ed: *const c_int,
    sweep: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    ib: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    v: *mut f64,
    tau: *mut f64,
    ldvt: *const c_int,
    work: *mut f64
)
{
    dsb2st_kernels_(
        uplo,
        wantz,
        ttype,
        st,
        ed,
        sweep,
        n,
        nb,
        ib,
        a,
        lda,
        v,
        tau,
        ldvt,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsyev_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsyevd_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsyevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsyevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygv_2stage_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsygv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut f64,
    hous2: *mut f64,
    lhous2: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrd_2stage_(
        vect,
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        hous2,
        lhous2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_sb2st_(
    stage1: *const c_char,
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    hous: *mut f64,
    lhous: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrd_sb2st_(
        stage1,
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        hous,
        lhous,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_sy2sb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrd_sy2sb_(
        uplo,
        n,
        kd,
        a,
        lda,
        ab,
        ldab,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_iparam2stage_(
    ispec: *const c_int,
    name: *const c_char,
    opts: *const c_char,
    ni: *const c_int,
    nbi: *const c_int,
    ibi: *const c_int,
    nxi: *const c_int
) -> c_int
{
    iparam2stage_(
        ispec,
        name,
        opts,
        ni,
        nbi,
        ibi,
        nxi
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssb2st_kernels_(
    uplo: *const c_char,
    wantz: *const c_int,
    ttype: *const c_int,
    st: *const c_int,
    ed: *const c_int,
    sweep: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    ib: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    v: *mut f32,
    tau: *mut f32,
    ldvt: *const c_int,
    work: *mut f32
)
{
    ssb2st_kernels_(
        uplo,
        wantz,
        ttype,
        st,
        ed,
        sweep,
        n,
        nb,
        ib,
        a,
        lda,
        v,
        tau,
        ldvt,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssyev_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssyevd_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssyevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssyevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygv_2stage_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssygv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut f32,
    hous2: *mut f32,
    lhous2: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrd_2stage_(
        vect,
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        hous2,
        lhous2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_sb2st_(
    stage1: *const c_char,
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    hous: *mut f32,
    lhous: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrd_sb2st_(
        stage1,
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        hous,
        lhous,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_sy2sb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrd_sy2sb_(
        uplo,
        n,
        kd,
        a,
        lda,
        ab,
        ldab,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhb2st_kernels_(
    uplo: *const c_char,
    wantz: *const c_int,
    ttype: *const c_int,
    st: *const c_int,
    ed: *const c_int,
    sweep: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    ib: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    v: *mut MKL_Complex16,
    tau: *mut MKL_Complex16,
    ldvt: *const c_int,
    work: *mut MKL_Complex16
)
{
    zhb2st_kernels_(
        uplo,
        wantz,
        ttype,
        st,
        ed,
        sweep,
        n,
        nb,
        ib,
        a,
        lda,
        v,
        tau,
        ldvt,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zheev_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zheevd_2stage_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zheevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zheevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegv_2stage_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhegv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    hous2: *mut MKL_Complex16,
    lhous2: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrd_2stage_(
        vect,
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        hous2,
        lhous2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_hb2st_(
    stage1: *const c_char,
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    hous: *mut MKL_Complex16,
    lhous: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrd_hb2st_(
        stage1,
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        hous,
        lhous,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_he2hb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrd_he2hb_(
        uplo,
        n,
        kd,
        a,
        lda,
        ab,
        ldab,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrfnp(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrfnp(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrfnp_(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrfnp(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrfnp(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrfnp_(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrfnp(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrfnp(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrfnp_(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrfnp(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrfnp(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrfnp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrfnp_(
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrinp(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrinp(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrinp_(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrinp_(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrinp(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrinp(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrinp_(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrinp_(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrinp(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrinp(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrinp_(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrinp_(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrinp(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrinp(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrinp_(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrinp_(
        n,
        a,
        lda,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tb: *mut f64,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chesv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chetrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tb: *mut MKL_Complex8,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    csytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhesv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhetrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tb: *mut MKL_Complex16,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zsytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tb: *mut f64,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tb: *mut f64,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tb: *mut f32,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tb: *mut f32,
    ltb: *const c_int,
    ipiv: *const c_int,
    ipiv2: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tb: *mut f32,
    ltb: *const c_int,
    ipiv: *mut c_int,
    ipiv2: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrf_aa_2stage_(
        uplo,
        n,
        a,
        lda,
        tb,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dtrevc3_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    strevc3_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    ctrevc3_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    ztrevc3_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *mut c_int,
    stride_ipiv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgetrf_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *mut c_int,
    stride_ipiv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgetrf_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *mut c_int,
    stride_ipiv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgetrf_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *mut c_int,
    stride_ipiv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgetrf_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrs_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgetrs_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrs_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgetrs_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrs_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgetrs_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrs_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgetrs_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        ipiv,
        stride_ipiv,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrfnp_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    stride_a: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgetrfnp_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrfnp_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    stride_a: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgetrfnp_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrfnp_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgetrfnp_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrfnp_batch_strided_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgetrfnp_batch_strided_(
        m,
        n,
        a,
        lda,
        stride_a,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrsnp_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgetrsnp_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrsnp_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgetrsnp_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrsnp_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgetrsnp_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrsnp_batch_strided_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgetrsnp_batch_strided_(
        trans,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f64,
    lda: *const c_int,
    ipiv: *mut *mut c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    dgetrf_batch_(
        m,
        n,
        a,
        lda,
        ipiv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f32,
    lda: *const c_int,
    ipiv: *mut *mut c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    sgetrf_batch_(
        m,
        n,
        a,
        lda,
        ipiv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut *mut c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    cgetrf_batch_(
        m,
        n,
        a,
        lda,
        ipiv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut *mut c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    zgetrf_batch_(
        m,
        n,
        a,
        lda,
        ipiv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetri_oop_batch_strided_(
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    stridea: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    ainv: *mut f32,
    ldainv: *const c_int,
    stride_ainv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgetri_oop_batch_strided_(
        n,
        a,
        lda,
        stridea,
        ipiv,
        stride_ipiv,
        ainv,
        ldainv,
        stride_ainv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetri_oop_batch_strided_(
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    stridea: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    ainv: *mut f64,
    ldainv: *const c_int,
    stride_ainv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgetri_oop_batch_strided_(
        n,
        a,
        lda,
        stridea,
        ipiv,
        stride_ipiv,
        ainv,
        ldainv,
        stride_ainv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetri_oop_batch_strided_(
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    stridea: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    ainv: *mut MKL_Complex8,
    ldainv: *const c_int,
    stride_ainv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgetri_oop_batch_strided_(
        n,
        a,
        lda,
        stridea,
        ipiv,
        stride_ipiv,
        ainv,
        ldainv,
        stride_ainv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetri_oop_batch_strided_(
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    stridea: *const c_int,
    ipiv: *const c_int,
    stride_ipiv: *const c_int,
    ainv: *mut MKL_Complex16,
    ldainv: *const c_int,
    stride_ainv: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgetri_oop_batch_strided_(
        n,
        a,
        lda,
        stridea,
        ipiv,
        stride_ipiv,
        ainv,
        ldainv,
        stride_ainv,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetri_oop_batch_(
    n: *const c_int,
    a: *mut *const f32,
    lda: *const c_int,
    ipiv: *mut *const c_int,
    ainv: *mut *mut f32,
    ldainv: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    sgetri_oop_batch_(
        n,
        a,
        lda,
        ipiv,
        ainv,
        ldainv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetri_oop_batch_(
    n: *const c_int,
    a: *mut *const f64,
    lda: *const c_int,
    ipiv: *mut *const c_int,
    ainv: *mut *mut f64,
    ldainv: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    dgetri_oop_batch_(
        n,
        a,
        lda,
        ipiv,
        ainv,
        ldainv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetri_oop_batch_(
    n: *const c_int,
    a: *mut *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut *const c_int,
    ainv: *mut *mut MKL_Complex8,
    ldainv: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    cgetri_oop_batch_(
        n,
        a,
        lda,
        ipiv,
        ainv,
        ldainv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetri_oop_batch_(
    n: *const c_int,
    a: *mut *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut *const c_int,
    ainv: *mut *mut MKL_Complex16,
    ldainv: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    zgetri_oop_batch_(
        n,
        a,
        lda,
        ipiv,
        ainv,
        ldainv,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrfnp_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f32,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    sgetrfnp_batch_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrfnp_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f64,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    dgetrfnp_batch_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrfnp_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex8,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    cgetrfnp_batch_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrfnp_batch_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex16,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    zgetrfnp_batch_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrfnp_batch_64_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f32,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    sgetrfnp_batch_64_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrfnp_batch_64_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut f64,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    dgetrfnp_batch_64_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrfnp_batch_64_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex8,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    cgetrfnp_batch_64_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrfnp_batch_64_(
    m: *const c_int,
    n: *const c_int,
    a: *mut *mut MKL_Complex16,
    lda: *const c_int,
    group_count: *const c_int,
    group_size: *const c_int,
    info: *mut c_int
)
{
    zgetrfnp_batch_64_(
        m,
        n,
        a,
        lda,
        group_count,
        group_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgels_batch_strided_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgels_batch_strided_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgels_batch_strided_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgels_batch_strided_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgels_batch_strided_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgels_batch_strided_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgels_batch_strided_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    stride_b: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgels_batch_strided_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        stride_a,
        b,
        ldb,
        stride_b,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvda_batch_strided_(
    iparm: *const c_int,
    irank: *mut c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    stride_a: *const c_int,
    s: *mut f32,
    stride_s: *const c_int,
    u: *mut f32,
    ldu: *const c_int,
    stride_u: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    stride_vt: *const c_int,
    tolerance: *const f32,
    residual: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    sgesvda_batch_strided_(
        iparm,
        irank,
        m,
        n,
        a,
        lda,
        stride_a,
        s,
        stride_s,
        u,
        ldu,
        stride_u,
        vt,
        ldvt,
        stride_vt,
        tolerance,
        residual,
        work,
        lwork,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvda_batch_strided_(
    iparm: *const c_int,
    irank: *mut c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    stride_a: *const c_int,
    s: *mut f64,
    stride_s: *const c_int,
    u: *mut f64,
    ldu: *const c_int,
    stride_u: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    stride_vt: *const c_int,
    tolerance: *const f64,
    residual: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    dgesvda_batch_strided_(
        iparm,
        irank,
        m,
        n,
        a,
        lda,
        stride_a,
        s,
        stride_s,
        u,
        ldu,
        stride_u,
        vt,
        ldvt,
        stride_vt,
        tolerance,
        residual,
        work,
        lwork,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvda_batch_strided_(
    iparm: *const c_int,
    irank: *mut c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    stride_a: *const c_int,
    s: *mut f32,
    stride_s: *const c_int,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    stride_u: *const c_int,
    vt: *mut MKL_Complex8,
    ldvt: *const c_int,
    stride_vt: *const c_int,
    tolerance: *const f32,
    residual: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    cgesvda_batch_strided_(
        iparm,
        irank,
        m,
        n,
        a,
        lda,
        stride_a,
        s,
        stride_s,
        u,
        ldu,
        stride_u,
        vt,
        ldvt,
        stride_vt,
        tolerance,
        residual,
        work,
        lwork,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvda_batch_strided_(
    iparm: *const c_int,
    irank: *mut c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    stride_a: *const c_int,
    s: *mut f64,
    stride_s: *const c_int,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    stride_u: *const c_int,
    vt: *mut MKL_Complex16,
    ldvt: *const c_int,
    stride_vt: *const c_int,
    tolerance: *const f64,
    residual: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    batch_size: *const c_int,
    info: *mut c_int
)
{
    zgesvda_batch_strided_(
        iparm,
        irank,
        m,
        n,
        a,
        lda,
        stride_a,
        s,
        stride_s,
        u,
        ldu,
        stride_u,
        vt,
        ldvt,
        stride_vt,
        tolerance,
        residual,
        work,
        lwork,
        batch_size,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    sva: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    cwork: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        a,
        lda,
        sva,
        u,
        ldu,
        v,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    sva: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    cwork: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        a,
        lda,
        sva,
        u,
        ldu,
        v,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    vt: *mut MKL_Complex8,
    ldvt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    vt: *mut MKL_Complex16,
    ldvt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    cwork: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    cgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        sva,
        mv,
        v,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    cwork: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    zgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        sva,
        mv,
        v,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    iwork: *mut c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    iwork: *mut c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    iwork: *mut c_int,
    rwork: *mut f32,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    iwork: *mut c_int,
    rwork: *mut f64,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgsvj0_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut MKL_Complex8,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    eps: *const f32,
    sfmin: *const f32,
    tol: *const f32,
    nsweep: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgsvj0_(
        jobv,
        m,
        n,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgsvj0_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut MKL_Complex16,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    eps: *const f64,
    sfmin: *const f64,
    tol: *const f64,
    nsweep: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgsvj0_(
        jobv,
        m,
        n,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgsvj1_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut MKL_Complex8,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    eps: *const f32,
    sfmin: *const f32,
    tol: *const f32,
    nsweep: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgsvj1_(
        jobv,
        m,
        n,
        n1,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgsvj1_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut MKL_Complex16,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    eps: *const f64,
    sfmin: *const f64,
    tol: *const f64,
    nsweep: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgsvj1_(
        jobv,
        m,
        n,
        n1,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    cpotrf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dpotrf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    spotrf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zpotrf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsvdx_(
    uplo: *const c_char,
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *const f64,
    e: *const f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dbdsvdx_(
        uplo,
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        z,
        ldz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsvdx_(
    uplo: *const c_char,
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *const f32,
    e: *const f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    ns: *mut c_int,
    s: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sbdsvdx_(
        uplo,
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        ns,
        s,
        z,
        ldz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgetrf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgetrf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgetrf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgetrf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cggev3_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zggev3_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggev3_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggev3_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunm22_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    q: *const MKL_Complex8,
    ldq: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunm22_(
        side,
        trans,
        m,
        n,
        n1,
        n2,
        q,
        ldq,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunm22_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    q: *const MKL_Complex16,
    ldq: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunm22_(
        side,
        trans,
        m,
        n,
        n1,
        n2,
        q,
        ldq,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_C_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vsl: *mut MKL_Complex8,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex8,
    ldvsr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_Z_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vsl: *mut MKL_Complex16,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex16,
    ldvsr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_D_SELECT_FUNCTION_3,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vsl: *mut f64,
    ldvsl: *const c_int,
    vsr: *mut f64,
    ldvsr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_S_SELECT_FUNCTION_3,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vsl: *mut f32,
    ldvsl: *const c_int,
    vsr: *mut f32,
    ldvsr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorm22_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    q: *const f64,
    ldq: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorm22_(
        side,
        trans,
        m,
        n,
        n1,
        n2,
        q,
        ldq,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorm22_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    q: *const f32,
    ldq: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorm22_(
        side,
        trans,
        m,
        n,
        n1,
        n2,
        q,
        ldq,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_checon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    checon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chesv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    chetf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chetri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chetrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahef_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clahef_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clasyf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clasyf_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csycon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csycon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csysv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    csytf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csytri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    csytrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasyf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut f64,
    ldw: *const c_int,
    info: *mut c_int
)
{
    dlasyf_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsycon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsycon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsysv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dsytf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsytri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsytrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasyf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut f32,
    ldw: *const c_int,
    info: *mut c_int
)
{
    slasyf_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssycon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssycon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssysv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    ssytf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssytri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssytrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhecon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhecon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhesv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zhetf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhetri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhetrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahef_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlahef_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlasyf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlasyf_rook_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsycon_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsycon_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsysv_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytf2_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zsytf2_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrf_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_rook_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsytri_rook_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_rook_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zsytrs_rook_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb1_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut MKL_Complex8,
    taup2: *mut MKL_Complex8,
    tauq1: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb1_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb2_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut MKL_Complex8,
    taup2: *mut MKL_Complex8,
    tauq1: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb2_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb3_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut MKL_Complex8,
    taup2: *mut MKL_Complex8,
    tauq1: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb3_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb4_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut MKL_Complex8,
    taup2: *mut MKL_Complex8,
    tauq1: *mut MKL_Complex8,
    phantom: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb4_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        phantom,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb5_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut MKL_Complex8,
    incx1: *const c_int,
    x2: *mut MKL_Complex8,
    incx2: *const c_int,
    q1: *mut MKL_Complex8,
    ldq1: *const c_int,
    q2: *mut MKL_Complex8,
    ldq2: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb5_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb6_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut MKL_Complex8,
    incx1: *const c_int,
    x2: *mut MKL_Complex8,
    incx2: *const c_int,
    q1: *mut MKL_Complex8,
    ldq1: *const c_int,
    q2: *mut MKL_Complex8,
    ldq2: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb6_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cuncsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    theta: *mut f32,
    u1: *mut MKL_Complex8,
    ldu1: *const c_int,
    u2: *mut MKL_Complex8,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex8,
    ldv1t: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cuncsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb1_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut f64,
    taup2: *mut f64,
    tauq1: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb1_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb2_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut f64,
    taup2: *mut f64,
    tauq1: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb2_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb3_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut f64,
    taup2: *mut f64,
    tauq1: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb3_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb4_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut f64,
    taup2: *mut f64,
    tauq1: *mut f64,
    phantom: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb4_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        phantom,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb5_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut f64,
    incx1: *const c_int,
    x2: *mut f64,
    incx2: *const c_int,
    q1: *mut f64,
    ldq1: *const c_int,
    q2: *mut f64,
    ldq2: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb5_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb6_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut f64,
    incx1: *const c_int,
    x2: *mut f64,
    incx2: *const c_int,
    q1: *mut f64,
    ldq1: *const c_int,
    q2: *mut f64,
    ldq2: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb6_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorcsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    theta: *mut f64,
    u1: *mut f64,
    ldu1: *const c_int,
    u2: *mut f64,
    ldu2: *const c_int,
    v1t: *mut f64,
    ldv1t: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dorcsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb1_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut f32,
    taup2: *mut f32,
    tauq1: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb1_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb2_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut f32,
    taup2: *mut f32,
    tauq1: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb2_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb3_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut f32,
    taup2: *mut f32,
    tauq1: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb3_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb4_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut f32,
    taup2: *mut f32,
    tauq1: *mut f32,
    phantom: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb4_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        phantom,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb5_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut f32,
    incx1: *const c_int,
    x2: *mut f32,
    incx2: *const c_int,
    q1: *mut f32,
    ldq1: *const c_int,
    q2: *mut f32,
    ldq2: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb5_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb6_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut f32,
    incx1: *const c_int,
    x2: *mut f32,
    incx2: *const c_int,
    q1: *mut f32,
    ldq1: *const c_int,
    q2: *mut f32,
    ldq2: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb6_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorcsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    theta: *mut f32,
    u1: *mut f32,
    ldu1: *const c_int,
    u2: *mut f32,
    ldu2: *const c_int,
    v1t: *mut f32,
    ldv1t: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sorcsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb1_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut MKL_Complex16,
    taup2: *mut MKL_Complex16,
    tauq1: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb1_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb2_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut MKL_Complex16,
    taup2: *mut MKL_Complex16,
    tauq1: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb2_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb3_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut MKL_Complex16,
    taup2: *mut MKL_Complex16,
    tauq1: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb3_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb4_(
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut MKL_Complex16,
    taup2: *mut MKL_Complex16,
    tauq1: *mut MKL_Complex16,
    phantom: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb4_(
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        phantom,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb5_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut MKL_Complex16,
    incx1: *const c_int,
    x2: *mut MKL_Complex16,
    incx2: *const c_int,
    q1: *mut MKL_Complex16,
    ldq1: *const c_int,
    q2: *mut MKL_Complex16,
    ldq2: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb5_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb6_(
    m1: *const c_int,
    m2: *const c_int,
    n: *const c_int,
    x1: *mut MKL_Complex16,
    incx1: *const c_int,
    x2: *mut MKL_Complex16,
    incx2: *const c_int,
    q1: *mut MKL_Complex16,
    ldq1: *const c_int,
    q2: *mut MKL_Complex16,
    ldq2: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb6_(
        m1,
        m2,
        n,
        x1,
        incx1,
        x2,
        incx2,
        q1,
        ldq1,
        q2,
        ldq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zuncsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const c_int,
    p: *const c_int,
    q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    theta: *mut f64,
    u1: *mut MKL_Complex16,
    ldu1: *const c_int,
    u2: *mut MKL_Complex16,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex16,
    ldv1t: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zuncsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        x11,
        ldx11,
        x21,
        ldx21,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgeqrt_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgeqrt_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgeqrt_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgeqrt_(
        m,
        n,
        nb,
        a,
        lda,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    info: *mut c_int
)
{
    cgeqrt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    info: *mut c_int
)
{
    dgeqrt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    info: *mut c_int
)
{
    sgeqrt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    info: *mut c_int
)
{
    zgeqrt3_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    stpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpqrt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctpqrt_(
        m,
        n,
        l,
        nb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpqrt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtpqrt_(
        m,
        n,
        l,
        nb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpqrt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    stpqrt_(
        m,
        n,
        l,
        nb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpqrt_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztpqrt_(
        m,
        n,
        l,
        nb,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpqrt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    info: *mut c_int
)
{
    ctpqrt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpqrt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    info: *mut c_int
)
{
    dtpqrt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpqrt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    info: *mut c_int
)
{
    stpqrt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpqrt2_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    info: *mut c_int
)
{
    ztpqrt2_(
        m,
        n,
        l,
        a,
        lda,
        b,
        ldb,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    u1: *mut MKL_Complex8,
    ldu1: *const c_int,
    u2: *mut MKL_Complex8,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex8,
    ldv1t: *const c_int,
    v2t: *mut MKL_Complex8,
    ldv2t: *const c_int,
    b11d: *mut f32,
    b11e: *mut f32,
    b12d: *mut f32,
    b12e: *mut f32,
    b21d: *mut f32,
    b21e: *mut f32,
    b22d: *mut f32,
    b22e: *mut f32,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    cbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        M,
        P,
        Q,
        theta,
        phi,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        b11d,
        b11e,
        b12d,
        b12e,
        b21d,
        b21e,
        b22d,
        b22e,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    u1: *mut MKL_Complex16,
    ldu1: *const c_int,
    u2: *mut MKL_Complex16,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex16,
    ldv1t: *const c_int,
    v2t: *mut MKL_Complex16,
    ldv2t: *const c_int,
    b11d: *mut f64,
    b11e: *mut f64,
    b12d: *mut f64,
    b12e: *mut f64,
    b21d: *mut f64,
    b21e: *mut f64,
    b22d: *mut f64,
    b22e: *mut f64,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    zbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        M,
        P,
        Q,
        theta,
        phi,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        b11d,
        b11e,
        b12d,
        b12e,
        b21d,
        b21e,
        b22d,
        b22e,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    u1: *mut f32,
    ldu1: *const c_int,
    u2: *mut f32,
    ldu2: *const c_int,
    v1t: *mut f32,
    ldv1t: *const c_int,
    v2t: *mut f32,
    ldv2t: *const c_int,
    b11d: *mut f32,
    b11e: *mut f32,
    b12d: *mut f32,
    b12e: *mut f32,
    b21d: *mut f32,
    b21e: *mut f32,
    b22d: *mut f32,
    b22e: *mut f32,
    rwork: *mut f32,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    sbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        M,
        P,
        Q,
        theta,
        phi,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        b11d,
        b11e,
        b12d,
        b12e,
        b21d,
        b21e,
        b22d,
        b22e,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    u1: *mut f64,
    ldu1: *const c_int,
    u2: *mut f64,
    ldu2: *const c_int,
    v1t: *mut f64,
    ldv1t: *const c_int,
    v2t: *mut f64,
    ldv2t: *const c_int,
    b11d: *mut f64,
    b11e: *mut f64,
    b12d: *mut f64,
    b12e: *mut f64,
    b21d: *mut f64,
    b21e: *mut f64,
    b22d: *mut f64,
    b22e: *mut f64,
    rwork: *mut f64,
    lrwork: *const c_int,
    info: *mut c_int
)
{
    dbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        M,
        P,
        Q,
        theta,
        phi,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        b11d,
        b11e,
        b12d,
        b12e,
        b21d,
        b21e,
        b22d,
        b22e,
        rwork,
        lrwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb_(
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x12: *mut MKL_Complex8,
    ldx12: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    x22: *mut MKL_Complex8,
    ldx22: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut MKL_Complex8,
    taup2: *mut MKL_Complex8,
    tauq1: *mut MKL_Complex8,
    tauq2: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunbdb_(
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        tauq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb_(
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x12: *mut MKL_Complex16,
    ldx12: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    x22: *mut MKL_Complex16,
    ldx22: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut MKL_Complex16,
    taup2: *mut MKL_Complex16,
    tauq1: *mut MKL_Complex16,
    tauq2: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunbdb_(
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        tauq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb_(
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x12: *mut f32,
    ldx12: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    x22: *mut f32,
    ldx22: *const c_int,
    theta: *mut f32,
    phi: *mut f32,
    taup1: *mut f32,
    taup2: *mut f32,
    tauq1: *mut f32,
    tauq2: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorbdb_(
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        tauq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb_(
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x12: *mut f64,
    ldx12: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    x22: *mut f64,
    ldx22: *const c_int,
    theta: *mut f64,
    phi: *mut f64,
    taup1: *mut f64,
    taup2: *mut f64,
    tauq1: *mut f64,
    tauq2: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorbdb_(
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        phi,
        taup1,
        taup2,
        tauq1,
        tauq2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cuncsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut MKL_Complex8,
    ldx11: *const c_int,
    x12: *mut MKL_Complex8,
    ldx12: *const c_int,
    x21: *mut MKL_Complex8,
    ldx21: *const c_int,
    x22: *mut MKL_Complex8,
    ldx22: *const c_int,
    theta: *mut f32,
    u1: *mut MKL_Complex8,
    ldu1: *const c_int,
    u2: *mut MKL_Complex8,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex8,
    ldv1t: *const c_int,
    v2t: *mut MKL_Complex8,
    ldv2t: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cuncsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zuncsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut MKL_Complex16,
    ldx11: *const c_int,
    x12: *mut MKL_Complex16,
    ldx12: *const c_int,
    x21: *mut MKL_Complex16,
    ldx21: *const c_int,
    x22: *mut MKL_Complex16,
    ldx22: *const c_int,
    theta: *mut f64,
    u1: *mut MKL_Complex16,
    ldu1: *const c_int,
    u2: *mut MKL_Complex16,
    ldu2: *const c_int,
    v1t: *mut MKL_Complex16,
    ldv1t: *const c_int,
    v2t: *mut MKL_Complex16,
    ldv2t: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zuncsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut f32,
    ldx11: *const c_int,
    x12: *mut f32,
    ldx12: *const c_int,
    x21: *mut f32,
    ldx21: *const c_int,
    x22: *mut f32,
    ldx22: *const c_int,
    theta: *mut f32,
    u1: *mut f32,
    ldu1: *const c_int,
    u2: *mut f32,
    ldu2: *const c_int,
    v1t: *mut f32,
    ldv1t: *const c_int,
    v2t: *mut f32,
    ldv2t: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sorcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    M: *const c_int,
    P: *const c_int,
    Q: *const c_int,
    x11: *mut f64,
    ldx11: *const c_int,
    x12: *mut f64,
    ldx12: *const c_int,
    x21: *mut f64,
    ldx21: *const c_int,
    x22: *mut f64,
    ldx22: *const c_int,
    theta: *mut f64,
    u1: *mut f64,
    ldu1: *const c_int,
    u2: *mut f64,
    ldu2: *const c_int,
    v1t: *mut f64,
    ldv1t: *const c_int,
    v2t: *mut f64,
    ldv2t: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dorcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        M,
        P,
        Q,
        x11,
        ldx11,
        x12,
        ldx12,
        x21,
        ldx21,
        x22,
        ldx22,
        theta,
        u1,
        ldu1,
        u2,
        ldu2,
        v1t,
        ldv1t,
        v2t,
        ldv2t,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clapmr_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    k: *mut c_int
)
{
    clapmr_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapmr_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    k: *mut c_int
)
{
    dlapmr_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlapmr_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    k: *mut c_int
)
{
    zlapmr_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapmr_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    k: *mut c_int
)
{
    slapmr_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    e: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csyconv_(
        uplo,
        way,
        n,
        a,
        lda,
        ipiv,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    e: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsyconv_(
        uplo,
        way,
        n,
        a,
        lda,
        ipiv,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    e: *mut f32,
    info: *mut c_int
)
{
    ssyconv_(
        uplo,
        way,
        n,
        a,
        lda,
        ipiv,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    e: *mut f64,
    info: *mut c_int
)
{
    dsyconv_(
        uplo,
        way,
        n,
        a,
        lda,
        ipiv,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    csyswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    zsyswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    ssyswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    dsyswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    nb: *const c_int,
    info: *mut c_int
)
{
    csytri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    nb: *const c_int,
    info: *mut c_int
)
{
    zsytri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f32,
    nb: *const c_int,
    info: *mut c_int
)
{
    ssytri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f64,
    nb: *const c_int,
    info: *mut c_int
)
{
    dsytri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartgp_(
    f: *const f32,
    g: *const f32,
    cs: *mut f32,
    sn: *mut f32,
    r: *mut f32
)
{
    slartgp_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartgp_(
    f: *const f64,
    g: *const f64,
    cs: *mut f64,
    sn: *mut f64,
    r: *mut f64
)
{
    dlartgp_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartgs_(
    x: *const f32,
    y: *const f32,
    sigma: *const f32,
    cs: *mut f32,
    sn: *mut f32
)
{
    slartgs_(
        x,
        y,
        sigma,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartgs_(
    x: *const f64,
    y: *const f64,
    sigma: *const f64,
    cs: *mut f64,
    sn: *mut f64
)
{
    dlartgs_(
        x,
        y,
        sigma,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csytrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsytrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssytrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsytrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chetrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs2_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhetrs2_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cbdsqr_(
    uplo: *const c_char,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vt: *mut MKL_Complex8,
    ldvt: *const c_int,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbbrd_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ncc: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    pt: *mut MKL_Complex8,
    ldpt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        pt,
        ldpt,
        c,
        ldc,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbcon_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbcon_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbequb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cgbequb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbequ_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cgbequ_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbrfs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *const c_int,
    r: *mut f32,
    c: *mut f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsv_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgbsv_(
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    afb: *mut MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    afb: *mut MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbtf2_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgbtf2_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbtrf_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgbtrf_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbtrs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    scale: *const f32,
    m: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    info: *mut c_int
)
{
    cgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f32,
    info: *mut c_int
)
{
    cgebal_(
        job,
        n,
        a,
        lda,
        ilo,
        ihi,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebd2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut MKL_Complex8,
    taup: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgebd2_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebrd_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut MKL_Complex8,
    taup: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgebrd_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgecon_(
    norm: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgecon_(
        norm,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f32,
    k: *mut c_int,
    eigs: *mut MKL_Complex8,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    res: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    s: *mut MKL_Complex8,
    lds: *const c_int,
    zwork: *mut MKL_Complex8,
    lzwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        zwork,
        lzwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    f: *mut MKL_Complex8,
    ldf: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f32,
    k: *mut c_int,
    eigs: *mut MKL_Complex8,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    res: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    s: *mut MKL_Complex8,
    lds: *const c_int,
    zwork: *mut MKL_Complex8,
    lzwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        zwork,
        lzwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeequb_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cgeequb_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeequ_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cgeequ_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_C_SELECT_FUNCTION_1,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    sdim: *mut c_int,
    w: *mut MKL_Complex8,
    vs: *mut MKL_Complex8,
    ldvs: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cgees_(
        jobvs,
        sort,
        select,
        n,
        a,
        lda,
        sdim,
        w,
        vs,
        ldvs,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_C_SELECT_FUNCTION_1,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    sdim: *mut c_int,
    w: *mut MKL_Complex8,
    vs: *mut MKL_Complex8,
    ldvs: *const c_int,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        a,
        lda,
        sdim,
        w,
        vs,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgeev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f32,
    abnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgegs_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vsl: *mut MKL_Complex8,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex8,
    ldvsr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgegs_(
        jobvsl,
        jobvsr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgegv_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgegv_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgehd2_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgehd2_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgehrd_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgehrd_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgelq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgelqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelsd_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    s: *mut f32,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cgelsd_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgels_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgels_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelst_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgelst_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelss_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    s: *mut f32,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgelss_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelsx_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgelsx_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelsy_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgelsy_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeql2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgeql2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqlf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgeqlf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqp3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgeqp3_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqp3rk_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    kmax: *const c_int,
    abstol: *const f32,
    reltol: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    k: *mut c_int,
    maxc2nrmk: *mut f32,
    relmaxc2nrmk: *mut f32,
    jpiv: *mut c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cgeqp3rk_(
        m,
        n,
        nrhs,
        kmax,
        abstol,
        reltol,
        a,
        lda,
        k,
        maxc2nrmk,
        relmaxc2nrmk,
        jpiv,
        tau,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqpf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqr2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgeqr2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqr2p_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgeqr2p_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgeqrf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrfp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgeqrfp_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgerfs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    r: *const f32,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgerq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgerqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesc2_(
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    rhs: *mut MKL_Complex8,
    ipiv: *const c_int,
    jpiv: *const c_int,
    scale: *mut f32
)
{
    cgesc2_(
        n,
        a,
        lda,
        rhs,
        ipiv,
        jpiv,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesdd_(
    jobz: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    vt: *mut MKL_Complex8,
    ldvt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cgesdd_(
        jobz,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    vt: *mut MKL_Complex8,
    ldvt: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgesvd_(
        jobu,
        jobvt,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgesvx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetc2_(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    jpiv: *mut c_int,
    info: *mut c_int
)
{
    cgetc2_(
        n,
        a,
        lda,
        ipiv,
        jpiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgetf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgetrf_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrfnpi(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrfnpi(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cgetrfnpi_(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_cgetrfnpi_(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetri_(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgetri_(
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgetrs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    lscale: *const f32,
    rscale: *const f32,
    m: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    info: *mut c_int
)
{
    cggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggbal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f32,
    rscale: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    cggbal_(
        job,
        n,
        a,
        lda,
        b,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_C_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vsl: *mut MKL_Complex8,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex8,
    ldvsr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_C_SELECT_FUNCTION_2,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vsl: *mut MKL_Complex8,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex8,
    ldvsr: *const c_int,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cggev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f32,
    rscale: *mut f32,
    abnrm: *mut f32,
    bbnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    cggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggglm_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    d: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    y: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cggglm_(
        n,
        m,
        p,
        a,
        lda,
        b,
        ldb,
        d,
        x,
        y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    info: *mut c_int
)
{
    cgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgglse_(
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    d: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cgglse_(
        m,
        n,
        p,
        a,
        lda,
        b,
        ldb,
        c,
        d,
        x,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggqrf_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    taua: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    taub: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cggqrf_(
        n,
        m,
        p,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggrqf_(
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    taua: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    taub: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cggrqf_(
        m,
        p,
        n,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    cggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    iwork: *mut c_int,
    rwork: *mut f32,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtcon_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    du2: *const MKL_Complex8,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cgtcon_(
        norm,
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtrfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    dlf: *const MKL_Complex8,
    df: *const MKL_Complex8,
    duf: *const MKL_Complex8,
    du2: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgtrfs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtsv_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut MKL_Complex8,
    d: *mut MKL_Complex8,
    du: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgtsv_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    dlf: *mut MKL_Complex8,
    df: *mut MKL_Complex8,
    duf: *mut MKL_Complex8,
    du2: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgttrf_(
    n: *const c_int,
    dl: *mut MKL_Complex8,
    d: *mut MKL_Complex8,
    du: *mut MKL_Complex8,
    du2: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    cgttrf_(
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgttrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    du2: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cgttrs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtts2_(
    itrans: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    du2: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    cgtts2_(
        itrans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chbevd_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chbev_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    bb: *const MKL_Complex8,
    ldbb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        x,
        ldx,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    bb: *mut MKL_Complex8,
    ldbb: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    bb: *mut MKL_Complex8,
    ldbb: *const c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    bb: *mut MKL_Complex8,
    ldbb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chbtrd_(
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_checon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    checon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cheequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cheevd_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cheev_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cheevr_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    cheevx_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegs2_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chegs2_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chegst_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chegvd_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chegv_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chegvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cherfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cherfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cherfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cherfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chesv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chesvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chesvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetd2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chetd2_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    chetf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrd_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chetri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chetrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    k: *const c_int,
    alpha: *const f32,
    a: *const MKL_Complex8,
    lda: *const c_int,
    beta: *const f32,
    c: *mut MKL_Complex8
)
{
    chfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        a,
        lda,
        beta,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        t,
        ldt,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chla_transtype_(
    ret_val: *mut c_char,
    ret_val_len: c_int,
    trans: *const c_int
)
{
    chla_transtype_(
        ret_val,
        ret_val_len,
        trans
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chpcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chpevd_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chpev_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chpevx_(
        jobz,
        range,
        uplo,
        n,
        ap,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    bp: *const MKL_Complex8,
    info: *mut c_int
)
{
    chpgst_(
        itype,
        uplo,
        n,
        ap,
        bp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    bp: *mut MKL_Complex8,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    chpgvd_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    bp: *mut MKL_Complex8,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chpgv_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    bp: *mut MKL_Complex8,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    chpgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        ap,
        bp,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    afp: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chpsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    afp: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    chpsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrd_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    d: *mut f32,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chptrd_(
        uplo,
        n,
        ap,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    chptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    chptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    chptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *const c_int,
    n: *const c_int,
    h: *const MKL_Complex8,
    ldh: *const c_int,
    w: *mut MKL_Complex8,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    ifaill: *mut c_int,
    ifailr: *mut c_int,
    info: *mut c_int
)
{
    chsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        h,
        ldh,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        ifaill,
        ifailr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    w: *mut MKL_Complex8,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clabrd_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut MKL_Complex8,
    taup: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int
)
{
    clabrd_(
        m,
        n,
        nb,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        x,
        ldx,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacgv_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    incx: *const c_int
)
{
    clacgv_(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacn2_(
    n: *const c_int,
    v: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    est: *mut f32,
    kase: *mut c_int,
    isave: *mut c_int
)
{
    clacn2_(
        n,
        v,
        x,
        est,
        kase,
        isave
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacon_(
    n: *const c_int,
    v: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    est: *mut f32,
    kase: *mut c_int
)
{
    clacon_(
        n,
        v,
        x,
        est,
        kase
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacp2_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    clacp2_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacpy_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    clacpy_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacrm_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    rwork: *mut f32
)
{
    clacrm_(
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacrt_(
    n: *const c_int,
    cx: *mut MKL_Complex8,
    incx: *const c_int,
    cy: *mut MKL_Complex8,
    incy: *const c_int,
    c: *const MKL_Complex8,
    s: *const MKL_Complex8
)
{
    clacrt_(
        n,
        cx,
        incx,
        cy,
        incy,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cladiv_(
    ret_value: *mut MKL_Complex8,
    x: *const MKL_Complex8,
    y: *const MKL_Complex8
)
{
    cladiv_(
        ret_value,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claed0_(
    qsiz: *const c_int,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    qstore: *mut MKL_Complex8,
    ldqs: *const c_int,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    claed0_(
        qsiz,
        n,
        d,
        e,
        q,
        ldq,
        qstore,
        ldqs,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claed7_(
    n: *const c_int,
    cutpnt: *const c_int,
    qsiz: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    d: *mut f32,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    rho: *const f32,
    indxq: *mut c_int,
    qstore: *mut f32,
    qptr: *mut c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    claed7_(
        n,
        cutpnt,
        qsiz,
        tlvls,
        curlvl,
        curpbm,
        d,
        q,
        ldq,
        rho,
        indxq,
        qstore,
        qptr,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claed8_(
    k: *mut c_int,
    n: *const c_int,
    qsiz: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    d: *mut f32,
    rho: *mut f32,
    cutpnt: *const c_int,
    z: *const f32,
    dlamda: *mut f32,
    q2: *mut MKL_Complex8,
    ldq2: *const c_int,
    w: *mut f32,
    indxp: *mut c_int,
    indx: *mut c_int,
    indxq: *const c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    givnum: *mut f32,
    info: *mut c_int
)
{
    claed8_(
        k,
        n,
        qsiz,
        q,
        ldq,
        d,
        rho,
        cutpnt,
        z,
        dlamda,
        q2,
        ldq2,
        w,
        indxp,
        indx,
        indxq,
        perm,
        givptr,
        givcol,
        givnum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claein_(
    rightv: *const c_int,
    noinit: *const c_int,
    n: *const c_int,
    h: *const MKL_Complex8,
    ldh: *const c_int,
    w: *const MKL_Complex8,
    v: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    rwork: *mut f32,
    eps3: *const f32,
    smlnum: *const f32,
    info: *mut c_int
)
{
    claein_(
        rightv,
        noinit,
        n,
        h,
        ldh,
        w,
        v,
        b,
        ldb,
        rwork,
        eps3,
        smlnum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claesy_(
    a: *const MKL_Complex8,
    b: *const MKL_Complex8,
    c: *const MKL_Complex8,
    rt1: *mut MKL_Complex8,
    rt2: *mut MKL_Complex8,
    evscal: *mut MKL_Complex8,
    cs1: *mut MKL_Complex8,
    sn1: *mut MKL_Complex8
)
{
    claesy_(
        a,
        b,
        c,
        rt1,
        rt2,
        evscal,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claev2_(
    a: *const MKL_Complex8,
    b: *const MKL_Complex8,
    c: *const MKL_Complex8,
    rt1: *mut f32,
    rt2: *mut f32,
    cs1: *mut f32,
    sn1: *mut MKL_Complex8
)
{
    claev2_(
        a,
        b,
        c,
        rt1,
        rt2,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clag2z_(
    m: *const c_int,
    n: *const c_int,
    sa: *const MKL_Complex8,
    ldsa: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    clag2z_(
        m,
        n,
        sa,
        ldsa,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clags2_(
    upper: *const c_int,
    a1: *const f32,
    a2: *const MKL_Complex8,
    a3: *const f32,
    b1: *const f32,
    b2: *const MKL_Complex8,
    b3: *const f32,
    csu: *mut f32,
    snu: *mut MKL_Complex8,
    csv: *mut f32,
    snv: *mut MKL_Complex8,
    csq: *mut f32,
    snq: *mut MKL_Complex8
)
{
    clags2_(
        upper,
        a1,
        a2,
        a3,
        b1,
        b2,
        b3,
        csu,
        snu,
        csv,
        snv,
        csq,
        snq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clagtm_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    alpha: *const f32,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    x: *const MKL_Complex8,
    ldx: *const c_int,
    beta: *const f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    clagtm_(
        trans,
        n,
        nrhs,
        alpha,
        dl,
        d,
        du,
        x,
        ldx,
        beta,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahef_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clahef_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahqr_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    w: *mut MKL_Complex8,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    info: *mut c_int
)
{
    clahqr_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahr2_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int
)
{
    clahr2_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clahrd_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int
)
{
    clahrd_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claic1_(
    job: *const c_int,
    j: *const c_int,
    x: *const MKL_Complex8,
    sest: *const f32,
    w: *const MKL_Complex8,
    gamma: *const MKL_Complex8,
    sestpr: *mut f32,
    s: *mut MKL_Complex8,
    c: *mut MKL_Complex8
)
{
    claic1_(
        job,
        j,
        x,
        sest,
        w,
        gamma,
        sestpr,
        s,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clals0_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    nrhs: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    bx: *mut MKL_Complex8,
    ldbx: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    givnum: *const f32,
    ldgnum: *const c_int,
    poles: *const f32,
    difl: *const f32,
    difr: *const f32,
    z: *const f32,
    k: *const c_int,
    c: *const f32,
    s: *const f32,
    rwork: *mut f32,
    info: *mut c_int
)
{
    clals0_(
        icompq,
        nl,
        nr,
        sqre,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clalsa_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    bx: *mut MKL_Complex8,
    ldbx: *const c_int,
    u: *const f32,
    ldu: *const c_int,
    vt: *const f32,
    k: *const c_int,
    difl: *const f32,
    difr: *const f32,
    z: *const f32,
    poles: *const f32,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    perm: *const c_int,
    givnum: *const f32,
    c: *const f32,
    s: *const f32,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    clalsa_(
        icompq,
        smlsiz,
        n,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clalsd_(
    uplo: *const c_char,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f32,
    e: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    clalsd_(
        uplo,
        smlsiz,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        rcond,
        rank,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clangb_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    clangb_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clange_(
    norm: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    clange_(
        norm,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clangt_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8
) -> f32
{
    clangt_(
        norm,
        n,
        dl,
        d,
        du
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    clanhb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhe_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    clanhe_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhf_(
    norm: *const c_char,
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    work: *mut f32
) -> f32
{
    clanhf_(
        norm,
        transr,
        uplo,
        n,
        a,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    work: *mut f32
) -> f32
{
    clanhp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhs_(
    norm: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    clanhs_(
        norm,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanht_(
    norm: *const c_char,
    n: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8
) -> f32
{
    clanht_(
        norm,
        n,
        d,
        e
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    clansb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    work: *mut f32
) -> f32
{
    clansp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    clansy_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    clantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    work: *mut f32
) -> f32
{
    clantp_(
        norm,
        uplo,
        diag,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    clantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clapll_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    y: *mut MKL_Complex8,
    incy: *const c_int,
    ssmin: *mut f32
)
{
    clapll_(
        n,
        x,
        incx,
        y,
        incy,
        ssmin
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clapmt_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    k: *mut c_int
)
{
    clapmt_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqgb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    r: *const f32,
    c: *const f32,
    rowcnd: *const f32,
    colcnd: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqgb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqge_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    r: *const f32,
    c: *const f32,
    rowcnd: *const f32,
    colcnd: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqge_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqhb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    s: *mut f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqhb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqhe_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqhe_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqhp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqhp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqp2_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex8,
    vn1: *mut f32,
    vn2: *mut f32,
    work: *mut MKL_Complex8
)
{
    claqp2_(
        m,
        n,
        offset,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqps_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex8,
    vn1: *mut f32,
    vn2: *mut f32,
    auxv: *mut MKL_Complex8,
    f: *mut MKL_Complex8,
    ldf: *const c_int
)
{
    claqps_(
        m,
        n,
        offset,
        nb,
        kb,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        auxv,
        f,
        ldf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr0_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    w: *mut MKL_Complex8,
    iloz: *mut c_int,
    ihiz: *mut c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    claqr0_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr1_(
    n: *const c_int,
    h: *const MKL_Complex8,
    ldh: *const c_int,
    s1: *const MKL_Complex8,
    s2: *mut MKL_Complex8,
    v: *mut MKL_Complex8
)
{
    claqr1_(
        n,
        h,
        ldh,
        s1,
        s2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr2_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sh: *mut MKL_Complex8,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex8,
    ldwv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int
)
{
    claqr2_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sh,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr3_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sh: *mut MKL_Complex8,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex8,
    ldwv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int
)
{
    claqr3_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sh,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr4_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    w: *mut MKL_Complex8,
    iloz: *mut c_int,
    ihiz: *mut c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    claqr4_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqr5_(
    wantt: *const c_int,
    wantz: *const c_int,
    kacc22: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nshfts: *const c_int,
    s: *mut MKL_Complex8,
    h: *mut MKL_Complex8,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex8,
    ldwv: *const c_int,
    nh: *const c_int,
    wh: *mut MKL_Complex8,
    ldwh: *const c_int
)
{
    claqr5_(
        wantt,
        wantz,
        kacc22,
        n,
        ktop,
        kbot,
        nshfts,
        s,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        v,
        ldv,
        u,
        ldu,
        nv,
        wv,
        ldwv,
        nh,
        wh,
        ldwh
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqsb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqsb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqsp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqsp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqsy_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    claqsy_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqz0_(
    wants: *const c_char,
    wantq: *const c_char,
    wantz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    rec: *const c_int,
    info: *mut c_int
)
{
    claqz0_(
        wants,
        wantq,
        wantz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqz1_(
    ilq: *const c_int,
    ilz: *const c_int,
    k: *const c_int,
    istartm: *const c_int,
    istopm: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    nq: *const c_int,
    qstart: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    nz: *const c_int,
    zstart: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int
)
{
    claqz1_(
        ilq,
        ilz,
        k,
        istartm,
        istopm,
        ihi,
        a,
        lda,
        b,
        ldb,
        nq,
        qstart,
        q,
        ldq,
        nz,
        zstart,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqz2_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nw: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    qc: *mut MKL_Complex8,
    ldqc: *const c_int,
    zc: *mut MKL_Complex8,
    ldzc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f64,
    rec: *const c_int,
    info: *mut c_int
)
{
    claqz2_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nw,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ns,
        nd,
        alpha,
        beta,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        rwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claqz3_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nshifts: *const c_int,
    nb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    qc: *mut MKL_Complex8,
    ldqc: *const c_int,
    zc: *mut MKL_Complex8,
    ldzc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    claqz3_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nshifts,
        nb,
        alpha,
        beta,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clar1v_(
    n: *const c_int,
    b1: *const c_int,
    bn: *const c_int,
    lambda: *const f32,
    d: *const f32,
    l: *const f32,
    ld: *const f32,
    lld: *const f32,
    pivmin: *const f32,
    gaptol: *const f32,
    z: *mut MKL_Complex8,
    wantnc: *const c_int,
    negcnt: *mut c_int,
    ztz: *mut f32,
    mingma: *mut f32,
    r: *mut c_int,
    isuppz: *mut c_int,
    nrminv: *mut f32,
    resid: *mut f32,
    rqcorr: *mut f32,
    work: *mut f32
)
{
    clar1v_(
        n,
        b1,
        bn,
        lambda,
        d,
        l,
        ld,
        lld,
        pivmin,
        gaptol,
        z,
        wantnc,
        negcnt,
        ztz,
        mingma,
        r,
        isuppz,
        nrminv,
        resid,
        rqcorr,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clar2v_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    y: *mut MKL_Complex8,
    z: *mut MKL_Complex8,
    incx: *const c_int,
    c: *const f32,
    s: *const MKL_Complex8,
    incc: *const c_int
)
{
    clar2v_(
        n,
        x,
        y,
        z,
        incx,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarcm_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    rwork: *mut f32
)
{
    clarcm_(
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    ldwork: *const c_int
)
{
    clarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarf_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex8,
    incv: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8
)
{
    clarf_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfg_(
    n: *const c_int,
    alpha: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    tau: *mut MKL_Complex8
)
{
    clarfg_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfgp_(
    n: *const c_int,
    alpha: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    tau: *mut MKL_Complex8
)
{
    clarfgp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfp_(
    n: *const c_int,
    alpha: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    tau: *mut MKL_Complex8
)
{
    clarfp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    tau: *const MKL_Complex8,
    t: *mut MKL_Complex8,
    ldt: *const c_int
)
{
    clarft_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfx_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex8,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8
)
{
    clarfx_(
        side,
        m,
        n,
        v,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clargv_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    y: *mut MKL_Complex8,
    incy: *const c_int,
    c: *mut f32,
    incc: *const c_int
)
{
    clargv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarnv_(
    idist: *const c_int,
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut MKL_Complex8
)
{
    clarnv_(
        idist,
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarrv_(
    n: *const c_int,
    vl: *const f32,
    vu: *const f32,
    d: *mut f32,
    l: *mut f32,
    pivmin: *mut f32,
    isplit: *const c_int,
    m: *const c_int,
    dol: *const c_int,
    dou: *const c_int,
    minrgp: *const f32,
    rtol1: *const f32,
    rtol2: *const f32,
    w: *mut f32,
    werr: *mut f32,
    wgap: *mut f32,
    iblock: *const c_int,
    indexw: *const c_int,
    gers: *const f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    clarrv_(
        n,
        vl,
        vu,
        d,
        l,
        pivmin,
        isplit,
        m,
        dol,
        dou,
        minrgp,
        rtol1,
        rtol2,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        z,
        ldz,
        isuppz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarscl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f32,
    x: *mut MKL_Complex8,
    ldx: *const c_int
)
{
    clarscl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clartg_(
    f: *const MKL_Complex8,
    g: *const MKL_Complex8,
    cs: *mut f32,
    sn: *mut MKL_Complex8,
    r: *mut MKL_Complex8
)
{
    clartg_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clartv_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    incx: *const c_int,
    y: *mut MKL_Complex8,
    incy: *const c_int,
    c: *const f32,
    s: *const MKL_Complex8,
    incc: *const c_int
)
{
    clartv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarzb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    ldwork: *const c_int
)
{
    clarzb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarz_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex8,
    incv: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8
)
{
    clarz_(
        side,
        m,
        n,
        l,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarzt_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    tau: *const MKL_Complex8,
    t: *mut MKL_Complex8,
    ldt: *const c_int
)
{
    clarzt_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clascl_(
    type_: *const c_char,
    kl: *const c_int,
    ku: *const c_int,
    cfrom: *const f32,
    cto: *const f32,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    clascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clascl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f32,
    x: *mut MKL_Complex8,
    ldx: *const c_int
)
{
    clascl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claset_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    beta: *const MKL_Complex8,
    a: *mut MKL_Complex8,
    lda: *const c_int
)
{
    claset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clasr_(
    side: *const c_char,
    pivot: *const c_char,
    direct: *const c_char,
    m: *const c_int,
    n: *const c_int,
    c: *const f32,
    s: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int
)
{
    clasr_(
        side,
        pivot,
        direct,
        m,
        n,
        c,
        s,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_classq_(
    n: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    scale: *mut f32,
    sumsq: *mut f32
)
{
    classq_(
        n,
        x,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claswp_(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    k1: *const c_int,
    k2: *const c_int,
    ipiv: *const c_int,
    incx: *const c_int
)
{
    claswp_(
        n,
        a,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clasyf_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex8,
    ldw: *const c_int,
    info: *mut c_int
)
{
    clasyf_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatbs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    x: *mut MKL_Complex8,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    clatbs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        kd,
        ab,
        ldab,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatdf_(
    ijob: *const c_int,
    n: *const c_int,
    z: *const MKL_Complex8,
    ldz: *const c_int,
    rhs: *mut MKL_Complex8,
    rdsum: *mut f32,
    rdscal: *mut f32,
    ipiv: *const c_int,
    jpiv: *const c_int
)
{
    clatdf_(
        ijob,
        n,
        z,
        ldz,
        rhs,
        rdsum,
        rdscal,
        ipiv,
        jpiv
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatps_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    x: *mut MKL_Complex8,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    clatps_(
        uplo,
        trans,
        diag,
        normin,
        n,
        ap,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatrd_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    w: *mut MKL_Complex8,
    ldw: *const c_int
)
{
    clatrd_(
        uplo,
        n,
        nb,
        a,
        lda,
        e,
        tau,
        w,
        ldw
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *mut MKL_Complex8,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    clatrs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        a,
        lda,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatrs3_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    scale: *mut f32,
    cnorm: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    clatrs3_(
        uplo,
        trans,
        diag,
        normin,
        n,
        nrhs,
        a,
        lda,
        x,
        ldx,
        scale,
        cnorm,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatrz_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8
)
{
    clatrz_(
        m,
        n,
        l,
        a,
        lda,
        tau,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatzm_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex8,
    incv: *const c_int,
    tau: *const MKL_Complex8,
    c1: *mut MKL_Complex8,
    c2: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8
)
{
    clatzm_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c1,
        c2,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clauu2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    clauu2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clauum_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    clauum_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbcon_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cpbcon_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbequ_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cpbequ_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbrfs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbstf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    info: *mut c_int
)
{
    cpbstf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbsv_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    afb: *mut MKL_Complex8,
    ldafb: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbtf2_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    info: *mut c_int
)
{
    cpbtf2_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbtrf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex8,
    ldab: *const c_int,
    info: *mut c_int
)
{
    cpbtrf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbtrs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cpftrf_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cpftri_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        a,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpocon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cpocon_(
        uplo,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpoequb_(
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cpoequb_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpoequ_(
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cpoequ_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cporfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cporfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    s: *mut f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cposvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    cpotf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    cpotrf_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    cpotri_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpotrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cppcon_(
        uplo,
        n,
        ap,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppequ_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    cppequ_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    afp: *const MKL_Complex8,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cpprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cppsv_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex8,
    afp: *mut MKL_Complex8,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cpptrf_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cpptri_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpptrs_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpstf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    cpstf2_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpstrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    cpstrf_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptcon_(
    n: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8,
    anorm: *const f32,
    rcond: *mut f32,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cptcon_(
        n,
        d,
        e,
        anorm,
        rcond,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    cpteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8,
    df: *const f32,
    ef: *const MKL_Complex8,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cptrfs_(
        uplo,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptsv_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f32,
    e: *mut MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cptsv_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptsvx_(
    fact: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8,
    df: *mut f32,
    ef: *mut MKL_Complex8,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cptsvx_(
        fact,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpttrf_(
    n: *const c_int,
    d: *mut f32,
    e: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cpttrf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpttrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cpttrs_(
        uplo,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptts2_(
    iuplo: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    cptts2_(
        iuplo,
        n,
        nrhs,
        d,
        e,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_crot_(
    n: *const c_int,
    cx: *mut MKL_Complex8,
    incx: *const c_int,
    cy: *mut MKL_Complex8,
    incy: *const c_int,
    c: *const f32,
    s: *const MKL_Complex8
)
{
    crot_(
        n,
        cx,
        incx,
        cy,
        incy,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cspcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspmv_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    ap: *const MKL_Complex8,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const MKL_Complex8,
    y: *mut MKL_Complex8,
    incy: *const c_int
)
{
    cspmv_(
        uplo,
        n,
        alpha,
        ap,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspr_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    x: *const MKL_Complex8,
    incx: *const c_int,
    ap: *mut MKL_Complex8
)
{
    cspr_(
        uplo,
        n,
        alpha,
        x,
        incx,
        ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    afp: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    csprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cspsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    afp: *mut MKL_Complex8,
    ipiv: *mut c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    cspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    csptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    csptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csrscl_(
    n: *const c_int,
    sa: *const f32,
    sx: *mut MKL_Complex8,
    incx: *const c_int
)
{
    csrscl_(
        n,
        sa,
        sx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstedc_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cstedc_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cstegr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstein_(
    n: *const c_int,
    d: *const f32,
    e: *const f32,
    m: *const c_int,
    w: *const f32,
    iblock: *const c_int,
    isplit: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    cstein_(
        n,
        d,
        e,
        m,
        w,
        iblock,
        isplit,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    m: *mut c_int,
    w: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    nzc: *const c_int,
    isuppz: *mut c_int,
    tryrac: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    cstemr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        m,
        w,
        z,
        ldz,
        nzc,
        isuppz,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    csteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csycon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csycon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csyequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csymv_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const MKL_Complex8,
    y: *mut MKL_Complex8,
    incy: *const c_int
)
{
    csymv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyr_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    x: *const MKL_Complex8,
    incx: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int
)
{
    csyr_(
        uplo,
        n,
        alpha,
        x,
        incx,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    csyrfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    csyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csysv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    csysvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    af: *mut MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    csysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    csytf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    csytrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    csytri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    csytrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        ab,
        ldab,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *const MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ctbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const MKL_Complex8,
    a: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int
)
{
    ctfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        a,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctftri_(
        transr,
        uplo,
        diag,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const MKL_Complex8,
    ap: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctfttp_(
        transr,
        uplo,
        n,
        arf,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const MKL_Complex8,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    ctfttr_(
        transr,
        uplo,
        n,
        arf,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    s: *const MKL_Complex8,
    lds: *const c_int,
    p: *const MKL_Complex8,
    ldp: *const c_int,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctgevc_(
        side,
        howmny,
        select,
        n,
        s,
        lds,
        p,
        ldp,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgex2_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    j1: *const c_int,
    info: *mut c_int
)
{
    ctgex2_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        j1,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgexc_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    ifst: *const c_int,
    ilst: *mut c_int,
    info: *mut c_int
)
{
    ctgexc_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsen_(
    ijob: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    select: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    alpha: *mut MKL_Complex8,
    beta: *mut MKL_Complex8,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    m: *mut c_int,
    pl: *mut f32,
    pr: *mut f32,
    dif: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ctgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        m,
        pl,
        pr,
        dif,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut MKL_Complex8,
    ldu: *const c_int,
    v: *mut MKL_Complex8,
    ldv: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    work: *mut MKL_Complex8,
    ncycle: *mut c_int,
    info: *mut c_int
)
{
    ctgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        ncycle,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    vl: *const MKL_Complex8,
    ldvl: *const c_int,
    vr: *const MKL_Complex8,
    ldvr: *const c_int,
    s: *mut f32,
    dif: *mut f32,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ctgsna_(
        job,
        howmny,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        dif,
        mm,
        m,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsy2_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    d: *const MKL_Complex8,
    ldd: *const c_int,
    e: *const MKL_Complex8,
    lde: *const c_int,
    f: *mut MKL_Complex8,
    ldf: *const c_int,
    scale: *mut f32,
    rdsum: *mut f32,
    rdscal: *mut f32,
    info: *mut c_int
)
{
    ctgsy2_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        rdsum,
        rdscal,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsyl_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    d: *const MKL_Complex8,
    ldd: *const c_int,
    e: *const MKL_Complex8,
    lde: *const c_int,
    f: *mut MKL_Complex8,
    ldf: *const c_int,
    scale: *mut f32,
    dif: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ctgsyl_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        dif,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctpcon_(
        norm,
        uplo,
        diag,
        n,
        ap,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *const MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctptri_(
        uplo,
        diag,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ctptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    arf: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctpttf_(
        transr,
        uplo,
        n,
        ap,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpttr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    ctpttr_(
        uplo,
        n,
        ap,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    rcond: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctrcon_(
        norm,
        uplo,
        diag,
        n,
        a,
        lda,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    vl: *mut MKL_Complex8,
    ldvl: *const c_int,
    vr: *mut MKL_Complex8,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctrevc_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrexc_(
    compq: *const c_char,
    n: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    ifst: *const c_int,
    ilst: *const c_int,
    info: *mut c_int
)
{
    ctrexc_(
        compq,
        n,
        t,
        ldt,
        q,
        ldq,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    x: *const MKL_Complex8,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut MKL_Complex8,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    w: *mut MKL_Complex8,
    m: *mut c_int,
    s: *mut f32,
    sep: *mut f32,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ctrsen_(
        job,
        compq,
        select,
        n,
        t,
        ldt,
        q,
        ldq,
        w,
        m,
        s,
        sep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    vl: *const MKL_Complex8,
    ldvl: *const c_int,
    vr: *const MKL_Complex8,
    ldvr: *const c_int,
    s: *mut f32,
    sep: *mut f32,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex8,
    ldwork: *const c_int,
    rwork: *mut f32,
    info: *mut c_int
)
{
    ctrsna_(
        job,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        sep,
        mm,
        m,
        work,
        ldwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    scale: *mut f32,
    info: *mut c_int
)
{
    ctrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    scale: *mut f32,
    swork: *mut f32,
    ldswork: *const c_int,
    info: *mut c_int
)
{
    ctrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        swork,
        ldswork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrti2_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    ctrti2_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    ctrtri_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ctrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    arf: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctrttf_(
        transr,
        uplo,
        n,
        a,
        lda,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrttp_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    ap: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctrttp_(
        uplo,
        n,
        a,
        lda,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctzrqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    info: *mut c_int
)
{
    ctzrqf_(
        m,
        n,
        a,
        lda,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctzrzf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *mut MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ctzrzf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cung2l_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cung2l_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cung2r_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cung2r_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungbr_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungbr_(
        vect,
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunghr_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunghr_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungl2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cungl2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunglq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunglq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungql_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungql_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungqr_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungqr_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungr2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cungr2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungrq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungrq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungtr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cungtr_(
        uplo,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunm2l_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunm2l_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunm2r_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunm2r_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunml2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunml2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmql_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmr2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunmr2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmr3_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cunmr3_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmrq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cunmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cupgtr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    tau: *const MKL_Complex8,
    q: *mut MKL_Complex8,
    ldq: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cupgtr_(
        uplo,
        n,
        ap,
        tau,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cupmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ap: *const MKL_Complex8,
    tau: *const MKL_Complex8,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    cupmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        ap,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsdc_(
    uplo: *const c_char,
    compq: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    q: *mut f64,
    iq: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dbdsdc_(
        uplo,
        compq,
        n,
        d,
        e,
        u,
        ldu,
        vt,
        ldvt,
        q,
        iq,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsqr_(
    uplo: *const c_char,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vt: *mut f64,
    ldvt: *const c_int,
    u: *mut f64,
    ldu: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ddisna_(
    job: *const c_char,
    m: *const c_int,
    n: *const c_int,
    d: *const f64,
    sep: *mut f64,
    info: *mut c_int
)
{
    ddisna_(
        job,
        m,
        n,
        d,
        sep,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbbrd_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ncc: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    pt: *mut f64,
    ldpt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        pt,
        ldpt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbcon_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgbcon_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbequb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dgbequb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbequ_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dgbequ_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbrfs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int,
    ipiv: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int,
    ipiv: *const c_int,
    r: *mut f64,
    c: *mut f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsv_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgbsv_(
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    afb: *mut f64,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    afb: *mut f64,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbtf2_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgbtf2_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbtrf_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgbtrf_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbtrs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    scale: *const f64,
    m: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    info: *mut c_int
)
{
    dgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f64,
    info: *mut c_int
)
{
    dgebal_(
        job,
        n,
        a,
        lda,
        ilo,
        ihi,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebd2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut f64,
    taup: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgebd2_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebrd_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut f64,
    taup: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgebrd_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgecon_(
    norm: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgecon_(
        norm,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f64,
    k: *mut c_int,
    reig: *mut f64,
    imeig: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    res: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    w: *mut f64,
    ldw: *const c_int,
    s: *mut f64,
    lds: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    f: *mut f64,
    ldf: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f64,
    k: *mut c_int,
    reigs: *mut f64,
    imeig: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    res: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    s: *mut f64,
    lds: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reigs,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeequb_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dgeequb_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeequ_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dgeequ_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_D_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    sdim: *mut c_int,
    wr: *mut f64,
    wi: *mut f64,
    vs: *mut f64,
    ldvs: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dgees_(
        jobvs,
        sort,
        select,
        n,
        a,
        lda,
        sdim,
        wr,
        wi,
        vs,
        ldvs,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_D_SELECT_FUNCTION_2,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    sdim: *mut c_int,
    wr: *mut f64,
    wi: *mut f64,
    vs: *mut f64,
    ldvs: *const c_int,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        a,
        lda,
        sdim,
        wr,
        wi,
        vs,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f64,
    abnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgegs_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vsl: *mut f64,
    ldvsl: *const c_int,
    vsr: *mut f64,
    ldvsr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgegs_(
        jobvsl,
        jobvsr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgegv_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgegv_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgehd2_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgehd2_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgehrd_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgehrd_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    sva: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        a,
        lda,
        sva,
        u,
        ldu,
        v,
        ldv,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgelq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgelqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelsd_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    s: *mut f64,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgelsd_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgels_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgels_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelst_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgelst_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelss_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    s: *mut f64,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgelss_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelsx_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dgelsx_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelsy_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgelsy_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeql2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgeql2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqlf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeqlf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqp3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeqp3_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqp3rk_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    kmax: *const c_int,
    abstol: *const f64,
    reltol: *const f64,
    a: *mut f64,
    lda: *const c_int,
    k: *mut c_int,
    maxc2nrmk: *mut f64,
    relmaxc2nrmk: *mut f64,
    jpiv: *mut c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgeqp3rk_(
        m,
        n,
        nrhs,
        kmax,
        abstol,
        reltol,
        a,
        lda,
        k,
        maxc2nrmk,
        relmaxc2nrmk,
        jpiv,
        tau,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqpf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqr2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgeqr2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqr2p_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgeqr2p_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeqrf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrfp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgeqrfp_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgerfs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    r: *const f64,
    c: *const f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dgerq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgerqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesc2_(
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    rhs: *mut f64,
    ipiv: *const c_int,
    jpiv: *const c_int,
    scale: *mut f64
)
{
    dgesc2_(
        n,
        a,
        lda,
        rhs,
        ipiv,
        jpiv,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesdd_(
    jobz: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    s: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgesdd_(
        jobz,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    s: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgesvd_(
        jobu,
        jobvt,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        sva,
        mv,
        v,
        ldv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgesvx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetc2_(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    jpiv: *mut c_int,
    info: *mut c_int
)
{
    dgetc2_(
        n,
        a,
        lda,
        ipiv,
        jpiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgetf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgetrf_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrfnpi(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrfnpi(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dgetrfnpi_(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dgetrfnpi_(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetri_(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgetri_(
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgetrs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    lscale: *const f64,
    rscale: *const f64,
    m: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    info: *mut c_int
)
{
    dggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggbal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f64,
    rscale: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dggbal_(
        job,
        n,
        a,
        lda,
        b,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_D_SELECT_FUNCTION_3,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vsl: *mut f64,
    ldvsl: *const c_int,
    vsr: *mut f64,
    ldvsr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_D_SELECT_FUNCTION_3,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vsl: *mut f64,
    ldvsl: *const c_int,
    vsr: *mut f64,
    ldvsr: *const c_int,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f64,
    rscale: *mut f64,
    abnrm: *mut f64,
    bbnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    dggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggglm_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    d: *mut f64,
    x: *mut f64,
    y: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggglm_(
        n,
        m,
        p,
        a,
        lda,
        b,
        ldb,
        d,
        x,
        y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    info: *mut c_int
)
{
    dgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgglse_(
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    c: *mut f64,
    d: *mut f64,
    x: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgglse_(
        m,
        n,
        p,
        a,
        lda,
        b,
        ldb,
        c,
        d,
        x,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggqrf_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    taua: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    taub: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggqrf_(
        n,
        m,
        p,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggrqf_(
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    taua: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    taub: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dggrqf_(
        m,
        p,
        n,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    iwork: *mut c_int,
    tau: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgsvj0_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    eps: *const f64,
    sfmin: *const f64,
    tol: *const f64,
    nsweep: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgsvj0_(
        jobv,
        m,
        n,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgsvj1_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    sva: *mut f64,
    mv: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    eps: *const f64,
    sfmin: *const f64,
    tol: *const f64,
    nsweep: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dgsvj1_(
        jobv,
        m,
        n,
        n1,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtcon_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    du2: *const f64,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgtcon_(
        norm,
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtrfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    dlf: *const f64,
    df: *const f64,
    duf: *const f64,
    du2: *const f64,
    ipiv: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgtrfs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtsv_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut f64,
    d: *mut f64,
    du: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgtsv_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    dlf: *mut f64,
    df: *mut f64,
    duf: *mut f64,
    du2: *mut f64,
    ipiv: *mut c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgttrf_(
    n: *const c_int,
    dl: *mut f64,
    d: *mut f64,
    du: *mut f64,
    du2: *mut f64,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dgttrf_(
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgttrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    du2: *const f64,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dgttrs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtts2_(
    itrans: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    du2: *const f64,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int
)
{
    dgtts2_(
        itrans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dhgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        t,
        ldt,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    h: *const f64,
    ldh: *const c_int,
    wr: *mut f64,
    wi: *const f64,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    ifaill: *mut c_int,
    ifailr: *mut c_int,
    info: *mut c_int
)
{
    dhsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        h,
        ldh,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        ifaill,
        ifailr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dhseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_disnan_(
    din: *const f64
) -> c_int
{
    disnan_(
        din
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlabad_(
    smallx: *mut f64,
    large: *mut f64
)
{
    dlabad_(
        smallx,
        large
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlabrd_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut f64,
    taup: *mut f64,
    x: *mut f64,
    ldx: *const c_int,
    y: *mut f64,
    ldy: *const c_int
)
{
    dlabrd_(
        m,
        n,
        nb,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        x,
        ldx,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlacn2_(
    n: *const c_int,
    v: *mut f64,
    x: *mut f64,
    isgn: *mut c_int,
    est: *mut f64,
    kase: *mut c_int,
    isave: *mut c_int
)
{
    dlacn2_(
        n,
        v,
        x,
        isgn,
        est,
        kase,
        isave
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlacon_(
    n: *const c_int,
    v: *mut f64,
    x: *mut f64,
    isgn: *mut c_int,
    est: *mut f64,
    kase: *mut c_int
)
{
    dlacon_(
        n,
        v,
        x,
        isgn,
        est,
        kase
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlacpy_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int
)
{
    dlacpy_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dladiv_(
    a: *const f64,
    b: *const f64,
    c: *const f64,
    d: *const f64,
    p: *mut f64,
    q: *mut f64
)
{
    dladiv_(
        a,
        b,
        c,
        d,
        p,
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlae2_(
    a: *const f64,
    b: *const f64,
    c: *const f64,
    rt1: *mut f64,
    rt2: *mut f64
)
{
    dlae2_(
        a,
        b,
        c,
        rt1,
        rt2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaebz_(
    ijob: *const c_int,
    nitmax: *const c_int,
    n: *const c_int,
    mmax: *const c_int,
    minp: *const c_int,
    nbmin: *const c_int,
    abstol: *const f64,
    reltol: *const f64,
    pivmin: *const f64,
    d: *const f64,
    e: *const f64,
    e2: *const f64,
    nval: *mut c_int,
    ab: *mut f64,
    c: *mut f64,
    mout: *mut c_int,
    nab: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlaebz_(
        ijob,
        nitmax,
        n,
        mmax,
        minp,
        nbmin,
        abstol,
        reltol,
        pivmin,
        d,
        e,
        e2,
        nval,
        ab,
        c,
        mout,
        nab,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed0_(
    icompq: *const c_int,
    qsiz: *const c_int,
    n: *const c_int,
    d: *mut f64,
    e: *const f64,
    q: *mut f64,
    ldq: *const c_int,
    qstore: *mut f64,
    ldqs: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlaed0_(
        icompq,
        qsiz,
        n,
        d,
        e,
        q,
        ldq,
        qstore,
        ldqs,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed1_(
    n: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *const f64,
    cutpnt: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlaed1_(
        n,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed2_(
    k: *mut c_int,
    n: *const c_int,
    n1: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *mut f64,
    z: *const f64,
    dlamda: *mut f64,
    w: *mut f64,
    q2: *mut f64,
    indx: *mut c_int,
    indxc: *mut c_int,
    indxp: *mut c_int,
    coltyp: *mut c_int,
    info: *mut c_int
)
{
    dlaed2_(
        k,
        n,
        n1,
        d,
        q,
        ldq,
        indxq,
        rho,
        z,
        dlamda,
        w,
        q2,
        indx,
        indxc,
        indxp,
        coltyp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed3_(
    k: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    rho: *const f64,
    dlamda: *mut f64,
    q2: *const f64,
    indx: *const c_int,
    ctot: *const c_int,
    w: *mut f64,
    s: *mut f64,
    info: *mut c_int
)
{
    dlaed3_(
        k,
        n,
        n1,
        d,
        q,
        ldq,
        rho,
        dlamda,
        q2,
        indx,
        ctot,
        w,
        s,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed4_(
    n: *const c_int,
    i: *const c_int,
    d: *const f64,
    z: *const f64,
    delta: *mut f64,
    rho: *const f64,
    dlam: *mut f64,
    info: *mut c_int
)
{
    dlaed4_(
        n,
        i,
        d,
        z,
        delta,
        rho,
        dlam,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed5_(
    i: *const c_int,
    d: *const f64,
    z: *const f64,
    delta: *mut f64,
    rho: *const f64,
    dlam: *mut f64
)
{
    dlaed5_(
        i,
        d,
        z,
        delta,
        rho,
        dlam
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed6_(
    kniter: *const c_int,
    orgati: *const c_int,
    rho: *const f64,
    d: *const f64,
    z: *const f64,
    finit: *const f64,
    tau: *mut f64,
    info: *mut c_int
)
{
    dlaed6_(
        kniter,
        orgati,
        rho,
        d,
        z,
        finit,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed7_(
    icompq: *const c_int,
    n: *const c_int,
    qsiz: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *const f64,
    cutpnt: *const c_int,
    qstore: *mut f64,
    qptr: *mut c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlaed7_(
        icompq,
        n,
        qsiz,
        tlvls,
        curlvl,
        curpbm,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        qstore,
        qptr,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed8_(
    icompq: *const c_int,
    k: *mut c_int,
    n: *const c_int,
    qsiz: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    indxq: *const c_int,
    rho: *mut f64,
    cutpnt: *const c_int,
    z: *const f64,
    dlamda: *mut f64,
    q2: *mut f64,
    ldq2: *const c_int,
    w: *mut f64,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    givnum: *mut f64,
    indxp: *mut c_int,
    indx: *mut c_int,
    info: *mut c_int
)
{
    dlaed8_(
        icompq,
        k,
        n,
        qsiz,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        z,
        dlamda,
        q2,
        ldq2,
        w,
        perm,
        givptr,
        givcol,
        givnum,
        indxp,
        indx,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaed9_(
    k: *const c_int,
    kstart: *const c_int,
    kstop: *const c_int,
    n: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    rho: *const f64,
    dlamda: *const f64,
    w: *const f64,
    s: *mut f64,
    lds: *const c_int,
    info: *mut c_int
)
{
    dlaed9_(
        k,
        kstart,
        kstop,
        n,
        d,
        q,
        ldq,
        rho,
        dlamda,
        w,
        s,
        lds,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaeda_(
    n: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f64,
    q: *const f64,
    qptr: *const c_int,
    z: *mut f64,
    ztemp: *mut f64,
    info: *mut c_int
)
{
    dlaeda_(
        n,
        tlvls,
        curlvl,
        curpbm,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        q,
        qptr,
        z,
        ztemp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaein_(
    rightv: *const c_int,
    noinit: *const c_int,
    n: *const c_int,
    h: *const f64,
    ldh: *const c_int,
    wr: *const f64,
    wi: *const f64,
    vr: *mut f64,
    vi: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    eps3: *const f64,
    smlnum: *const f64,
    bignum: *const f64,
    info: *mut c_int
)
{
    dlaein_(
        rightv,
        noinit,
        n,
        h,
        ldh,
        wr,
        wi,
        vr,
        vi,
        b,
        ldb,
        work,
        eps3,
        smlnum,
        bignum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaev2_(
    a: *const f64,
    b: *const f64,
    c: *const f64,
    rt1: *mut f64,
    rt2: *mut f64,
    cs1: *mut f64,
    sn1: *mut f64
)
{
    dlaev2_(
        a,
        b,
        c,
        rt1,
        rt2,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaexc_(
    wantq: *const c_int,
    n: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    j1: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlaexc_(
        wantq,
        n,
        t,
        ldt,
        q,
        ldq,
        j1,
        n1,
        n2,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlag2_(
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    safmin: *const f64,
    scale1: *mut f64,
    scale2: *mut f64,
    wr1: *mut f64,
    wr2: *mut f64,
    wi: *mut f64
)
{
    dlag2_(
        a,
        lda,
        b,
        ldb,
        safmin,
        scale1,
        scale2,
        wr1,
        wr2,
        wi
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlag2s_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    sa: *mut f32,
    ldsa: *const c_int,
    info: *mut c_int
)
{
    dlag2s_(
        m,
        n,
        a,
        lda,
        sa,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlags2_(
    upper: *const c_int,
    a1: *const f64,
    a2: *const f64,
    a3: *const f64,
    b1: *const f64,
    b2: *const f64,
    b3: *const f64,
    csu: *mut f64,
    snu: *mut f64,
    csv: *mut f64,
    snv: *mut f64,
    csq: *mut f64,
    snq: *mut f64
)
{
    dlags2_(
        upper,
        a1,
        a2,
        a3,
        b1,
        b2,
        b3,
        csu,
        snu,
        csv,
        snv,
        csq,
        snq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagtf_(
    n: *const c_int,
    a: *mut f64,
    lambda: *const f64,
    b: *mut f64,
    c: *mut f64,
    tol: *const f64,
    d: *mut f64,
    in_: *mut c_int,
    info: *mut c_int
)
{
    dlagtf_(
        n,
        a,
        lambda,
        b,
        c,
        tol,
        d,
        in_,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagtm_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    alpha: *const f64,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    x: *const f64,
    ldx: *const c_int,
    beta: *const f64,
    b: *mut f64,
    ldb: *const c_int
)
{
    dlagtm_(
        trans,
        n,
        nrhs,
        alpha,
        dl,
        d,
        du,
        x,
        ldx,
        beta,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagts_(
    job: *const c_int,
    n: *const c_int,
    a: *const f64,
    b: *const f64,
    c: *const f64,
    d: *const f64,
    in_: *const c_int,
    y: *mut f64,
    tol: *mut f64,
    info: *mut c_int
)
{
    dlagts_(
        job,
        n,
        a,
        b,
        c,
        d,
        in_,
        y,
        tol,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagv2_(
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    csl: *mut f64,
    snl: *mut f64,
    csr: *mut f64,
    snr: *mut f64
)
{
    dlagv2_(
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        csl,
        snl,
        csr,
        snr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlahqr_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    info: *mut c_int
)
{
    dlahqr_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlahr2_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    t: *mut f64,
    ldt: *const c_int,
    y: *mut f64,
    ldy: *const c_int
)
{
    dlahr2_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlahrd_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    t: *mut f64,
    ldt: *const c_int,
    y: *mut f64,
    ldy: *const c_int
)
{
    dlahrd_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaic1_(
    job: *const c_int,
    j: *const c_int,
    x: *const f64,
    sest: *const f64,
    w: *const f64,
    gamma: *const f64,
    sestpr: *mut f64,
    s: *mut f64,
    c: *mut f64
)
{
    dlaic1_(
        job,
        j,
        x,
        sest,
        w,
        gamma,
        sestpr,
        s,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaisnan_(
    din1: *const f64,
    din2: *const f64
) -> c_int
{
    dlaisnan_(
        din1,
        din2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaln2_(
    ltrans: *const c_int,
    na: *const c_int,
    nw: *const c_int,
    smin: *const f64,
    ca: *const f64,
    a: *const f64,
    lda: *const c_int,
    d1: *const f64,
    d2: *const f64,
    b: *const f64,
    ldb: *const c_int,
    wr: *const f64,
    wi: *const f64,
    x: *mut f64,
    ldx: *const c_int,
    scale: *mut f64,
    xnorm: *mut f64,
    info: *mut c_int
)
{
    dlaln2_(
        ltrans,
        na,
        nw,
        smin,
        ca,
        a,
        lda,
        d1,
        d2,
        b,
        ldb,
        wr,
        wi,
        x,
        ldx,
        scale,
        xnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlals0_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    nrhs: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    bx: *mut f64,
    ldbx: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    givnum: *const f64,
    ldgnum: *const c_int,
    poles: *const f64,
    difl: *const f64,
    difr: *const f64,
    z: *const f64,
    k: *const c_int,
    c: *const f64,
    s: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlals0_(
        icompq,
        nl,
        nr,
        sqre,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlalsa_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    bx: *mut f64,
    ldbx: *const c_int,
    u: *const f64,
    ldu: *const c_int,
    vt: *const f64,
    k: *const c_int,
    difl: *const f64,
    difr: *const f64,
    z: *const f64,
    poles: *const f64,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    perm: *const c_int,
    givnum: *const f64,
    c: *const f64,
    s: *const f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlalsa_(
        icompq,
        smlsiz,
        n,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlalsd_(
    uplo: *const c_char,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f64,
    e: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlalsd_(
        uplo,
        smlsiz,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        rcond,
        rank,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamch_(
    cmach: *const c_char
) -> f64
{
    dlamch_(
        cmach
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamc1_(
    beta: *mut c_int,
    t: *mut c_int,
    rnd: *mut c_int,
    ieee1: *mut c_int
)
{
    dlamc1_(
        beta,
        t,
        rnd,
        ieee1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamc2_(
    beta: *mut c_int,
    t: *mut c_int,
    rnd: *mut c_int,
    eps: *mut f64,
    emin: *mut c_int,
    rmin: *mut f64,
    emax: *mut c_int,
    rmax: *mut f64
)
{
    dlamc2_(
        beta,
        t,
        rnd,
        eps,
        emin,
        rmin,
        emax,
        rmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamc3_(
    a: *const f64,
    b: *const f64
) -> f64
{
    dlamc3_(
        a,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamc4_(
    emin: *mut c_int,
    start: *const f64,
    base: *const c_int
)
{
    dlamc4_(
        emin,
        start,
        base
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamc5_(
    beta: *const c_int,
    p: *const c_int,
    emin: *const c_int,
    ieee: *const c_int,
    emax: *mut c_int,
    rmax: *mut f64
)
{
    dlamc5_(
        beta,
        p,
        emin,
        ieee,
        emax,
        rmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamrg_(
    n1: *const c_int,
    n2: *const c_int,
    a: *const f64,
    dtrd1: *const c_int,
    dtrd2: *const c_int,
    index: *mut c_int
)
{
    dlamrg_(
        n1,
        n2,
        a,
        dtrd1,
        dtrd2,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaneg_(
    n: *const c_int,
    d: *const f64,
    lld: *const f64,
    sigma: *const f64,
    pivmin: *const f64,
    r: *const c_int
) -> c_int
{
    dlaneg_(
        n,
        d,
        lld,
        sigma,
        pivmin,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlangb_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    dlangb_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlange_(
    norm: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    dlange_(
        norm,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlangt_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64
) -> f64
{
    dlangt_(
        norm,
        n,
        dl,
        d,
        du
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlanhs_(
    norm: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    dlanhs_(
        norm,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    dlansb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansf_(
    norm: *const c_char,
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    work: *mut f64
) -> f64
{
    dlansf_(
        norm,
        transr,
        uplo,
        n,
        a,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    work: *mut f64
) -> f64
{
    dlansp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlanst_(
    norm: *const c_char,
    n: *const c_int,
    d: *const f64,
    e: *const f64
) -> f64
{
    dlanst_(
        norm,
        n,
        d,
        e
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    dlansy_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    dlantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const f64,
    work: *mut f64
) -> f64
{
    dlantp_(
        norm,
        uplo,
        diag,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    dlantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlanv2_(
    a: *mut f64,
    b: *mut f64,
    c: *mut f64,
    d: *mut f64,
    rt1r: *mut f64,
    rt1i: *mut f64,
    rt2r: *mut f64,
    rt2i: *mut f64,
    cs: *mut f64,
    sn: *mut f64
)
{
    dlanv2_(
        a,
        b,
        c,
        d,
        rt1r,
        rt1i,
        rt2r,
        rt2i,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapll_(
    n: *const c_int,
    x: *mut f64,
    incx: *const c_int,
    y: *mut f64,
    incy: *const c_int,
    ssmin: *mut f64
)
{
    dlapll_(
        n,
        x,
        incx,
        y,
        incy,
        ssmin
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapmt_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    k: *mut c_int
)
{
    dlapmt_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapy2_(
    x: *const f64,
    y: *const f64
) -> f64
{
    dlapy2_(
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapy3_(
    x: *const f64,
    y: *const f64,
    z: *const f64
) -> f64
{
    dlapy3_(
        x,
        y,
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqgb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    r: *const f64,
    c: *const f64,
    rowcnd: *const f64,
    colcnd: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    dlaqgb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqge_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    r: *const f64,
    c: *const f64,
    rowcnd: *const f64,
    colcnd: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    dlaqge_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqp2_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f64,
    vn1: *mut f64,
    vn2: *mut f64,
    work: *mut f64
)
{
    dlaqp2_(
        m,
        n,
        offset,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqps_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f64,
    vn1: *mut f64,
    vn2: *mut f64,
    auxv: *mut f64,
    f: *mut f64,
    ldf: *const c_int
)
{
    dlaqps_(
        m,
        n,
        offset,
        nb,
        kb,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        auxv,
        f,
        ldf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr0_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlaqr0_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr1_(
    n: *const c_int,
    h: *const f64,
    ldh: *const c_int,
    sr1: *const f64,
    si1: *mut f64,
    sr2: *mut f64,
    si2: *mut f64,
    v: *mut f64
)
{
    dlaqr1_(
        n,
        h,
        ldh,
        sr1,
        si1,
        sr2,
        si2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr2_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sr: *mut f64,
    si: *mut f64,
    v: *mut f64,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut f64,
    ldwv: *const c_int,
    work: *mut f64,
    lwork: *const c_int
)
{
    dlaqr2_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sr,
        si,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr3_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sr: *mut f64,
    si: *mut f64,
    v: *mut f64,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut f64,
    ldwv: *const c_int,
    work: *mut f64,
    lwork: *const c_int
)
{
    dlaqr3_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sr,
        si,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr4_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f64,
    ldh: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlaqr4_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqr5_(
    wantt: *const c_int,
    wantz: *const c_int,
    kacc22: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nshfts: *const c_int,
    sr: *mut f64,
    si: *mut f64,
    h: *mut f64,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    u: *mut f64,
    ldu: *const c_int,
    nv: *const c_int,
    wv: *mut f64,
    ldwv: *const c_int,
    nh: *const c_int,
    wh: *mut f64,
    ldwh: *const c_int
)
{
    dlaqr5_(
        wantt,
        wantz,
        kacc22,
        n,
        ktop,
        kbot,
        nshfts,
        sr,
        si,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        v,
        ldv,
        u,
        ldu,
        nv,
        wv,
        ldwv,
        nh,
        wh,
        ldwh
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqsb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    dlaqsb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqsp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    dlaqsp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqsy_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    dlaqsy_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqtr_(
    ltran: *const c_int,
    lreal: *const c_int,
    n: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    b: *const f64,
    w: *const f64,
    scale: *mut f64,
    x: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlaqtr_(
        ltran,
        lreal,
        n,
        t,
        ldt,
        b,
        w,
        scale,
        x,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqz0_(
    wants: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    rec: *const c_int,
    info: *mut c_int
)
{
    dlaqz0_(
        wants,
        wantq,
        wantz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqz1_(
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    sr1: *const f64,
    sr2: *const f64,
    si: *const f64,
    beta1: *const f64,
    beta2: *const f64,
    v: *mut f64
)
{
    dlaqz1_(
        a,
        lda,
        b,
        ldb,
        sr1,
        sr2,
        si,
        beta1,
        beta2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqz2_(
    ilq: *const c_int,
    ilz: *const c_int,
    k: *const c_int,
    istartm: *const c_int,
    istopm: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    nq: *const c_int,
    qstart: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    nz: *const c_int,
    zstart: *const c_int,
    z: *mut f64,
    ldz: *const c_int
)
{
    dlaqz2_(
        ilq,
        ilz,
        k,
        istartm,
        istopm,
        ihi,
        a,
        lda,
        b,
        ldb,
        nq,
        qstart,
        q,
        ldq,
        nz,
        zstart,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqz3_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nw: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    qc: *mut f64,
    ldqc: *const c_int,
    zc: *mut f64,
    ldzc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    rec: *const c_int,
    info: *mut c_int
)
{
    dlaqz3_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nw,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ns,
        nd,
        alphar,
        alphai,
        beta,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaqz4_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nshifts: *const c_int,
    nb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    qc: *mut f64,
    ldqc: *const c_int,
    zc: *mut f64,
    ldzc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlaqz4_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nshifts,
        nb,
        alphar,
        alphai,
        beta,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlar1v_(
    n: *const c_int,
    b1: *const c_int,
    bn: *const c_int,
    lambda: *const f64,
    d: *const f64,
    l: *const f64,
    ld: *const f64,
    lld: *const f64,
    pivmin: *const f64,
    gaptol: *const f64,
    z: *mut f64,
    wantnc: *const c_int,
    negcnt: *mut c_int,
    ztz: *mut f64,
    mingma: *mut f64,
    r: *mut c_int,
    isuppz: *mut c_int,
    nrminv: *mut f64,
    resid: *mut f64,
    rqcorr: *mut f64,
    work: *mut f64
)
{
    dlar1v_(
        n,
        b1,
        bn,
        lambda,
        d,
        l,
        ld,
        lld,
        pivmin,
        gaptol,
        z,
        wantnc,
        negcnt,
        ztz,
        mingma,
        r,
        isuppz,
        nrminv,
        resid,
        rqcorr,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlar2v_(
    n: *const c_int,
    x: *mut f64,
    y: *mut f64,
    z: *mut f64,
    incx: *const c_int,
    c: *const f64,
    s: *const f64,
    incc: *const c_int
)
{
    dlar2v_(
        n,
        x,
        y,
        z,
        incx,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    ldwork: *const c_int
)
{
    dlarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarf_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f64,
    incv: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64
)
{
    dlarf_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfg_(
    n: *const c_int,
    alpha: *mut f64,
    x: *mut f64,
    incx: *const c_int,
    tau: *mut f64
)
{
    dlarfg_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfgp_(
    n: *const c_int,
    alpha: *mut f64,
    x: *mut f64,
    incx: *const c_int,
    tau: *mut f64
)
{
    dlarfgp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfp_(
    n: *const c_int,
    alpha: *mut f64,
    x: *mut f64,
    incx: *const c_int,
    tau: *mut f64
)
{
    dlarfp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    tau: *const f64,
    t: *mut f64,
    ldt: *const c_int
)
{
    dlarft_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfx_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f64,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64
)
{
    dlarfx_(
        side,
        m,
        n,
        v,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlargv_(
    n: *const c_int,
    x: *mut f64,
    incx: *const c_int,
    y: *mut f64,
    incy: *const c_int,
    c: *mut f64,
    incc: *const c_int
)
{
    dlargv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarnv_(
    idist: *const c_int,
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut f64
)
{
    dlarnv_(
        idist,
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarra_(
    n: *const c_int,
    d: *const f64,
    e: *mut f64,
    e2: *mut f64,
    spltol: *const f64,
    tnrm: *const f64,
    nsplit: *mut c_int,
    isplit: *mut c_int,
    info: *mut c_int
)
{
    dlarra_(
        n,
        d,
        e,
        e2,
        spltol,
        tnrm,
        nsplit,
        isplit,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrb_(
    n: *const c_int,
    d: *const f64,
    lld: *const f64,
    ifirst: *const c_int,
    ilast: *const c_int,
    rtol1: *const f64,
    rtol2: *const f64,
    offset: *const c_int,
    w: *mut f64,
    wgap: *mut f64,
    werr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    pivmin: *const f64,
    spdiam: *const f64,
    twist: *const c_int,
    info: *mut c_int
)
{
    dlarrb_(
        n,
        d,
        lld,
        ifirst,
        ilast,
        rtol1,
        rtol2,
        offset,
        w,
        wgap,
        werr,
        work,
        iwork,
        pivmin,
        spdiam,
        twist,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrc_(
    jobt: *const c_char,
    n: *const c_int,
    vl: *const f64,
    vu: *const f64,
    d: *const f64,
    e: *const f64,
    pivmin: *const f64,
    eigcnt: *mut c_int,
    lcnt: *mut c_int,
    rcnt: *mut c_int,
    info: *mut c_int
)
{
    dlarrc_(
        jobt,
        n,
        vl,
        vu,
        d,
        e,
        pivmin,
        eigcnt,
        lcnt,
        rcnt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrd_(
    range: *const c_char,
    order: *const c_char,
    n: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    gers: *const f64,
    reltol: *const f64,
    d: *const f64,
    e: *const f64,
    e2: *const f64,
    pivmin: *const f64,
    nsplit: *const c_int,
    isplit: *const c_int,
    m: *mut c_int,
    w: *mut f64,
    werr: *mut f64,
    wl: *mut f64,
    wu: *mut f64,
    iblock: *mut c_int,
    indexw: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlarrd_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        gers,
        reltol,
        d,
        e,
        e2,
        pivmin,
        nsplit,
        isplit,
        m,
        w,
        werr,
        wl,
        wu,
        iblock,
        indexw,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarre_(
    range: *const c_char,
    n: *const c_int,
    vl: *mut f64,
    vu: *mut f64,
    il: *const c_int,
    iu: *const c_int,
    d: *mut f64,
    e: *mut f64,
    e2: *mut f64,
    rtol1: *const f64,
    rtol2: *const f64,
    spltol: *const f64,
    nsplit: *mut c_int,
    isplit: *mut c_int,
    m: *mut c_int,
    w: *mut f64,
    werr: *mut f64,
    wgap: *mut f64,
    iblock: *mut c_int,
    indexw: *mut c_int,
    gers: *mut f64,
    pivmin: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlarre_(
        range,
        n,
        vl,
        vu,
        il,
        iu,
        d,
        e,
        e2,
        rtol1,
        rtol2,
        spltol,
        nsplit,
        isplit,
        m,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        pivmin,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrf_(
    n: *const c_int,
    d: *const f64,
    l: *const f64,
    ld: *const f64,
    clstrt: *const c_int,
    clend: *const c_int,
    w: *const f64,
    wgap: *mut f64,
    werr: *const f64,
    spdiam: *const f64,
    clgapl: *const f64,
    clgapr: *mut f64,
    pivmin: *const f64,
    sigma: *mut f64,
    dplus: *mut f64,
    lplus: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlarrf_(
        n,
        d,
        l,
        ld,
        clstrt,
        clend,
        w,
        wgap,
        werr,
        spdiam,
        clgapl,
        clgapr,
        pivmin,
        sigma,
        dplus,
        lplus,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrj_(
    n: *const c_int,
    d: *const f64,
    e2: *const f64,
    ifirst: *const c_int,
    ilast: *const c_int,
    rtol: *const f64,
    offset: *const c_int,
    w: *mut f64,
    werr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    pivmin: *const f64,
    spdiam: *const f64,
    info: *mut c_int
)
{
    dlarrj_(
        n,
        d,
        e2,
        ifirst,
        ilast,
        rtol,
        offset,
        w,
        werr,
        work,
        iwork,
        pivmin,
        spdiam,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrk_(
    n: *const c_int,
    iw: *const c_int,
    gl: *const f64,
    gu: *const f64,
    d: *const f64,
    e2: *const f64,
    pivmin: *const f64,
    reltol: *const f64,
    w: *mut f64,
    werr: *mut f64,
    info: *mut c_int
)
{
    dlarrk_(
        n,
        iw,
        gl,
        gu,
        d,
        e2,
        pivmin,
        reltol,
        w,
        werr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrr_(
    n: *const c_int,
    d: *const f64,
    e: *mut f64,
    info: *mut c_int
)
{
    dlarrr_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarrv_(
    n: *const c_int,
    vl: *const f64,
    vu: *const f64,
    d: *mut f64,
    l: *mut f64,
    pivmin: *mut f64,
    isplit: *const c_int,
    m: *const c_int,
    dol: *const c_int,
    dou: *const c_int,
    minrgp: *const f64,
    rtol1: *const f64,
    rtol2: *const f64,
    w: *mut f64,
    werr: *mut f64,
    wgap: *mut f64,
    iblock: *const c_int,
    indexw: *const c_int,
    gers: *const f64,
    z: *mut f64,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlarrv_(
        n,
        vl,
        vu,
        d,
        l,
        pivmin,
        isplit,
        m,
        dol,
        dou,
        minrgp,
        rtol1,
        rtol2,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        z,
        ldz,
        isuppz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarscl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f64,
    x: *mut f64,
    ldx: *const c_int
)
{
    dlarscl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartg_(
    f: *const f64,
    g: *const f64,
    cs: *mut f64,
    sn: *mut f64,
    r: *mut f64
)
{
    dlartg_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartv_(
    n: *const c_int,
    x: *mut f64,
    incx: *const c_int,
    y: *mut f64,
    incy: *const c_int,
    c: *const f64,
    s: *const f64,
    incc: *const c_int
)
{
    dlartv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaruv_(
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut f64
)
{
    dlaruv_(
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarzb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    ldwork: *const c_int
)
{
    dlarzb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarz_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    v: *const f64,
    incv: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64
)
{
    dlarz_(
        side,
        m,
        n,
        l,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarzt_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    tau: *const f64,
    t: *mut f64,
    ldt: *const c_int
)
{
    dlarzt_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlas2_(
    f: *const f64,
    g: *const f64,
    h: *const f64,
    ssmin: *mut f64,
    ssmax: *mut f64
)
{
    dlas2_(
        f,
        g,
        h,
        ssmin,
        ssmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlascl_(
    type_: *const c_char,
    kl: *const c_int,
    ku: *const c_int,
    cfrom: *const f64,
    cto: *const f64,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dlascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlascl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f64,
    x: *mut f64,
    ldx: *const c_int
)
{
    dlascl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd0_(
    n: *const c_int,
    sqre: *const c_int,
    d: *mut f64,
    e: *const f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    smlsiz: *const c_int,
    iwork: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasd0_(
        n,
        sqre,
        d,
        e,
        u,
        ldu,
        vt,
        ldvt,
        smlsiz,
        iwork,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd1_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    d: *mut f64,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    idxq: *mut c_int,
    iwork: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasd1_(
        nl,
        nr,
        sqre,
        d,
        alpha,
        beta,
        u,
        ldu,
        vt,
        ldvt,
        idxq,
        iwork,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd2_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *mut c_int,
    d: *mut f64,
    z: *mut f64,
    alpha: *const f64,
    beta: *const f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    dsigma: *mut f64,
    u2: *mut f64,
    ldu2: *const c_int,
    vt2: *mut f64,
    ldvt2: *const c_int,
    idxp: *mut c_int,
    idx: *mut c_int,
    idxc: *mut c_int,
    idxq: *mut c_int,
    coltyp: *mut c_int,
    info: *mut c_int
)
{
    dlasd2_(
        nl,
        nr,
        sqre,
        k,
        d,
        z,
        alpha,
        beta,
        u,
        ldu,
        vt,
        ldvt,
        dsigma,
        u2,
        ldu2,
        vt2,
        ldvt2,
        idxp,
        idx,
        idxc,
        idxq,
        coltyp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd3_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *const c_int,
    d: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    dsigma: *const f64,
    u: *mut f64,
    ldu: *const c_int,
    u2: *mut f64,
    ldu2: *const c_int,
    vt: *mut f64,
    ldvt: *const c_int,
    vt2: *mut f64,
    ldvt2: *const c_int,
    idxc: *const c_int,
    ctot: *const c_int,
    z: *const f64,
    info: *mut c_int
)
{
    dlasd3_(
        nl,
        nr,
        sqre,
        k,
        d,
        q,
        ldq,
        dsigma,
        u,
        ldu,
        u2,
        ldu2,
        vt,
        ldvt,
        vt2,
        ldvt2,
        idxc,
        ctot,
        z,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd4_(
    n: *const c_int,
    i: *const c_int,
    d: *const f64,
    z: *const f64,
    delta: *mut f64,
    rho: *const f64,
    sigma: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasd4_(
        n,
        i,
        d,
        z,
        delta,
        rho,
        sigma,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd5_(
    i: *const c_int,
    d: *const f64,
    z: *const f64,
    delta: *mut f64,
    rho: *const f64,
    dsigma: *mut f64,
    work: *mut f64
)
{
    dlasd5_(
        i,
        d,
        z,
        delta,
        rho,
        dsigma,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd6_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    d: *mut f64,
    vf: *mut f64,
    vl: *mut f64,
    alpha: *mut f64,
    beta: *mut f64,
    idxq: *mut c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    givnum: *mut f64,
    ldgnum: *const c_int,
    poles: *mut f64,
    difl: *mut f64,
    difr: *mut f64,
    z: *mut f64,
    k: *mut c_int,
    c: *mut f64,
    s: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlasd6_(
        icompq,
        nl,
        nr,
        sqre,
        d,
        vf,
        vl,
        alpha,
        beta,
        idxq,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd7_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *mut c_int,
    d: *mut f64,
    z: *mut f64,
    zw: *mut f64,
    vf: *mut f64,
    vfw: *mut f64,
    vl: *mut f64,
    vlw: *mut f64,
    alpha: *const f64,
    beta: *const f64,
    dsigma: *mut f64,
    idx: *mut c_int,
    idxp: *mut c_int,
    idxq: *const c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    givnum: *mut f64,
    ldgnum: *const c_int,
    c: *mut f64,
    s: *mut f64,
    info: *mut c_int
)
{
    dlasd7_(
        icompq,
        nl,
        nr,
        sqre,
        k,
        d,
        z,
        zw,
        vf,
        vfw,
        vl,
        vlw,
        alpha,
        beta,
        dsigma,
        idx,
        idxp,
        idxq,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        c,
        s,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasd8_(
    icompq: *const c_int,
    k: *const c_int,
    d: *mut f64,
    z: *mut f64,
    vf: *mut f64,
    vl: *mut f64,
    difl: *mut f64,
    difr: *mut f64,
    lddifr: *const c_int,
    dsigma: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasd8_(
        icompq,
        k,
        d,
        z,
        vf,
        vl,
        difl,
        difr,
        lddifr,
        dsigma,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasda_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    sqre: *const c_int,
    d: *mut f64,
    e: *const f64,
    u: *mut f64,
    ldu: *const c_int,
    vt: *mut f64,
    k: *mut c_int,
    difl: *mut f64,
    difr: *mut f64,
    z: *mut f64,
    poles: *mut f64,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    perm: *mut c_int,
    givnum: *mut f64,
    c: *mut f64,
    s: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlasda_(
        icompq,
        smlsiz,
        n,
        sqre,
        d,
        e,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasdq_(
    uplo: *const c_char,
    sqre: *const c_int,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vt: *mut f64,
    ldvt: *const c_int,
    u: *mut f64,
    ldu: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasdq_(
        uplo,
        sqre,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasdt_(
    n: *const c_int,
    lvl: *mut c_int,
    nd: *mut c_int,
    inode: *mut c_int,
    ndiml: *mut c_int,
    ndimr: *mut c_int,
    msub: *const c_int
)
{
    dlasdt_(
        n,
        lvl,
        nd,
        inode,
        ndiml,
        ndimr,
        msub
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaset_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    beta: *const f64,
    a: *mut f64,
    lda: *const c_int
)
{
    dlaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq1_(
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dlasq1_(
        n,
        d,
        e,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq2_(
    n: *const c_int,
    z: *mut f64,
    info: *mut c_int
)
{
    dlasq2_(
        n,
        z,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq3_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f64,
    pp: *mut c_int,
    dmin: *mut f64,
    sigma: *mut f64,
    desig: *mut f64,
    qmax: *const f64,
    nfail: *mut c_int,
    iter: *mut c_int,
    ndiv: *mut c_int,
    ieee: *const c_int,
    ttype: *mut c_int,
    dmin1: *mut f64,
    dmin2: *mut f64,
    dn: *mut f64,
    dn1: *mut f64,
    dn2: *mut f64,
    g: *mut f64,
    tau: *mut f64
)
{
    dlasq3_(
        i0,
        n0,
        z,
        pp,
        dmin,
        sigma,
        desig,
        qmax,
        nfail,
        iter,
        ndiv,
        ieee,
        ttype,
        dmin1,
        dmin2,
        dn,
        dn1,
        dn2,
        g,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq4_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f64,
    pp: *const c_int,
    n0in: *mut c_int,
    dmin: *const f64,
    dmin1: *const f64,
    dmin2: *const f64,
    dn: *const f64,
    dn1: *const f64,
    dn2: *const f64,
    tau: *mut f64,
    ttype: *mut c_int,
    g: *mut f64
)
{
    dlasq4_(
        i0,
        n0,
        z,
        pp,
        n0in,
        dmin,
        dmin1,
        dmin2,
        dn,
        dn1,
        dn2,
        tau,
        ttype,
        g
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq5_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f64,
    pp: *const c_int,
    tau: *const f64,
    sigma: *const f64,
    dmin: *mut f64,
    dmin1: *mut f64,
    dmin2: *mut f64,
    dn: *mut f64,
    dnm1: *mut f64,
    dnm2: *mut f64,
    ieee: *const c_int,
    eps: *const f64
)
{
    dlasq5_(
        i0,
        n0,
        z,
        pp,
        tau,
        sigma,
        dmin,
        dmin1,
        dmin2,
        dn,
        dnm1,
        dnm2,
        ieee,
        eps
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasq6_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f64,
    pp: *const c_int,
    dmin: *mut f64,
    dmin1: *mut f64,
    dmin2: *mut f64,
    dn: *mut f64,
    dnm1: *mut f64,
    dnm2: *mut f64
)
{
    dlasq6_(
        i0,
        n0,
        z,
        pp,
        dmin,
        dmin1,
        dmin2,
        dn,
        dnm1,
        dnm2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasr_(
    side: *const c_char,
    pivot: *const c_char,
    direct: *const c_char,
    m: *const c_int,
    n: *const c_int,
    c: *const f64,
    s: *const f64,
    a: *mut f64,
    lda: *const c_int
)
{
    dlasr_(
        side,
        pivot,
        direct,
        m,
        n,
        c,
        s,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasrt_(
    id: *const c_char,
    n: *const c_int,
    d: *mut f64,
    info: *mut c_int
)
{
    dlasrt_(
        id,
        n,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlassq_(
    n: *const c_int,
    x: *const f64,
    incx: *const c_int,
    scale: *mut f64,
    sumsq: *mut f64
)
{
    dlassq_(
        n,
        x,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasv2_(
    f: *const f64,
    g: *const f64,
    h: *const f64,
    ssmin: *mut f64,
    ssmax: *mut f64,
    snr: *mut f64,
    csr: *mut f64,
    snl: *mut f64,
    csl: *mut f64
)
{
    dlasv2_(
        f,
        g,
        h,
        ssmin,
        ssmax,
        snr,
        csr,
        snl,
        csl
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaswp_(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    k1: *const c_int,
    k2: *const c_int,
    ipiv: *const c_int,
    incx: *const c_int
)
{
    dlaswp_(
        n,
        a,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasy2_(
    ltranl: *const c_int,
    ltranr: *const c_int,
    isgn: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    tl: *const f64,
    ldtl: *const c_int,
    tr: *const f64,
    ldtr: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    scale: *mut f64,
    x: *mut f64,
    ldx: *const c_int,
    xnorm: *mut f64,
    info: *mut c_int
)
{
    dlasy2_(
        ltranl,
        ltranr,
        isgn,
        n1,
        n2,
        tl,
        ldtl,
        tr,
        ldtr,
        b,
        ldb,
        scale,
        x,
        ldx,
        xnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasyf_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut f64,
    ldw: *const c_int,
    info: *mut c_int
)
{
    dlasyf_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlat2s_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    sa: *mut f32,
    ldsa: *const c_int,
    info: *mut c_int
)
{
    dlat2s_(
        uplo,
        n,
        a,
        lda,
        sa,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatbs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    x: *mut f64,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    dlatbs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        kd,
        ab,
        ldab,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatdf_(
    ijob: *const c_int,
    n: *const c_int,
    z: *const f64,
    ldz: *const c_int,
    rhs: *mut f64,
    rdsum: *mut f64,
    rdscal: *mut f64,
    ipiv: *const c_int,
    jpiv: *const c_int
)
{
    dlatdf_(
        ijob,
        n,
        z,
        ldz,
        rhs,
        rdsum,
        rdscal,
        ipiv,
        jpiv
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatps_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    ap: *const f64,
    x: *mut f64,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    dlatps_(
        uplo,
        trans,
        diag,
        normin,
        n,
        ap,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatrd_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    e: *mut f64,
    tau: *mut f64,
    w: *mut f64,
    ldw: *const c_int
)
{
    dlatrd_(
        uplo,
        n,
        nb,
        a,
        lda,
        e,
        tau,
        w,
        ldw
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    x: *mut f64,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    dlatrs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        a,
        lda,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatrs3_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    scale: *mut f64,
    cnorm: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dlatrs3_(
        uplo,
        trans,
        diag,
        normin,
        n,
        nrhs,
        a,
        lda,
        x,
        ldx,
        scale,
        cnorm,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatrz_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64
)
{
    dlatrz_(
        m,
        n,
        l,
        a,
        lda,
        tau,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatzm_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f64,
    incv: *const c_int,
    tau: *const f64,
    c1: *mut f64,
    c2: *mut f64,
    ldc: *const c_int,
    work: *mut f64
)
{
    dlatzm_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c1,
        c2,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlauu2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dlauu2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlauum_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dlauum_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dopgtr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    tau: *const f64,
    q: *mut f64,
    ldq: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dopgtr_(
        uplo,
        n,
        ap,
        tau,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dopmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ap: *const f64,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dopmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        ap,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorg2l_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dorg2l_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorg2r_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dorg2r_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgbr_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgbr_(
        vect,
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorghr_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorghr_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgl2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dorgl2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorglq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorglq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgql_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgql_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgqr_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgqr_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgr2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dorgr2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgrq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgrq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgtr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *const f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dorgtr_(
        uplo,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorm2l_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dorm2l_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorm2r_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dorm2r_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorml2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dorml2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormql_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormr2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dormr2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormr3_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dormr3_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormrq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    tau: *const f64,
    c: *mut f64,
    ldc: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dormtr_(
        side,
        uplo,
        trans,
        m,
        n,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbcon_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dpbcon_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbequ_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dpbequ_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbrfs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbstf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    info: *mut c_int
)
{
    dpbstf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbsv_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    afb: *mut f64,
    ldafb: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbtf2_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    info: *mut c_int
)
{
    dpbtf2_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbtrf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    info: *mut c_int
)
{
    dpbtrf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbtrs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    info: *mut c_int
)
{
    dpftrf_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    info: *mut c_int
)
{
    dpftri_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        a,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpocon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dpocon_(
        uplo,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpoequb_(
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dpoequb_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpoequ_(
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dpoequ_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dporfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dporfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    s: *mut f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dposvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dpotf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dpotrf_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dpotri_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpotrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dppcon_(
        uplo,
        n,
        ap,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppequ_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    dppequ_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    afp: *const f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dpprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dppsv_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f64,
    afp: *mut f64,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    info: *mut c_int
)
{
    dpptrf_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    info: *mut c_int
)
{
    dpptri_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpptrs_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpstf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dpstf2_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpstrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dpstrf_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptcon_(
    n: *const c_int,
    d: *const f64,
    e: *const f64,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dptcon_(
        n,
        d,
        e,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dpteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptrfs_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const f64,
    df: *const f64,
    ef: *const f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dptrfs_(
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptsv_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f64,
    e: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dptsv_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptsvx_(
    fact: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const f64,
    df: *mut f64,
    ef: *mut f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dptsvx_(
        fact,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpttrf_(
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    info: *mut c_int
)
{
    dpttrf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpttrs_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dpttrs_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptts2_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const f64,
    b: *mut f64,
    ldb: *const c_int
)
{
    dptts2_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_drscl_(
    n: *const c_int,
    sa: *const f64,
    sx: *mut f64,
    incx: *const c_int
)
{
    drscl_(
        n,
        sa,
        sx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsbevd_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsbev_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    bb: *const f64,
    ldbb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        x,
        ldx,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    bb: *mut f64,
    ldbb: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    bb: *mut f64,
    ldbb: *const c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    bb: *mut f64,
    ldbb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f64,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsbtrd_(
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsecnd_(

) -> f64
{
    dsecnd_(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    k: *const c_int,
    alpha: *const f64,
    a: *const f64,
    lda: *const c_int,
    beta: *const f64,
    c: *mut f64
)
{
    dsfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        a,
        lda,
        beta,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    work: *mut f64,
    swork: *mut f32,
    iter: *mut c_int,
    info: *mut c_int
)
{
    dsgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        work,
        swork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dspcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dspevd_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dspev_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dspevx_(
        jobz,
        range,
        uplo,
        n,
        ap,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    bp: *const f64,
    info: *mut c_int
)
{
    dspgst_(
        itype,
        uplo,
        n,
        ap,
        bp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    bp: *mut f64,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dspgvd_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    bp: *mut f64,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dspgv_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    bp: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dspgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        ap,
        bp,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    work: *mut f64,
    swork: *mut f32,
    iter: *mut c_int,
    info: *mut c_int
)
{
    dsposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        work,
        swork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    afp: *const f64,
    ipiv: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f64,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dspsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    afp: *mut f64,
    ipiv: *mut c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrd_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    d: *mut f64,
    e: *mut f64,
    tau: *mut f64,
    info: *mut c_int
)
{
    dsptrd_(
        uplo,
        n,
        ap,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dsptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    ipiv: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstebz_(
    range: *const c_char,
    order: *const c_char,
    n: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    d: *const f64,
    e: *const f64,
    m: *mut c_int,
    nsplit: *mut c_int,
    w: *mut f64,
    iblock: *mut c_int,
    isplit: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dstebz_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        abstol,
        d,
        e,
        m,
        nsplit,
        w,
        iblock,
        isplit,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstedc_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dstedc_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dstegr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstein_(
    n: *const c_int,
    d: *const f64,
    e: *const f64,
    m: *const c_int,
    w: *const f64,
    iblock: *const c_int,
    isplit: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dstein_(
        n,
        d,
        e,
        m,
        w,
        iblock,
        isplit,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    nzc: *const c_int,
    isuppz: *mut c_int,
    tryrac: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dstemr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        m,
        w,
        z,
        ldz,
        nzc,
        isuppz,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsterf_(
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    info: *mut c_int
)
{
    dsterf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevd_(
    jobz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dstevd_(
        jobz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstev_(
    jobz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dstev_(
        jobz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dstevr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevx_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dstevx_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsycon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsycon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    dsyequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsyevd_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsyev_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsyevr_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsyevx_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygs2_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsygs2_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsygst_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dsygvd_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsygv_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    dsygvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsyrfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f64,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsysv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsysvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    af: *mut f64,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut f64,
    ldb: *const c_int,
    x: *mut f64,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dsysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytd2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut f64,
    info: *mut c_int
)
{
    dsytd2_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    dsytf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrd_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsytrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dsytri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dsytrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        ab,
        ldab,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *const f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dtbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const f64,
    b: *mut f64,
    ldb: *const c_int
)
{
    dtfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        a,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f64,
    info: *mut c_int
)
{
    dtftri_(
        transr,
        uplo,
        diag,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const f64,
    ap: *mut f64,
    info: *mut c_int
)
{
    dtfttp_(
        transr,
        uplo,
        n,
        arf,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const f64,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dtfttr_(
        transr,
        uplo,
        n,
        arf,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    s: *const f64,
    lds: *const c_int,
    p: *const f64,
    ldp: *const c_int,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtgevc_(
        side,
        howmny,
        select,
        n,
        s,
        lds,
        p,
        ldp,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgex2_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    j1: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dtgex2_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        j1,
        n1,
        n2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgexc_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    ifst: *mut c_int,
    ilst: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dtgexc_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ifst,
        ilst,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsen_(
    ijob: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    select: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    q: *mut f64,
    ldq: *const c_int,
    z: *mut f64,
    ldz: *const c_int,
    m: *mut c_int,
    pl: *mut f64,
    pr: *mut f64,
    dif: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dtgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        m,
        pl,
        pr,
        dif,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut f64,
    ldu: *const c_int,
    v: *mut f64,
    ldv: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    work: *mut f64,
    ncycle: *mut c_int,
    info: *mut c_int
)
{
    dtgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        ncycle,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    vl: *const f64,
    ldvl: *const c_int,
    vr: *const f64,
    ldvr: *const c_int,
    s: *mut f64,
    dif: *mut f64,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtgsna_(
        job,
        howmny,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        dif,
        mm,
        m,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsy2_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    d: *const f64,
    ldd: *const c_int,
    e: *const f64,
    lde: *const c_int,
    f: *mut f64,
    ldf: *const c_int,
    scale: *mut f64,
    rdsum: *mut f64,
    rdscal: *mut f64,
    iwork: *mut c_int,
    pq: *mut c_int,
    info: *mut c_int
)
{
    dtgsy2_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        rdsum,
        rdscal,
        iwork,
        pq,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsyl_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    d: *const f64,
    ldd: *const c_int,
    e: *const f64,
    lde: *const c_int,
    f: *mut f64,
    ldf: *const c_int,
    scale: *mut f64,
    dif: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtgsyl_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        dif,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtpcon_(
        norm,
        uplo,
        diag,
        n,
        ap,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    b: *const f64,
    ldb: *const c_int,
    x: *const f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    info: *mut c_int
)
{
    dtptri_(
        uplo,
        diag,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dtptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    arf: *mut f64,
    info: *mut c_int
)
{
    dtpttf_(
        transr,
        uplo,
        n,
        ap,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpttr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f64,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dtpttr_(
        uplo,
        n,
        ap,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtrcon_(
        norm,
        uplo,
        diag,
        n,
        a,
        lda,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    vl: *mut f64,
    ldvl: *const c_int,
    vr: *mut f64,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtrevc_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrexc_(
    compq: *const c_char,
    n: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    ifst: *mut c_int,
    ilst: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dtrexc_(
        compq,
        n,
        t,
        ldt,
        q,
        ldq,
        ifst,
        ilst,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    x: *const f64,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    q: *mut f64,
    ldq: *const c_int,
    wr: *mut f64,
    wi: *mut f64,
    m: *mut c_int,
    s: *mut f64,
    sep: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    dtrsen_(
        job,
        compq,
        select,
        n,
        t,
        ldt,
        q,
        ldq,
        wr,
        wi,
        m,
        s,
        sep,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    vl: *const f64,
    ldvl: *const c_int,
    vr: *const f64,
    ldvr: *const c_int,
    s: *mut f64,
    sep: *mut f64,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f64,
    ldwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dtrsna_(
        job,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        sep,
        mm,
        m,
        work,
        ldwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    scale: *mut f64,
    info: *mut c_int
)
{
    dtrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    scale: *mut f64,
    iwork: *mut c_int,
    liwork: *const c_int,
    swork: *mut f64,
    ldswork: *const c_int,
    info: *mut c_int
)
{
    dtrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        iwork,
        liwork,
        swork,
        ldswork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrti2_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dtrti2_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    dtrtri_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    dtrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    arf: *mut f64,
    info: *mut c_int
)
{
    dtrttf_(
        transr,
        uplo,
        n,
        a,
        lda,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrttp_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    ap: *mut f64,
    info: *mut c_int
)
{
    dtrttp_(
        uplo,
        n,
        a,
        lda,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtzrqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    info: *mut c_int
)
{
    dtzrqf_(
        m,
        n,
        a,
        lda,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtzrzf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dtzrzf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dzsum1_(
    n: *const c_int,
    cx: *const MKL_Complex16,
    incx: *const c_int
) -> f64
{
    dzsum1_(
        n,
        cx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_icmax1_(
    n: *const c_int,
    cx: *const MKL_Complex8,
    incx: *const c_int
) -> c_int
{
    icmax1_(
        n,
        cx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ieeeck_(
    ispec: *const c_int,
    zero: *const f32,
    one: *const f32
) -> c_int
{
    ieeeck_(
        ispec,
        zero,
        one
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaclc_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int
) -> c_int
{
    ilaclc_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaclr_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int
) -> c_int
{
    ilaclr_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_iladiag_(
    diag: *const c_char
) -> c_int
{
    iladiag_(
        diag
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_iladlc_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int
) -> c_int
{
    iladlc_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_iladlr_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int
) -> c_int
{
    iladlr_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaenv_(
    ispec: *const c_int,
    name: *const c_char,
    opts: *const c_char,
    n1: *const c_int,
    n2: *const c_int,
    n3: *const c_int,
    n4: *const c_int
) -> c_int
{
    ilaenv_(
        ispec,
        name,
        opts,
        n1,
        n2,
        n3,
        n4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaenv2stage_(
    ispec: *const c_int,
    name: *const c_char,
    opts: *const c_char,
    n1: *const c_int,
    n2: *const c_int,
    n3: *const c_int,
    n4: *const c_int
) -> c_int
{
    ilaenv2stage_(
        ispec,
        name,
        opts,
        n1,
        n2,
        n3,
        n4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaprec_(
    prec: *const c_char
) -> c_int
{
    ilaprec_(
        prec
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaslc_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int
) -> c_int
{
    ilaslc_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaslr_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int
) -> c_int
{
    ilaslr_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilatrans_(
    trans: *const c_char
) -> c_int
{
    ilatrans_(
        trans
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilauplo_(
    uplo: *const c_char
) -> c_int
{
    ilauplo_(
        uplo
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaver_(
    vers_major: *mut c_int,
    vers_minor: *mut c_int,
    vers_patch: *mut c_int
)
{
    ilaver_(
        vers_major,
        vers_minor,
        vers_patch
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilazlc_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int
) -> c_int
{
    ilazlc_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilazlr_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int
) -> c_int
{
    ilazlr_(
        m,
        n,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_iparmq_(
    ispec: *const c_int,
    name: *const c_char,
    opts: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    lwork: *const c_int
) -> c_int
{
    iparmq_(
        ispec,
        name,
        opts,
        n,
        ilo,
        ihi,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_izmax1_(
    n: *const c_int,
    cx: *const MKL_Complex16,
    incx: *const c_int
) -> c_int
{
    izmax1_(
        n,
        cx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_lsamen_(
    n: *const c_int,
    ca: *const c_char,
    cb: *const c_char
) -> c_int
{
    lsamen_(
        n,
        ca,
        cb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsdc_(
    uplo: *const c_char,
    compq: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    q: *mut f32,
    iq: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sbdsdc_(
        uplo,
        compq,
        n,
        d,
        e,
        u,
        ldu,
        vt,
        ldvt,
        q,
        iq,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsqr_(
    uplo: *const c_char,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vt: *mut f32,
    ldvt: *const c_int,
    u: *mut f32,
    ldu: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_scsum1_(
    n: *const c_int,
    cx: *const MKL_Complex8,
    incx: *const c_int
) -> f32
{
    scsum1_(
        n,
        cx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sdisna_(
    job: *const c_char,
    m: *const c_int,
    n: *const c_int,
    d: *const f32,
    sep: *mut f32,
    info: *mut c_int
)
{
    sdisna_(
        job,
        m,
        n,
        d,
        sep,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_second_(

) -> f32
{
    second_(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbbrd_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ncc: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    pt: *mut f32,
    ldpt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        pt,
        ldpt,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbcon_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgbcon_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbequb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    sgbequb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbequ_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    sgbequ_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbrfs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int,
    ipiv: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int,
    ipiv: *const c_int,
    r: *mut f32,
    c: *mut f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsv_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgbsv_(
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    afb: *mut f32,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    afb: *mut f32,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbtf2_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgbtf2_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbtrf_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgbtrf_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbtrs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    scale: *const f32,
    m: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    info: *mut c_int
)
{
    sgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f32,
    info: *mut c_int
)
{
    sgebal_(
        job,
        n,
        a,
        lda,
        ilo,
        ihi,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebd2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut f32,
    taup: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgebd2_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebrd_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut f32,
    taup: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgebrd_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgecon_(
    norm: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgecon_(
        norm,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f32,
    k: *mut c_int,
    reig: *mut f32,
    imeig: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    res: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    w: *mut f32,
    ldw: *const c_int,
    s: *mut f32,
    lds: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    f: *mut f32,
    ldf: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f32,
    k: *mut c_int,
    reigs: *mut f32,
    imeig: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    res: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    s: *mut f32,
    lds: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reigs,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeequb_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    sgeequb_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeequ_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    r: *mut f32,
    c: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    sgeequ_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_S_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    sdim: *mut c_int,
    wr: *mut f32,
    wi: *mut f32,
    vs: *mut f32,
    ldvs: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sgees_(
        jobvs,
        sort,
        select,
        n,
        a,
        lda,
        sdim,
        wr,
        wi,
        vs,
        ldvs,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_S_SELECT_FUNCTION_2,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    sdim: *mut c_int,
    wr: *mut f32,
    wi: *mut f32,
    vs: *mut f32,
    ldvs: *const c_int,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        a,
        lda,
        sdim,
        wr,
        wi,
        vs,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f32,
    abnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgegs_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vsl: *mut f32,
    ldvsl: *const c_int,
    vsr: *mut f32,
    ldvsr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgegs_(
        jobvsl,
        jobvsr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgegv_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgegv_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgehd2_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgehd2_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgehrd_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgehrd_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    sva: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        a,
        lda,
        sva,
        u,
        ldu,
        v,
        ldv,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgelq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgelqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelsd_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    s: *mut f32,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgelsd_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgels_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgels_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelst_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgelst_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelss_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    s: *mut f32,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgelss_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelsx_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sgelsx_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelsy_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgelsy_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeql2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgeql2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqlf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeqlf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqp3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeqp3_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqp3rk_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    kmax: *const c_int,
    abstol: *const f32,
    reltol: *const f32,
    a: *mut f32,
    lda: *const c_int,
    k: *mut c_int,
    maxc2nrmk: *mut f32,
    relmaxc2nrmk: *mut f32,
    jpiv: *mut c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgeqp3rk_(
        m,
        n,
        nrhs,
        kmax,
        abstol,
        reltol,
        a,
        lda,
        k,
        maxc2nrmk,
        relmaxc2nrmk,
        jpiv,
        tau,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqpf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqr2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgeqr2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqr2p_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgeqr2p_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeqrf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrfp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgeqrfp_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgerfs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    r: *const f32,
    c: *const f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sgerq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgerqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesc2_(
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    rhs: *mut f32,
    ipiv: *const c_int,
    jpiv: *const c_int,
    scale: *mut f32
)
{
    sgesc2_(
        n,
        a,
        lda,
        rhs,
        ipiv,
        jpiv,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesdd_(
    jobz: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    s: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgesdd_(
        jobz,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    s: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgesvd_(
        jobu,
        jobvt,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        a,
        lda,
        sva,
        mv,
        v,
        ldv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgesvx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f32,
    c: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetc2_(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    jpiv: *mut c_int,
    info: *mut c_int
)
{
    sgetc2_(
        n,
        a,
        lda,
        ipiv,
        jpiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgetf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgetrf_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrfnpi(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrfnpi(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sgetrfnpi_(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_sgetrfnpi_(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetri_(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgetri_(
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgetrs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    lscale: *const f32,
    rscale: *const f32,
    m: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    info: *mut c_int
)
{
    sggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggbal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f32,
    rscale: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sggbal_(
        job,
        n,
        a,
        lda,
        b,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_S_SELECT_FUNCTION_3,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vsl: *mut f32,
    ldvsl: *const c_int,
    vsr: *mut f32,
    ldvsr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_S_SELECT_FUNCTION_3,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    sdim: *mut c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vsl: *mut f32,
    ldvsl: *const c_int,
    vsr: *mut f32,
    ldvsr: *const c_int,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f32,
    rscale: *mut f32,
    abnrm: *mut f32,
    bbnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    sggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggglm_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    d: *mut f32,
    x: *mut f32,
    y: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggglm_(
        n,
        m,
        p,
        a,
        lda,
        b,
        ldb,
        d,
        x,
        y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    info: *mut c_int
)
{
    sgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgglse_(
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    c: *mut f32,
    d: *mut f32,
    x: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgglse_(
        m,
        n,
        p,
        a,
        lda,
        b,
        ldb,
        c,
        d,
        x,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggqrf_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    taua: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    taub: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggqrf_(
        n,
        m,
        p,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggrqf_(
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    taua: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    taub: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sggrqf_(
        m,
        p,
        n,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    iwork: *mut c_int,
    tau: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgsvj0_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    eps: *const f32,
    sfmin: *const f32,
    tol: *const f32,
    nsweep: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgsvj0_(
        jobv,
        m,
        n,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgsvj1_(
    jobv: *const c_char,
    m: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    sva: *mut f32,
    mv: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    eps: *const f32,
    sfmin: *const f32,
    tol: *const f32,
    nsweep: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sgsvj1_(
        jobv,
        m,
        n,
        n1,
        a,
        lda,
        d,
        sva,
        mv,
        v,
        ldv,
        eps,
        sfmin,
        tol,
        nsweep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtcon_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    du2: *const f32,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgtcon_(
        norm,
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtrfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    dlf: *const f32,
    df: *const f32,
    duf: *const f32,
    du2: *const f32,
    ipiv: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgtrfs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtsv_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut f32,
    d: *mut f32,
    du: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgtsv_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    dlf: *mut f32,
    df: *mut f32,
    duf: *mut f32,
    du2: *mut f32,
    ipiv: *mut c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgttrf_(
    n: *const c_int,
    dl: *mut f32,
    d: *mut f32,
    du: *mut f32,
    du2: *mut f32,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    sgttrf_(
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgttrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    du2: *const f32,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sgttrs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtts2_(
    itrans: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    du2: *const f32,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int
)
{
    sgtts2_(
        itrans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    shgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        t,
        ldt,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    h: *const f32,
    ldh: *const c_int,
    wr: *mut f32,
    wi: *const f32,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    ifaill: *mut c_int,
    ifailr: *mut c_int,
    info: *mut c_int
)
{
    shsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        h,
        ldh,
        wr,
        wi,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        ifaill,
        ifailr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    shseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sisnan_(
    sin: *const f32
) -> c_int
{
    sisnan_(
        sin
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slabad_(
    smallx: *mut f32,
    large: *mut f32
)
{
    slabad_(
        smallx,
        large
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slabrd_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tauq: *mut f32,
    taup: *mut f32,
    x: *mut f32,
    ldx: *const c_int,
    y: *mut f32,
    ldy: *const c_int
)
{
    slabrd_(
        m,
        n,
        nb,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        x,
        ldx,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slacn2_(
    n: *const c_int,
    v: *mut f32,
    x: *mut f32,
    isgn: *mut c_int,
    est: *mut f32,
    kase: *mut c_int,
    isave: *mut c_int
)
{
    slacn2_(
        n,
        v,
        x,
        isgn,
        est,
        kase,
        isave
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slacon_(
    n: *const c_int,
    v: *mut f32,
    x: *mut f32,
    isgn: *mut c_int,
    est: *mut f32,
    kase: *mut c_int
)
{
    slacon_(
        n,
        v,
        x,
        isgn,
        est,
        kase
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slacpy_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int
)
{
    slacpy_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sladiv_(
    a: *const f32,
    b: *const f32,
    c: *const f32,
    d: *const f32,
    p: *mut f32,
    q: *mut f32
)
{
    sladiv_(
        a,
        b,
        c,
        d,
        p,
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slae2_(
    a: *const f32,
    b: *const f32,
    c: *const f32,
    rt1: *mut f32,
    rt2: *mut f32
)
{
    slae2_(
        a,
        b,
        c,
        rt1,
        rt2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaebz_(
    ijob: *const c_int,
    nitmax: *const c_int,
    n: *const c_int,
    mmax: *const c_int,
    minp: *const c_int,
    nbmin: *const c_int,
    abstol: *const f32,
    reltol: *const f32,
    pivmin: *const f32,
    d: *const f32,
    e: *const f32,
    e2: *const f32,
    nval: *mut c_int,
    ab: *mut f32,
    c: *mut f32,
    mout: *mut c_int,
    nab: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slaebz_(
        ijob,
        nitmax,
        n,
        mmax,
        minp,
        nbmin,
        abstol,
        reltol,
        pivmin,
        d,
        e,
        e2,
        nval,
        ab,
        c,
        mout,
        nab,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed0_(
    icompq: *const c_int,
    qsiz: *const c_int,
    n: *const c_int,
    d: *mut f32,
    e: *const f32,
    q: *mut f32,
    ldq: *const c_int,
    qstore: *mut f32,
    ldqs: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slaed0_(
        icompq,
        qsiz,
        n,
        d,
        e,
        q,
        ldq,
        qstore,
        ldqs,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed1_(
    n: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *const f32,
    cutpnt: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slaed1_(
        n,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed2_(
    k: *mut c_int,
    n: *const c_int,
    n1: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *mut f32,
    z: *const f32,
    dlamda: *mut f32,
    w: *mut f32,
    q2: *mut f32,
    indx: *mut c_int,
    indxc: *mut c_int,
    indxp: *mut c_int,
    coltyp: *mut c_int,
    info: *mut c_int
)
{
    slaed2_(
        k,
        n,
        n1,
        d,
        q,
        ldq,
        indxq,
        rho,
        z,
        dlamda,
        w,
        q2,
        indx,
        indxc,
        indxp,
        coltyp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed3_(
    k: *const c_int,
    n: *const c_int,
    n1: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    rho: *const f32,
    dlamda: *mut f32,
    q2: *const f32,
    indx: *const c_int,
    ctot: *const c_int,
    w: *mut f32,
    s: *mut f32,
    info: *mut c_int
)
{
    slaed3_(
        k,
        n,
        n1,
        d,
        q,
        ldq,
        rho,
        dlamda,
        q2,
        indx,
        ctot,
        w,
        s,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed4_(
    n: *const c_int,
    i: *const c_int,
    d: *const f32,
    z: *const f32,
    delta: *mut f32,
    rho: *const f32,
    dlam: *mut f32,
    info: *mut c_int
)
{
    slaed4_(
        n,
        i,
        d,
        z,
        delta,
        rho,
        dlam,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed5_(
    i: *const c_int,
    d: *const f32,
    z: *const f32,
    delta: *mut f32,
    rho: *const f32,
    dlam: *mut f32
)
{
    slaed5_(
        i,
        d,
        z,
        delta,
        rho,
        dlam
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed6_(
    kniter: *const c_int,
    orgati: *const c_int,
    rho: *const f32,
    d: *const f32,
    z: *const f32,
    finit: *const f32,
    tau: *mut f32,
    info: *mut c_int
)
{
    slaed6_(
        kniter,
        orgati,
        rho,
        d,
        z,
        finit,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed7_(
    icompq: *const c_int,
    n: *const c_int,
    qsiz: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    indxq: *mut c_int,
    rho: *const f32,
    cutpnt: *const c_int,
    qstore: *mut f32,
    qptr: *mut c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slaed7_(
        icompq,
        n,
        qsiz,
        tlvls,
        curlvl,
        curpbm,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        qstore,
        qptr,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed8_(
    icompq: *const c_int,
    k: *mut c_int,
    n: *const c_int,
    qsiz: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    indxq: *const c_int,
    rho: *mut f32,
    cutpnt: *const c_int,
    z: *const f32,
    dlamda: *mut f32,
    q2: *mut f32,
    ldq2: *const c_int,
    w: *mut f32,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    givnum: *mut f32,
    indxp: *mut c_int,
    indx: *mut c_int,
    info: *mut c_int
)
{
    slaed8_(
        icompq,
        k,
        n,
        qsiz,
        d,
        q,
        ldq,
        indxq,
        rho,
        cutpnt,
        z,
        dlamda,
        q2,
        ldq2,
        w,
        perm,
        givptr,
        givcol,
        givnum,
        indxp,
        indx,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaed9_(
    k: *const c_int,
    kstart: *const c_int,
    kstop: *const c_int,
    n: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    rho: *const f32,
    dlamda: *const f32,
    w: *const f32,
    s: *mut f32,
    lds: *const c_int,
    info: *mut c_int
)
{
    slaed9_(
        k,
        kstart,
        kstop,
        n,
        d,
        q,
        ldq,
        rho,
        dlamda,
        w,
        s,
        lds,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaeda_(
    n: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f32,
    q: *const f32,
    qptr: *const c_int,
    z: *mut f32,
    ztemp: *mut f32,
    info: *mut c_int
)
{
    slaeda_(
        n,
        tlvls,
        curlvl,
        curpbm,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        q,
        qptr,
        z,
        ztemp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaein_(
    rightv: *const c_int,
    noinit: *const c_int,
    n: *const c_int,
    h: *const f32,
    ldh: *const c_int,
    wr: *const f32,
    wi: *const f32,
    vr: *mut f32,
    vi: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    eps3: *const f32,
    smlnum: *const f32,
    bignum: *const f32,
    info: *mut c_int
)
{
    slaein_(
        rightv,
        noinit,
        n,
        h,
        ldh,
        wr,
        wi,
        vr,
        vi,
        b,
        ldb,
        work,
        eps3,
        smlnum,
        bignum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaev2_(
    a: *const f32,
    b: *const f32,
    c: *const f32,
    rt1: *mut f32,
    rt2: *mut f32,
    cs1: *mut f32,
    sn1: *mut f32
)
{
    slaev2_(
        a,
        b,
        c,
        rt1,
        rt2,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaexc_(
    wantq: *const c_int,
    n: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    j1: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slaexc_(
        wantq,
        n,
        t,
        ldt,
        q,
        ldq,
        j1,
        n1,
        n2,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slag2d_(
    m: *const c_int,
    n: *const c_int,
    sa: *const f32,
    ldsa: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    slag2d_(
        m,
        n,
        sa,
        ldsa,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slag2_(
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    safmin: *const f32,
    scale1: *mut f32,
    scale2: *mut f32,
    wr1: *mut f32,
    wr2: *mut f32,
    wi: *mut f32
)
{
    slag2_(
        a,
        lda,
        b,
        ldb,
        safmin,
        scale1,
        scale2,
        wr1,
        wr2,
        wi
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slags2_(
    upper: *const c_int,
    a1: *const f32,
    a2: *const f32,
    a3: *const f32,
    b1: *const f32,
    b2: *const f32,
    b3: *const f32,
    csu: *mut f32,
    snu: *mut f32,
    csv: *mut f32,
    snv: *mut f32,
    csq: *mut f32,
    snq: *mut f32
)
{
    slags2_(
        upper,
        a1,
        a2,
        a3,
        b1,
        b2,
        b3,
        csu,
        snu,
        csv,
        snv,
        csq,
        snq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagtf_(
    n: *const c_int,
    a: *mut f32,
    lambda: *const f32,
    b: *mut f32,
    c: *mut f32,
    tol: *const f32,
    d: *mut f32,
    in_: *mut c_int,
    info: *mut c_int
)
{
    slagtf_(
        n,
        a,
        lambda,
        b,
        c,
        tol,
        d,
        in_,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagtm_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    alpha: *const f32,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    x: *const f32,
    ldx: *const c_int,
    beta: *const f32,
    b: *mut f32,
    ldb: *const c_int
)
{
    slagtm_(
        trans,
        n,
        nrhs,
        alpha,
        dl,
        d,
        du,
        x,
        ldx,
        beta,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagts_(
    job: *const c_int,
    n: *const c_int,
    a: *const f32,
    b: *const f32,
    c: *const f32,
    d: *const f32,
    in_: *const c_int,
    y: *mut f32,
    tol: *mut f32,
    info: *mut c_int
)
{
    slagts_(
        job,
        n,
        a,
        b,
        c,
        d,
        in_,
        y,
        tol,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagv2_(
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    csl: *mut f32,
    snl: *mut f32,
    csr: *mut f32,
    snr: *mut f32
)
{
    slagv2_(
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        csl,
        snl,
        csr,
        snr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slahqr_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    info: *mut c_int
)
{
    slahqr_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slahr2_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    t: *mut f32,
    ldt: *const c_int,
    y: *mut f32,
    ldy: *const c_int
)
{
    slahr2_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slahrd_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    t: *mut f32,
    ldt: *const c_int,
    y: *mut f32,
    ldy: *const c_int
)
{
    slahrd_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaic1_(
    job: *const c_int,
    j: *const c_int,
    x: *const f32,
    sest: *const f32,
    w: *const f32,
    gamma: *const f32,
    sestpr: *mut f32,
    s: *mut f32,
    c: *mut f32
)
{
    slaic1_(
        job,
        j,
        x,
        sest,
        w,
        gamma,
        sestpr,
        s,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaisnan_(
    sin1: *const f32,
    sin2: *const f32
) -> c_int
{
    slaisnan_(
        sin1,
        sin2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaln2_(
    ltrans: *const c_int,
    na: *const c_int,
    nw: *const c_int,
    smin: *const f32,
    ca: *const f32,
    a: *const f32,
    lda: *const c_int,
    d1: *const f32,
    d2: *const f32,
    b: *const f32,
    ldb: *const c_int,
    wr: *const f32,
    wi: *const f32,
    x: *mut f32,
    ldx: *const c_int,
    scale: *mut f32,
    xnorm: *mut f32,
    info: *mut c_int
)
{
    slaln2_(
        ltrans,
        na,
        nw,
        smin,
        ca,
        a,
        lda,
        d1,
        d2,
        b,
        ldb,
        wr,
        wi,
        x,
        ldx,
        scale,
        xnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slals0_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    nrhs: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    bx: *mut f32,
    ldbx: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    givnum: *const f32,
    ldgnum: *const c_int,
    poles: *const f32,
    difl: *const f32,
    difr: *const f32,
    z: *const f32,
    k: *const c_int,
    c: *const f32,
    s: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slals0_(
        icompq,
        nl,
        nr,
        sqre,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slalsa_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    bx: *mut f32,
    ldbx: *const c_int,
    u: *const f32,
    ldu: *const c_int,
    vt: *const f32,
    k: *const c_int,
    difl: *const f32,
    difr: *const f32,
    z: *const f32,
    poles: *const f32,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    perm: *const c_int,
    givnum: *const f32,
    c: *const f32,
    s: *const f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slalsa_(
        icompq,
        smlsiz,
        n,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slalsd_(
    uplo: *const c_char,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f32,
    e: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    rcond: *const f32,
    rank: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slalsd_(
        uplo,
        smlsiz,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        rcond,
        rank,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamch_(
    cmach: *const c_char
) -> f32
{
    slamch_(
        cmach
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamc1_(
    beta: *mut c_int,
    t: *mut c_int,
    rnd: *mut c_int,
    ieee1: *mut c_int
)
{
    slamc1_(
        beta,
        t,
        rnd,
        ieee1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamc2_(
    beta: *mut c_int,
    t: *mut c_int,
    rnd: *mut c_int,
    eps: *mut f32,
    emin: *mut c_int,
    rmin: *mut f32,
    emax: *mut c_int,
    rmax: *mut f32
)
{
    slamc2_(
        beta,
        t,
        rnd,
        eps,
        emin,
        rmin,
        emax,
        rmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamc3_(
    a: *const f32,
    b: *const f32
) -> f32
{
    slamc3_(
        a,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamc4_(
    emin: *mut c_int,
    start: *const f32,
    base: *const c_int
)
{
    slamc4_(
        emin,
        start,
        base
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamc5_(
    beta: *const c_int,
    p: *const c_int,
    emin: *const c_int,
    ieee: *const c_int,
    emax: *mut c_int,
    rmax: *mut f32
)
{
    slamc5_(
        beta,
        p,
        emin,
        ieee,
        emax,
        rmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamrg_(
    n1: *const c_int,
    n2: *const c_int,
    a: *const f32,
    strd1: *const c_int,
    strd2: *const c_int,
    index: *mut c_int
)
{
    slamrg_(
        n1,
        n2,
        a,
        strd1,
        strd2,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaneg_(
    n: *const c_int,
    d: *const f32,
    lld: *const f32,
    sigma: *const f32,
    pivmin: *const f32,
    r: *const c_int
) -> c_int
{
    slaneg_(
        n,
        d,
        lld,
        sigma,
        pivmin,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slangb_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    slangb_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slange_(
    norm: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    slange_(
        norm,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slangt_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32
) -> f32
{
    slangt_(
        norm,
        n,
        dl,
        d,
        du
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slanhs_(
    norm: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    slanhs_(
        norm,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    slansb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansf_(
    norm: *const c_char,
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    work: *mut f32
) -> f32
{
    slansf_(
        norm,
        transr,
        uplo,
        n,
        a,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    work: *mut f32
) -> f32
{
    slansp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slanst_(
    norm: *const c_char,
    n: *const c_int,
    d: *const f32,
    e: *const f32
) -> f32
{
    slanst_(
        norm,
        n,
        d,
        e
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    slansy_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    work: *mut f32
) -> f32
{
    slantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const f32,
    work: *mut f32
) -> f32
{
    slantp_(
        norm,
        uplo,
        diag,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    work: *mut f32
) -> f32
{
    slantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slanv2_(
    a: *mut f32,
    b: *mut f32,
    c: *mut f32,
    d: *mut f32,
    rt1r: *mut f32,
    rt1i: *mut f32,
    rt2r: *mut f32,
    rt2i: *mut f32,
    cs: *mut f32,
    sn: *mut f32
)
{
    slanv2_(
        a,
        b,
        c,
        d,
        rt1r,
        rt1i,
        rt2r,
        rt2i,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapll_(
    n: *const c_int,
    x: *mut f32,
    incx: *const c_int,
    y: *mut f32,
    incy: *const c_int,
    ssmin: *mut f32
)
{
    slapll_(
        n,
        x,
        incx,
        y,
        incy,
        ssmin
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapmt_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    k: *mut c_int
)
{
    slapmt_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapy2_(
    x: *const f32,
    y: *const f32
) -> f32
{
    slapy2_(
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapy3_(
    x: *const f32,
    y: *const f32,
    z: *const f32
) -> f32
{
    slapy3_(
        x,
        y,
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqgb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    r: *const f32,
    c: *const f32,
    rowcnd: *const f32,
    colcnd: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    slaqgb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqge_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    r: *const f32,
    c: *const f32,
    rowcnd: *const f32,
    colcnd: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    slaqge_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqp2_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f32,
    vn1: *mut f32,
    vn2: *mut f32,
    work: *mut f32
)
{
    slaqp2_(
        m,
        n,
        offset,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqps_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut f32,
    vn1: *mut f32,
    vn2: *mut f32,
    auxv: *mut f32,
    f: *mut f32,
    ldf: *const c_int
)
{
    slaqps_(
        m,
        n,
        offset,
        nb,
        kb,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        auxv,
        f,
        ldf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr0_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slaqr0_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr1_(
    n: *const c_int,
    h: *const f32,
    ldh: *const c_int,
    sr1: *const f32,
    si1: *mut f32,
    sr2: *mut f32,
    si2: *mut f32,
    v: *mut f32
)
{
    slaqr1_(
        n,
        h,
        ldh,
        sr1,
        si1,
        sr2,
        si2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr2_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sr: *mut f32,
    si: *mut f32,
    v: *mut f32,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut f32,
    ldwv: *const c_int,
    work: *mut f32,
    lwork: *const c_int
)
{
    slaqr2_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sr,
        si,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr3_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sr: *mut f32,
    si: *mut f32,
    v: *mut f32,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut f32,
    ldwv: *const c_int,
    work: *mut f32,
    lwork: *const c_int
)
{
    slaqr3_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sr,
        si,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr4_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut f32,
    ldh: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slaqr4_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        wr,
        wi,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqr5_(
    wantt: *const c_int,
    wantz: *const c_int,
    kacc22: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nshfts: *const c_int,
    sr: *mut f32,
    si: *mut f32,
    h: *mut f32,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    u: *mut f32,
    ldu: *const c_int,
    nv: *const c_int,
    wv: *mut f32,
    ldwv: *const c_int,
    nh: *const c_int,
    wh: *mut f32,
    ldwh: *const c_int
)
{
    slaqr5_(
        wantt,
        wantz,
        kacc22,
        n,
        ktop,
        kbot,
        nshfts,
        sr,
        si,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        v,
        ldv,
        u,
        ldu,
        nv,
        wv,
        ldwv,
        nh,
        wh,
        ldwh
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqsb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    slaqsb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqsp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    slaqsp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqsy_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    s: *const f32,
    scond: *const f32,
    amax: *const f32,
    equed: *mut c_char
)
{
    slaqsy_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqtr_(
    ltran: *const c_int,
    lreal: *const c_int,
    n: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    b: *const f32,
    w: *const f32,
    scale: *mut f32,
    x: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slaqtr_(
        ltran,
        lreal,
        n,
        t,
        ldt,
        b,
        w,
        scale,
        x,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqz0_(
    wants: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    rec: *const c_int,
    info: *mut c_int
)
{
    slaqz0_(
        wants,
        wantq,
        wantz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqz1_(
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    sr1: *const f32,
    sr2: *const f32,
    si: *const f32,
    beta1: *const f32,
    beta2: *const f32,
    v: *mut f32
)
{
    slaqz1_(
        a,
        lda,
        b,
        ldb,
        sr1,
        sr2,
        si,
        beta1,
        beta2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqz2_(
    ilq: *const c_int,
    ilz: *const c_int,
    k: *const c_int,
    istartm: *const c_int,
    istopm: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    nq: *const c_int,
    qstart: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    nz: *const c_int,
    zstart: *const c_int,
    z: *mut f32,
    ldz: *const c_int
)
{
    slaqz2_(
        ilq,
        ilz,
        k,
        istartm,
        istopm,
        ihi,
        a,
        lda,
        b,
        ldb,
        nq,
        qstart,
        q,
        ldq,
        nz,
        zstart,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqz3_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nw: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    qc: *mut f32,
    ldqc: *const c_int,
    zc: *mut f32,
    ldzc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    rec: *const c_int,
    info: *mut c_int
)
{
    slaqz3_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nw,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ns,
        nd,
        alphar,
        alphai,
        beta,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaqz4_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nshifts: *const c_int,
    nb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    qc: *mut f32,
    ldqc: *const c_int,
    zc: *mut f32,
    ldzc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slaqz4_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nshifts,
        nb,
        alphar,
        alphai,
        beta,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slar1v_(
    n: *const c_int,
    b1: *const c_int,
    bn: *const c_int,
    lambda: *const f32,
    d: *const f32,
    l: *const f32,
    ld: *const f32,
    lld: *const f32,
    pivmin: *const f32,
    gaptol: *const f32,
    z: *mut f32,
    wantnc: *const c_int,
    negcnt: *mut c_int,
    ztz: *mut f32,
    mingma: *mut f32,
    r: *mut c_int,
    isuppz: *mut c_int,
    nrminv: *mut f32,
    resid: *mut f32,
    rqcorr: *mut f32,
    work: *mut f32
)
{
    slar1v_(
        n,
        b1,
        bn,
        lambda,
        d,
        l,
        ld,
        lld,
        pivmin,
        gaptol,
        z,
        wantnc,
        negcnt,
        ztz,
        mingma,
        r,
        isuppz,
        nrminv,
        resid,
        rqcorr,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slar2v_(
    n: *const c_int,
    x: *mut f32,
    y: *mut f32,
    z: *mut f32,
    incx: *const c_int,
    c: *const f32,
    s: *const f32,
    incc: *const c_int
)
{
    slar2v_(
        n,
        x,
        y,
        z,
        incx,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    ldwork: *const c_int
)
{
    slarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarf_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f32,
    incv: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32
)
{
    slarf_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfg_(
    n: *const c_int,
    alpha: *mut f32,
    x: *mut f32,
    incx: *const c_int,
    tau: *mut f32
)
{
    slarfg_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfgp_(
    n: *const c_int,
    alpha: *mut f32,
    x: *mut f32,
    incx: *const c_int,
    tau: *mut f32
)
{
    slarfgp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfp_(
    n: *const c_int,
    alpha: *mut f32,
    x: *mut f32,
    incx: *const c_int,
    tau: *mut f32
)
{
    slarfp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    tau: *const f32,
    t: *mut f32,
    ldt: *const c_int
)
{
    slarft_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfx_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f32,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32
)
{
    slarfx_(
        side,
        m,
        n,
        v,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slargv_(
    n: *const c_int,
    x: *mut f32,
    incx: *const c_int,
    y: *mut f32,
    incy: *const c_int,
    c: *mut f32,
    incc: *const c_int
)
{
    slargv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarnv_(
    idist: *const c_int,
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut f32
)
{
    slarnv_(
        idist,
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarra_(
    n: *const c_int,
    d: *const f32,
    e: *mut f32,
    e2: *mut f32,
    spltol: *const f32,
    tnrm: *const f32,
    nsplit: *mut c_int,
    isplit: *mut c_int,
    info: *mut c_int
)
{
    slarra_(
        n,
        d,
        e,
        e2,
        spltol,
        tnrm,
        nsplit,
        isplit,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrb_(
    n: *const c_int,
    d: *const f32,
    lld: *const f32,
    ifirst: *const c_int,
    ilast: *const c_int,
    rtol1: *const f32,
    rtol2: *const f32,
    offset: *const c_int,
    w: *mut f32,
    wgap: *mut f32,
    werr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    pivmin: *const f32,
    spdiam: *const f32,
    twist: *const c_int,
    info: *mut c_int
)
{
    slarrb_(
        n,
        d,
        lld,
        ifirst,
        ilast,
        rtol1,
        rtol2,
        offset,
        w,
        wgap,
        werr,
        work,
        iwork,
        pivmin,
        spdiam,
        twist,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrc_(
    jobt: *const c_char,
    n: *const c_int,
    vl: *const f32,
    vu: *const f32,
    d: *const f32,
    e: *const f32,
    pivmin: *const f32,
    eigcnt: *mut c_int,
    lcnt: *mut c_int,
    rcnt: *mut c_int,
    info: *mut c_int
)
{
    slarrc_(
        jobt,
        n,
        vl,
        vu,
        d,
        e,
        pivmin,
        eigcnt,
        lcnt,
        rcnt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrd_(
    range: *const c_char,
    order: *const c_char,
    n: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    gers: *const f32,
    reltol: *const f32,
    d: *const f32,
    e: *const f32,
    e2: *const f32,
    pivmin: *const f32,
    nsplit: *const c_int,
    isplit: *const c_int,
    m: *mut c_int,
    w: *mut f32,
    werr: *mut f32,
    wl: *mut f32,
    wu: *mut f32,
    iblock: *mut c_int,
    indexw: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slarrd_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        gers,
        reltol,
        d,
        e,
        e2,
        pivmin,
        nsplit,
        isplit,
        m,
        w,
        werr,
        wl,
        wu,
        iblock,
        indexw,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarre_(
    range: *const c_char,
    n: *const c_int,
    vl: *mut f32,
    vu: *mut f32,
    il: *const c_int,
    iu: *const c_int,
    d: *mut f32,
    e: *mut f32,
    e2: *mut f32,
    rtol1: *const f32,
    rtol2: *const f32,
    spltol: *const f32,
    nsplit: *mut c_int,
    isplit: *mut c_int,
    m: *mut c_int,
    w: *mut f32,
    werr: *mut f32,
    wgap: *mut f32,
    iblock: *mut c_int,
    indexw: *mut c_int,
    gers: *mut f32,
    pivmin: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slarre_(
        range,
        n,
        vl,
        vu,
        il,
        iu,
        d,
        e,
        e2,
        rtol1,
        rtol2,
        spltol,
        nsplit,
        isplit,
        m,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        pivmin,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrf_(
    n: *const c_int,
    d: *const f32,
    l: *const f32,
    ld: *const f32,
    clstrt: *const c_int,
    clend: *const c_int,
    w: *const f32,
    wgap: *mut f32,
    werr: *const f32,
    spdiam: *const f32,
    clgapl: *const f32,
    clgapr: *mut f32,
    pivmin: *const f32,
    sigma: *mut f32,
    dplus: *mut f32,
    lplus: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slarrf_(
        n,
        d,
        l,
        ld,
        clstrt,
        clend,
        w,
        wgap,
        werr,
        spdiam,
        clgapl,
        clgapr,
        pivmin,
        sigma,
        dplus,
        lplus,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrj_(
    n: *const c_int,
    d: *const f32,
    e2: *const f32,
    ifirst: *const c_int,
    ilast: *const c_int,
    rtol: *const f32,
    offset: *const c_int,
    w: *mut f32,
    werr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    pivmin: *const f32,
    spdiam: *const f32,
    info: *mut c_int
)
{
    slarrj_(
        n,
        d,
        e2,
        ifirst,
        ilast,
        rtol,
        offset,
        w,
        werr,
        work,
        iwork,
        pivmin,
        spdiam,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrk_(
    n: *const c_int,
    iw: *const c_int,
    gl: *const f32,
    gu: *const f32,
    d: *const f32,
    e2: *const f32,
    pivmin: *const f32,
    reltol: *const f32,
    w: *mut f32,
    werr: *mut f32,
    info: *mut c_int
)
{
    slarrk_(
        n,
        iw,
        gl,
        gu,
        d,
        e2,
        pivmin,
        reltol,
        w,
        werr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrr_(
    n: *const c_int,
    d: *const f32,
    e: *mut f32,
    info: *mut c_int
)
{
    slarrr_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarrv_(
    n: *const c_int,
    vl: *const f32,
    vu: *const f32,
    d: *mut f32,
    l: *mut f32,
    pivmin: *mut f32,
    isplit: *const c_int,
    m: *const c_int,
    dol: *const c_int,
    dou: *const c_int,
    minrgp: *const f32,
    rtol1: *const f32,
    rtol2: *const f32,
    w: *mut f32,
    werr: *mut f32,
    wgap: *mut f32,
    iblock: *const c_int,
    indexw: *const c_int,
    gers: *const f32,
    z: *mut f32,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slarrv_(
        n,
        vl,
        vu,
        d,
        l,
        pivmin,
        isplit,
        m,
        dol,
        dou,
        minrgp,
        rtol1,
        rtol2,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        z,
        ldz,
        isuppz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarscl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f32,
    x: *mut f32,
    ldx: *const c_int
)
{
    slarscl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartg_(
    f: *const f32,
    g: *const f32,
    cs: *mut f32,
    sn: *mut f32,
    r: *mut f32
)
{
    slartg_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartv_(
    n: *const c_int,
    x: *mut f32,
    incx: *const c_int,
    y: *mut f32,
    incy: *const c_int,
    c: *const f32,
    s: *const f32,
    incc: *const c_int
)
{
    slartv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaruv_(
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut f32
)
{
    slaruv_(
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarzb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    ldwork: *const c_int
)
{
    slarzb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarz_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    v: *const f32,
    incv: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32
)
{
    slarz_(
        side,
        m,
        n,
        l,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarzt_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    tau: *const f32,
    t: *mut f32,
    ldt: *const c_int
)
{
    slarzt_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slas2_(
    f: *const f32,
    g: *const f32,
    h: *const f32,
    ssmin: *mut f32,
    ssmax: *mut f32
)
{
    slas2_(
        f,
        g,
        h,
        ssmin,
        ssmax
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slascl_(
    type_: *const c_char,
    kl: *const c_int,
    ku: *const c_int,
    cfrom: *const f32,
    cto: *const f32,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    slascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slascl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f32,
    x: *mut f32,
    ldx: *const c_int
)
{
    slascl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd0_(
    n: *const c_int,
    sqre: *const c_int,
    d: *mut f32,
    e: *const f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    smlsiz: *const c_int,
    iwork: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slasd0_(
        n,
        sqre,
        d,
        e,
        u,
        ldu,
        vt,
        ldvt,
        smlsiz,
        iwork,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd1_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    d: *mut f32,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    idxq: *mut c_int,
    iwork: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slasd1_(
        nl,
        nr,
        sqre,
        d,
        alpha,
        beta,
        u,
        ldu,
        vt,
        ldvt,
        idxq,
        iwork,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd2_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *mut c_int,
    d: *mut f32,
    z: *mut f32,
    alpha: *const f32,
    beta: *const f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    dsigma: *mut f32,
    u2: *mut f32,
    ldu2: *const c_int,
    vt2: *mut f32,
    ldvt2: *const c_int,
    idxp: *mut c_int,
    idx: *mut c_int,
    idxc: *mut c_int,
    idxq: *mut c_int,
    coltyp: *mut c_int,
    info: *mut c_int
)
{
    slasd2_(
        nl,
        nr,
        sqre,
        k,
        d,
        z,
        alpha,
        beta,
        u,
        ldu,
        vt,
        ldvt,
        dsigma,
        u2,
        ldu2,
        vt2,
        ldvt2,
        idxp,
        idx,
        idxc,
        idxq,
        coltyp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd3_(
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *const c_int,
    d: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    dsigma: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    u2: *const f32,
    ldu2: *const c_int,
    vt: *mut f32,
    ldvt: *const c_int,
    vt2: *mut f32,
    ldvt2: *const c_int,
    idxc: *const c_int,
    ctot: *const c_int,
    z: *mut f32,
    info: *mut c_int
)
{
    slasd3_(
        nl,
        nr,
        sqre,
        k,
        d,
        q,
        ldq,
        dsigma,
        u,
        ldu,
        u2,
        ldu2,
        vt,
        ldvt,
        vt2,
        ldvt2,
        idxc,
        ctot,
        z,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd4_(
    n: *const c_int,
    i: *const c_int,
    d: *const f32,
    z: *const f32,
    delta: *mut f32,
    rho: *const f32,
    sigma: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slasd4_(
        n,
        i,
        d,
        z,
        delta,
        rho,
        sigma,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd5_(
    i: *const c_int,
    d: *const f32,
    z: *const f32,
    delta: *mut f32,
    rho: *const f32,
    dsigma: *mut f32,
    work: *mut f32
)
{
    slasd5_(
        i,
        d,
        z,
        delta,
        rho,
        dsigma,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd6_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    d: *mut f32,
    vf: *mut f32,
    vl: *mut f32,
    alpha: *mut f32,
    beta: *mut f32,
    idxq: *mut c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    givnum: *mut f32,
    ldgnum: *const c_int,
    poles: *mut f32,
    difl: *mut f32,
    difr: *mut f32,
    z: *mut f32,
    k: *mut c_int,
    c: *mut f32,
    s: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slasd6_(
        icompq,
        nl,
        nr,
        sqre,
        d,
        vf,
        vl,
        alpha,
        beta,
        idxq,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd7_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    k: *mut c_int,
    d: *mut f32,
    z: *mut f32,
    zw: *mut f32,
    vf: *mut f32,
    vfw: *mut f32,
    vl: *mut f32,
    vlw: *mut f32,
    alpha: *const f32,
    beta: *const f32,
    dsigma: *mut f32,
    idx: *mut c_int,
    idxp: *mut c_int,
    idxq: *const c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    givnum: *mut f32,
    ldgnum: *const c_int,
    c: *mut f32,
    s: *mut f32,
    info: *mut c_int
)
{
    slasd7_(
        icompq,
        nl,
        nr,
        sqre,
        k,
        d,
        z,
        zw,
        vf,
        vfw,
        vl,
        vlw,
        alpha,
        beta,
        dsigma,
        idx,
        idxp,
        idxq,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        c,
        s,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasd8_(
    icompq: *const c_int,
    k: *const c_int,
    d: *mut f32,
    z: *mut f32,
    vf: *mut f32,
    vl: *mut f32,
    difl: *mut f32,
    difr: *mut f32,
    lddifr: *const c_int,
    dsigma: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slasd8_(
        icompq,
        k,
        d,
        z,
        vf,
        vl,
        difl,
        difr,
        lddifr,
        dsigma,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasda_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    sqre: *const c_int,
    d: *mut f32,
    e: *const f32,
    u: *mut f32,
    ldu: *const c_int,
    vt: *mut f32,
    k: *mut c_int,
    difl: *mut f32,
    difr: *mut f32,
    z: *mut f32,
    poles: *mut f32,
    givptr: *mut c_int,
    givcol: *mut c_int,
    ldgcol: *const c_int,
    perm: *mut c_int,
    givnum: *mut f32,
    c: *mut f32,
    s: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slasda_(
        icompq,
        smlsiz,
        n,
        sqre,
        d,
        e,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasdq_(
    uplo: *const c_char,
    sqre: *const c_int,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vt: *mut f32,
    ldvt: *const c_int,
    u: *mut f32,
    ldu: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slasdq_(
        uplo,
        sqre,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasdt_(
    n: *const c_int,
    lvl: *mut c_int,
    nd: *mut c_int,
    inode: *mut c_int,
    ndiml: *mut c_int,
    ndimr: *mut c_int,
    msub: *const c_int
)
{
    slasdt_(
        n,
        lvl,
        nd,
        inode,
        ndiml,
        ndimr,
        msub
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaset_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    beta: *const f32,
    a: *mut f32,
    lda: *const c_int
)
{
    slaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq1_(
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    slasq1_(
        n,
        d,
        e,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq2_(
    n: *const c_int,
    z: *mut f32,
    info: *mut c_int
)
{
    slasq2_(
        n,
        z,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq3_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f32,
    pp: *mut c_int,
    dmin: *mut f32,
    sigma: *mut f32,
    desig: *mut f32,
    qmax: *const f32,
    nfail: *mut c_int,
    iter: *mut c_int,
    ndiv: *mut c_int,
    ieee: *const c_int,
    ttype: *mut c_int,
    dmin1: *mut f32,
    dmin2: *mut f32,
    dn: *mut f32,
    dn1: *mut f32,
    dn2: *mut f32,
    g: *mut f32,
    tau: *mut f32
)
{
    slasq3_(
        i0,
        n0,
        z,
        pp,
        dmin,
        sigma,
        desig,
        qmax,
        nfail,
        iter,
        ndiv,
        ieee,
        ttype,
        dmin1,
        dmin2,
        dn,
        dn1,
        dn2,
        g,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq4_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f32,
    pp: *const c_int,
    n0in: *mut c_int,
    dmin: *const f32,
    dmin1: *const f32,
    dmin2: *const f32,
    dn: *const f32,
    dn1: *const f32,
    dn2: *const f32,
    tau: *mut f32,
    ttype: *mut c_int,
    g: *mut f32
)
{
    slasq4_(
        i0,
        n0,
        z,
        pp,
        n0in,
        dmin,
        dmin1,
        dmin2,
        dn,
        dn1,
        dn2,
        tau,
        ttype,
        g
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq5_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f32,
    pp: *const c_int,
    tau: *const f32,
    sigma: *const f32,
    dmin: *mut f32,
    dmin1: *mut f32,
    dmin2: *mut f32,
    dn: *mut f32,
    dnm1: *mut f32,
    dnm2: *mut f32,
    ieee: *const c_int,
    eps: *const f32
)
{
    slasq5_(
        i0,
        n0,
        z,
        pp,
        tau,
        sigma,
        dmin,
        dmin1,
        dmin2,
        dn,
        dnm1,
        dnm2,
        ieee,
        eps
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasq6_(
    i0: *const c_int,
    n0: *const c_int,
    z: *const f32,
    pp: *const c_int,
    dmin: *mut f32,
    dmin1: *mut f32,
    dmin2: *mut f32,
    dn: *mut f32,
    dnm1: *mut f32,
    dnm2: *mut f32
)
{
    slasq6_(
        i0,
        n0,
        z,
        pp,
        dmin,
        dmin1,
        dmin2,
        dn,
        dnm1,
        dnm2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasr_(
    side: *const c_char,
    pivot: *const c_char,
    direct: *const c_char,
    m: *const c_int,
    n: *const c_int,
    c: *const f32,
    s: *const f32,
    a: *mut f32,
    lda: *const c_int
)
{
    slasr_(
        side,
        pivot,
        direct,
        m,
        n,
        c,
        s,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasrt_(
    id: *const c_char,
    n: *const c_int,
    d: *mut f32,
    info: *mut c_int
)
{
    slasrt_(
        id,
        n,
        d,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slassq_(
    n: *const c_int,
    x: *const f32,
    incx: *const c_int,
    scale: *mut f32,
    sumsq: *mut f32
)
{
    slassq_(
        n,
        x,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasv2_(
    f: *const f32,
    g: *const f32,
    h: *const f32,
    ssmin: *mut f32,
    ssmax: *mut f32,
    snr: *mut f32,
    csr: *mut f32,
    snl: *mut f32,
    csl: *mut f32
)
{
    slasv2_(
        f,
        g,
        h,
        ssmin,
        ssmax,
        snr,
        csr,
        snl,
        csl
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaswp_(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    k1: *const c_int,
    k2: *const c_int,
    ipiv: *const c_int,
    incx: *const c_int
)
{
    slaswp_(
        n,
        a,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasy2_(
    ltranl: *const c_int,
    ltranr: *const c_int,
    isgn: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    tl: *const f32,
    ldtl: *const c_int,
    tr: *const f32,
    ldtr: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    scale: *mut f32,
    x: *mut f32,
    ldx: *const c_int,
    xnorm: *mut f32,
    info: *mut c_int
)
{
    slasy2_(
        ltranl,
        ltranr,
        isgn,
        n1,
        n2,
        tl,
        ldtl,
        tr,
        ldtr,
        b,
        ldb,
        scale,
        x,
        ldx,
        xnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasyf_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut f32,
    ldw: *const c_int,
    info: *mut c_int
)
{
    slasyf_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatbs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    x: *mut f32,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    slatbs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        kd,
        ab,
        ldab,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatdf_(
    ijob: *const c_int,
    n: *const c_int,
    z: *const f32,
    ldz: *const c_int,
    rhs: *mut f32,
    rdsum: *mut f32,
    rdscal: *mut f32,
    ipiv: *const c_int,
    jpiv: *const c_int
)
{
    slatdf_(
        ijob,
        n,
        z,
        ldz,
        rhs,
        rdsum,
        rdscal,
        ipiv,
        jpiv
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatps_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    ap: *const f32,
    x: *mut f32,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    slatps_(
        uplo,
        trans,
        diag,
        normin,
        n,
        ap,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatrd_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    e: *mut f32,
    tau: *mut f32,
    w: *mut f32,
    ldw: *const c_int
)
{
    slatrd_(
        uplo,
        n,
        nb,
        a,
        lda,
        e,
        tau,
        w,
        ldw
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    x: *mut f32,
    scale: *mut f32,
    cnorm: *mut f32,
    info: *mut c_int
)
{
    slatrs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        a,
        lda,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatrs3_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    scale: *mut f32,
    cnorm: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    slatrs3_(
        uplo,
        trans,
        diag,
        normin,
        n,
        nrhs,
        a,
        lda,
        x,
        ldx,
        scale,
        cnorm,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatrz_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32
)
{
    slatrz_(
        m,
        n,
        l,
        a,
        lda,
        tau,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatzm_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const f32,
    incv: *const c_int,
    tau: *const f32,
    c1: *mut f32,
    c2: *mut f32,
    ldc: *const c_int,
    work: *mut f32
)
{
    slatzm_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c1,
        c2,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slauu2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    slauu2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slauum_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    slauum_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sopgtr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    tau: *const f32,
    q: *mut f32,
    ldq: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sopgtr_(
        uplo,
        n,
        ap,
        tau,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sopmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ap: *const f32,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sopmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        ap,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorg2l_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sorg2l_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorg2r_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sorg2r_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgbr_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgbr_(
        vect,
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorghr_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorghr_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgl2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sorgl2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorglq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorglq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgql_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgql_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgqr_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgqr_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgr2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sorgr2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgrq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgrq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgtr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *const f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sorgtr_(
        uplo,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorm2l_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sorm2l_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorm2r_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sorm2r_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorml2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sorml2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormql_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormr2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sormr2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormr3_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sormr3_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormrq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    tau: *const f32,
    c: *mut f32,
    ldc: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    sormtr_(
        side,
        uplo,
        trans,
        m,
        n,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbcon_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    spbcon_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbequ_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    spbequ_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbrfs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    spbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbstf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    info: *mut c_int
)
{
    spbstf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbsv_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spbsv_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    afb: *mut f32,
    ldafb: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    spbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbtf2_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    info: *mut c_int
)
{
    spbtf2_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbtrf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    info: *mut c_int
)
{
    spbtrf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbtrs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    info: *mut c_int
)
{
    spftrf_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    info: *mut c_int
)
{
    spftri_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spftrs_(
        transr,
        uplo,
        n,
        nrhs,
        a,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spocon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    spocon_(
        uplo,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spoequb_(
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    spoequb_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spoequ_(
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    spoequ_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sporfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sporfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    s: *mut f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sposvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    spotf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    spotrf_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    spotri_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spotrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sppcon_(
        uplo,
        n,
        ap,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppequ_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut c_int
)
{
    sppequ_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    afp: *const f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    spprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sppsv_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f32,
    afp: *mut f32,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    info: *mut c_int
)
{
    spptrf_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    info: *mut c_int
)
{
    spptri_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spptrs_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spstf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    spstf2_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spstrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f32,
    work: *mut f32,
    info: *mut c_int
)
{
    spstrf_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptcon_(
    n: *const c_int,
    d: *const f32,
    e: *const f32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sptcon_(
        n,
        d,
        e,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    spteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptrfs_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const f32,
    df: *const f32,
    ef: *const f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sptrfs_(
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptsv_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f32,
    e: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sptsv_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptsvx_(
    fact: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const f32,
    df: *mut f32,
    ef: *mut f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    sptsvx_(
        fact,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spttrf_(
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    info: *mut c_int
)
{
    spttrf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spttrs_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    spttrs_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptts2_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f32,
    e: *const f32,
    b: *mut f32,
    ldb: *const c_int
)
{
    sptts2_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_srscl_(
    n: *const c_int,
    sa: *const f32,
    sx: *mut f32,
    incx: *const c_int
)
{
    srscl_(
        n,
        sa,
        sx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssbevd_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssbev_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    bb: *const f32,
    ldbb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        x,
        ldx,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    bb: *mut f32,
    ldbb: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    bb: *mut f32,
    ldbb: *const c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    bb: *mut f32,
    ldbb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut f32,
    ldab: *const c_int,
    d: *mut f32,
    e: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssbtrd_(
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    k: *const c_int,
    alpha: *const f32,
    a: *const f32,
    lda: *const c_int,
    beta: *const f32,
    c: *mut f32
)
{
    ssfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        a,
        lda,
        beta,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sspcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sspevd_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sspev_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    sspevx_(
        jobz,
        range,
        uplo,
        n,
        ap,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    bp: *const f32,
    info: *mut c_int
)
{
    sspgst_(
        itype,
        uplo,
        n,
        ap,
        bp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    bp: *mut f32,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sspgvd_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    bp: *mut f32,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sspgv_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    bp: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    sspgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        ap,
        bp,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    afp: *const f32,
    ipiv: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut f32,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sspsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    afp: *mut f32,
    ipiv: *mut c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrd_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    d: *mut f32,
    e: *mut f32,
    tau: *mut f32,
    info: *mut c_int
)
{
    ssptrd_(
        uplo,
        n,
        ap,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    ssptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    ipiv: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstebz_(
    range: *const c_char,
    order: *const c_char,
    n: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    d: *const f32,
    e: *const f32,
    m: *mut c_int,
    nsplit: *mut c_int,
    w: *mut f32,
    iblock: *mut c_int,
    isplit: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    sstebz_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        abstol,
        d,
        e,
        m,
        nsplit,
        w,
        iblock,
        isplit,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstedc_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sstedc_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sstegr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstein_(
    n: *const c_int,
    d: *const f32,
    e: *const f32,
    m: *const c_int,
    w: *const f32,
    iblock: *const c_int,
    isplit: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    sstein_(
        n,
        d,
        e,
        m,
        w,
        iblock,
        isplit,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    nzc: *const c_int,
    isuppz: *mut c_int,
    tryrac: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sstemr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        m,
        w,
        z,
        ldz,
        nzc,
        isuppz,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssterf_(
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    info: *mut c_int
)
{
    ssterf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevd_(
    jobz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sstevd_(
        jobz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstev_(
    jobz: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    sstev_(
        jobz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    sstevr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevx_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f32,
    e: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    sstevx_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssycon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssycon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    s: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut f32,
    info: *mut c_int
)
{
    ssyequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssyevd_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssyev_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssyevr_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssyevx_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygs2_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssygs2_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssygst_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ssygvd_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    w: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssygv_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    vl: *const f32,
    vu: *const f32,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f32,
    m: *mut c_int,
    w: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    ssygvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssyrfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f32,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssysv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssysvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    af: *mut f32,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f32,
    b: *mut f32,
    ldb: *const c_int,
    x: *mut f32,
    ldx: *const c_int,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const c_int,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ssysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytd2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut f32,
    info: *mut c_int
)
{
    ssytd2_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    ssytf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrd_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssytrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    ssytri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ssytrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        ab,
        ldab,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *const f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    stbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const f32,
    b: *mut f32,
    ldb: *const c_int
)
{
    stfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        a,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f32,
    info: *mut c_int
)
{
    stftri_(
        transr,
        uplo,
        diag,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const f32,
    ap: *mut f32,
    info: *mut c_int
)
{
    stfttp_(
        transr,
        uplo,
        n,
        arf,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const f32,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    stfttr_(
        transr,
        uplo,
        n,
        arf,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    s: *const f32,
    lds: *const c_int,
    p: *const f32,
    ldp: *const c_int,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    stgevc_(
        side,
        howmny,
        select,
        n,
        s,
        lds,
        p,
        ldp,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgex2_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    j1: *const c_int,
    n1: *const c_int,
    n2: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    stgex2_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        j1,
        n1,
        n2,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgexc_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    ifst: *mut c_int,
    ilst: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    stgexc_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ifst,
        ilst,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsen_(
    ijob: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    select: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    q: *mut f32,
    ldq: *const c_int,
    z: *mut f32,
    ldz: *const c_int,
    m: *mut c_int,
    pl: *mut f32,
    pr: *mut f32,
    dif: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    stgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        alphar,
        alphai,
        beta,
        q,
        ldq,
        z,
        ldz,
        m,
        pl,
        pr,
        dif,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    tola: *const f32,
    tolb: *const f32,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut f32,
    ldu: *const c_int,
    v: *mut f32,
    ldv: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    work: *mut f32,
    ncycle: *mut c_int,
    info: *mut c_int
)
{
    stgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        ncycle,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    vl: *const f32,
    ldvl: *const c_int,
    vr: *const f32,
    ldvr: *const c_int,
    s: *mut f32,
    dif: *mut f32,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stgsna_(
        job,
        howmny,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        dif,
        mm,
        m,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsy2_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    d: *const f32,
    ldd: *const c_int,
    e: *const f32,
    lde: *const c_int,
    f: *mut f32,
    ldf: *const c_int,
    scale: *mut f32,
    rdsum: *mut f32,
    rdscal: *mut f32,
    iwork: *mut c_int,
    pq: *mut c_int,
    info: *mut c_int
)
{
    stgsy2_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        rdsum,
        rdscal,
        iwork,
        pq,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsyl_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    d: *const f32,
    ldd: *const c_int,
    e: *const f32,
    lde: *const c_int,
    f: *mut f32,
    ldf: *const c_int,
    scale: *mut f32,
    dif: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stgsyl_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        dif,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stpcon_(
        norm,
        uplo,
        diag,
        n,
        ap,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    b: *const f32,
    ldb: *const c_int,
    x: *const f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    stprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    info: *mut c_int
)
{
    stptri_(
        uplo,
        diag,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    stptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    arf: *mut f32,
    info: *mut c_int
)
{
    stpttf_(
        transr,
        uplo,
        n,
        ap,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpttr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const f32,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    stpttr_(
        uplo,
        n,
        ap,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    strcon_(
        norm,
        uplo,
        diag,
        n,
        a,
        lda,
        rcond,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut c_int,
    n: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    vl: *mut f32,
    ldvl: *const c_int,
    vr: *mut f32,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    strevc_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strexc_(
    compq: *const c_char,
    n: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    ifst: *mut c_int,
    ilst: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    strexc_(
        compq,
        n,
        t,
        ldt,
        q,
        ldq,
        ifst,
        ilst,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    x: *const f32,
    ldx: *const c_int,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    strrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    q: *mut f32,
    ldq: *const c_int,
    wr: *mut f32,
    wi: *mut f32,
    m: *mut c_int,
    s: *mut f32,
    sep: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    strsen_(
        job,
        compq,
        select,
        n,
        t,
        ldt,
        q,
        ldq,
        wr,
        wi,
        m,
        s,
        sep,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    vl: *const f32,
    ldvl: *const c_int,
    vr: *const f32,
    ldvr: *const c_int,
    s: *mut f32,
    sep: *mut f32,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut f32,
    ldwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    strsna_(
        job,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        sep,
        mm,
        m,
        work,
        ldwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    scale: *mut f32,
    info: *mut c_int
)
{
    strsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    ldb: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    swork: *mut f32,
    ldswork: *const c_int,
    info: *mut c_int
)
{
    strsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        iwork,
        liwork,
        swork,
        ldswork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strti2_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    strti2_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    strtri_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    strtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    arf: *mut f32,
    info: *mut c_int
)
{
    strttf_(
        transr,
        uplo,
        n,
        a,
        lda,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strttp_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    ap: *mut f32,
    info: *mut c_int
)
{
    strttp_(
        uplo,
        n,
        a,
        lda,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stzrqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    info: *mut c_int
)
{
    stzrqf_(
        m,
        n,
        a,
        lda,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stzrzf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    stzrzf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_xerbla_array_(
    srname_array: *const c_char,
    srname_len: *const c_int,
    info: *const c_int
)
{
    xerbla_array_(
        srname_array,
        srname_len,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zbdsqr_(
    uplo: *const c_char,
    n: *const c_int,
    ncvt: *const c_int,
    nru: *const c_int,
    ncc: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vt: *mut MKL_Complex16,
    ldvt: *const c_int,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        d,
        e,
        vt,
        ldvt,
        u,
        ldu,
        c,
        ldc,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zcgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    work: *mut MKL_Complex16,
    swork: *mut MKL_Complex8,
    rwork: *mut f64,
    iter: *mut c_int,
    info: *mut c_int
)
{
    zcgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        work,
        swork,
        rwork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zcposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    work: *mut MKL_Complex16,
    swork: *mut MKL_Complex8,
    rwork: *mut f64,
    iter: *mut c_int,
    info: *mut c_int
)
{
    zcposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        work,
        swork,
        rwork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zdrscl_(
    n: *const c_int,
    sa: *const f64,
    sx: *mut MKL_Complex16,
    incx: *const c_int
)
{
    zdrscl_(
        n,
        sa,
        sx,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbbrd_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ncc: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    pt: *mut MKL_Complex16,
    ldpt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        pt,
        ldpt,
        c,
        ldc,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbcon_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbcon_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbequb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zgbequb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbequ_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zgbequ_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbrfs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *const c_int,
    r: *mut f64,
    c: *mut f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsv_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgbsv_(
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    afb: *mut MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    afb: *mut MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbtf2_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgbtf2_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbtrf_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgbtrf_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbtrs_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    scale: *const f64,
    m: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    info: *mut c_int
)
{
    zgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f64,
    info: *mut c_int
)
{
    zgebal_(
        job,
        n,
        a,
        lda,
        ilo,
        ihi,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebd2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut MKL_Complex16,
    taup: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgebd2_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebrd_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut MKL_Complex16,
    taup: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgebrd_(
        m,
        n,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgecon_(
    norm: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgecon_(
        norm,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f64,
    k: *mut c_int,
    eigs: *mut MKL_Complex16,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    res: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    s: *mut MKL_Complex16,
    lds: *const c_int,
    zwork: *mut MKL_Complex16,
    lzwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        zwork,
        lzwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    f: *mut MKL_Complex16,
    ldf: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    nrnk: *const c_int,
    tol: *const f64,
    k: *mut c_int,
    eigs: *mut MKL_Complex16,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    res: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    s: *mut MKL_Complex16,
    lds: *const c_int,
    zwork: *mut MKL_Complex16,
    lzwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        zwork,
        lzwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeequb_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zgeequb_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeequ_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    r: *mut f64,
    c: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zgeequ_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_Z_SELECT_FUNCTION_1,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    sdim: *mut c_int,
    w: *mut MKL_Complex16,
    vs: *mut MKL_Complex16,
    ldvs: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zgees_(
        jobvs,
        sort,
        select,
        n,
        a,
        lda,
        sdim,
        w,
        vs,
        ldvs,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: MKL_Z_SELECT_FUNCTION_1,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    sdim: *mut c_int,
    w: *mut MKL_Complex16,
    vs: *mut MKL_Complex16,
    ldvs: *const c_int,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        a,
        lda,
        sdim,
        w,
        vs,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgeev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    scale: *mut f64,
    abnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgegs_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vsl: *mut MKL_Complex16,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex16,
    ldvsr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgegs_(
        jobvsl,
        jobvsr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgegv_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgegv_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgehd2_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgehd2_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgehrd_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgehrd_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgelq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgelqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelsd_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    s: *mut f64,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zgelsd_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgels_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgels_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelst_(
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgelst_(
        trans,
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelss_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    s: *mut f64,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgelss_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        s,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelsx_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgelsx_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelsy_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    jpvt: *mut c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgelsy_(
        m,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        jpvt,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeql2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgeql2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqlf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgeqlf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqp3_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgeqp3_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqp3rk_(
    m: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    kmax: *const c_int,
    abstol: *const f64,
    reltol: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    k: *mut c_int,
    maxc2nrmk: *mut f64,
    relmaxc2nrmk: *mut f64,
    jpiv: *mut c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zgeqp3rk_(
        m,
        n,
        nrhs,
        kmax,
        abstol,
        reltol,
        a,
        lda,
        k,
        maxc2nrmk,
        relmaxc2nrmk,
        jpiv,
        tau,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqpf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqr2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgeqr2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqr2p_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgeqr2p_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgeqrf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrfp_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgeqrfp_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgerfs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    r: *const f64,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerq2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgerq2_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgerqf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesc2_(
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    rhs: *mut MKL_Complex16,
    ipiv: *const c_int,
    jpiv: *const c_int,
    scale: *mut f64
)
{
    zgesc2_(
        n,
        a,
        lda,
        rhs,
        ipiv,
        jpiv,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesdd_(
    jobz: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    vt: *mut MKL_Complex16,
    ldvt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zgesdd_(
        jobz,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    vt: *mut MKL_Complex16,
    ldvt: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgesvd_(
        jobu,
        jobvt,
        m,
        n,
        a,
        lda,
        s,
        u,
        ldu,
        vt,
        ldvt,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesv_(
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgesv_(
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgesvx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    r: *mut f64,
    c: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        r,
        c,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetc2_(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    jpiv: *mut c_int,
    info: *mut c_int
)
{
    zgetc2_(
        n,
        a,
        lda,
        ipiv,
        jpiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetf2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgetf2_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgetrf_(
        m,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrfnpi(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrfnpi(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zgetrfnpi_(
    m: *const c_int,
    n: *const c_int,
    nfact: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_zgetrfnpi_(
        m,
        n,
        nfact,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetri_(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgetri_(
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgetrs_(
        trans,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    lscale: *const f64,
    rscale: *const f64,
    m: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    info: *mut c_int
)
{
    zggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        v,
        ldv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggbal_(
    job: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f64,
    rscale: *mut f64,
    work: *mut f64,
    info: *mut c_int
)
{
    zggbal_(
        job,
        n,
        a,
        lda,
        b,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_Z_SELECT_FUNCTION_2,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vsl: *mut MKL_Complex16,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex16,
    ldvsr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        work,
        lwork,
        rwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: MKL_Z_SELECT_FUNCTION_2,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    sdim: *mut c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vsl: *mut MKL_Complex16,
    ldvsl: *const c_int,
    vsr: *mut MKL_Complex16,
    ldvsr: *const c_int,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    liwork: *const c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        sdim,
        alpha,
        beta,
        vsl,
        ldvsl,
        vsr,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        liwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zggev_(
        jobvl,
        jobvr,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    ilo: *mut c_int,
    ihi: *mut c_int,
    lscale: *mut f64,
    rscale: *mut f64,
    abnrm: *mut f64,
    bbnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    bwork: *mut c_int,
    info: *mut c_int
)
{
    zggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        vl,
        ldvl,
        vr,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        bwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggglm_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    d: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    y: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zggglm_(
        n,
        m,
        p,
        a,
        lda,
        b,
        ldb,
        d,
        x,
        y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    info: *mut c_int
)
{
    zgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgglse_(
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    d: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zgglse_(
        m,
        n,
        p,
        a,
        lda,
        b,
        ldb,
        c,
        d,
        x,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggqrf_(
    n: *const c_int,
    m: *const c_int,
    p: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    taua: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    taub: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zggqrf_(
        n,
        m,
        p,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggrqf_(
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    taua: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    taub: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zggrqf_(
        m,
        p,
        n,
        a,
        lda,
        taua,
        b,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    n: *const c_int,
    p: *const c_int,
    k: *mut c_int,
    l: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    k: *mut c_int,
    l: *mut c_int,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    iwork: *mut c_int,
    rwork: *mut f64,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtcon_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    du2: *const MKL_Complex16,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zgtcon_(
        norm,
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtrfs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    dlf: *const MKL_Complex16,
    df: *const MKL_Complex16,
    duf: *const MKL_Complex16,
    du2: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgtrfs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtsv_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut MKL_Complex16,
    d: *mut MKL_Complex16,
    du: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgtsv_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    dlf: *mut MKL_Complex16,
    df: *mut MKL_Complex16,
    duf: *mut MKL_Complex16,
    du2: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        dlf,
        df,
        duf,
        du2,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgttrf_(
    n: *const c_int,
    dl: *mut MKL_Complex16,
    d: *mut MKL_Complex16,
    du: *mut MKL_Complex16,
    du2: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zgttrf_(
        n,
        dl,
        d,
        du,
        du2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgttrs_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    du2: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zgttrs_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtts2_(
    itrans: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    du2: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    zgtts2_(
        itrans,
        n,
        nrhs,
        dl,
        d,
        du,
        du2,
        ipiv,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhbevd_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhbev_(
        jobz,
        uplo,
        n,
        kd,
        ab,
        ldab,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        ab,
        ldab,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    bb: *const MKL_Complex16,
    ldbb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        x,
        ldx,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    bb: *mut MKL_Complex16,
    ldbb: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    bb: *mut MKL_Complex16,
    ldbb: *const c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ka: *const c_int,
    kb: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    bb: *mut MKL_Complex16,
    ldbb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        ab,
        ldab,
        bb,
        ldbb,
        q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    d: *mut f64,
    e: *mut f64,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhbtrd_(
        vect,
        uplo,
        n,
        kd,
        ab,
        ldab,
        d,
        e,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhecon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhecon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zheequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zheevd_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zheev_(
        jobz,
        uplo,
        n,
        a,
        lda,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zheevr_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zheevx_(
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegs2_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhegs2_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhegst_(
        itype,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhegvd_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    w: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhegv_(
        itype,
        jobz,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        w,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhegvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zherfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zherfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zherfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zherfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhesv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhesvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhesvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetd2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhetd2_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zhetf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrd_(
        uplo,
        n,
        a,
        lda,
        d,
        e,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhetri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhetrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    k: *const c_int,
    alpha: *const f64,
    a: *const MKL_Complex16,
    lda: *const c_int,
    beta: *const f64,
    c: *mut MKL_Complex16
)
{
    zhfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        a,
        lda,
        beta,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        t,
        ldt,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhpcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhpevd_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhpev_(
        jobz,
        uplo,
        n,
        ap,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhpevx_(
        jobz,
        range,
        uplo,
        n,
        ap,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgst_(
    itype: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    bp: *const MKL_Complex16,
    info: *mut c_int
)
{
    zhpgst_(
        itype,
        uplo,
        n,
        ap,
        bp,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgvd_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    bp: *mut MKL_Complex16,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zhpgvd_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgv_(
    itype: *const c_int,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    bp: *mut MKL_Complex16,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhpgv_(
        itype,
        jobz,
        uplo,
        n,
        ap,
        bp,
        w,
        z,
        ldz,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgvx_(
    itype: *const c_int,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    bp: *mut MKL_Complex16,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zhpgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        ap,
        bp,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        work,
        rwork,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    afp: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhpsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    afp: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zhpsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrd_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    d: *mut f64,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhptrd_(
        uplo,
        n,
        ap,
        d,
        e,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zhptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zhptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zhptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *const c_int,
    n: *const c_int,
    h: *const MKL_Complex16,
    ldh: *const c_int,
    w: *mut MKL_Complex16,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    ifaill: *mut c_int,
    ifailr: *mut c_int,
    info: *mut c_int
)
{
    zhsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        h,
        ldh,
        w,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        ifaill,
        ifailr,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    w: *mut MKL_Complex16,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlabrd_(
    m: *const c_int,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tauq: *mut MKL_Complex16,
    taup: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int
)
{
    zlabrd_(
        m,
        n,
        nb,
        a,
        lda,
        d,
        e,
        tauq,
        taup,
        x,
        ldx,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacgv_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    incx: *const c_int
)
{
    zlacgv_(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacn2_(
    n: *const c_int,
    v: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    est: *mut f64,
    kase: *mut c_int,
    isave: *mut c_int
)
{
    zlacn2_(
        n,
        v,
        x,
        est,
        kase,
        isave
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacon_(
    n: *const c_int,
    v: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    est: *mut f64,
    kase: *mut c_int
)
{
    zlacon_(
        n,
        v,
        x,
        est,
        kase
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacp2_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    zlacp2_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacpy_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    zlacpy_(
        uplo,
        m,
        n,
        a,
        lda,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacrm_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const f64,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    rwork: *mut f64
)
{
    zlacrm_(
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacrt_(
    n: *const c_int,
    cx: *mut MKL_Complex16,
    incx: *const c_int,
    cy: *mut MKL_Complex16,
    incy: *const c_int,
    c: *const MKL_Complex16,
    s: *const MKL_Complex16
)
{
    zlacrt_(
        n,
        cx,
        incx,
        cy,
        incy,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zladiv_(
    ret_value: *mut MKL_Complex16,
    x: *const MKL_Complex16,
    y: *const MKL_Complex16
)
{
    zladiv_(
        ret_value,
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaed0_(
    qsiz: *const c_int,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    qstore: *mut MKL_Complex16,
    ldqs: *const c_int,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlaed0_(
        qsiz,
        n,
        d,
        e,
        q,
        ldq,
        qstore,
        ldqs,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaed7_(
    n: *const c_int,
    cutpnt: *const c_int,
    qsiz: *const c_int,
    tlvls: *const c_int,
    curlvl: *const c_int,
    curpbm: *const c_int,
    d: *mut f64,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    rho: *const f64,
    indxq: *mut c_int,
    qstore: *mut f64,
    qptr: *mut c_int,
    prmptr: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    givnum: *const f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlaed7_(
        n,
        cutpnt,
        qsiz,
        tlvls,
        curlvl,
        curpbm,
        d,
        q,
        ldq,
        rho,
        indxq,
        qstore,
        qptr,
        prmptr,
        perm,
        givptr,
        givcol,
        givnum,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaed8_(
    k: *mut c_int,
    n: *const c_int,
    qsiz: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    d: *mut f64,
    rho: *mut f64,
    cutpnt: *const c_int,
    z: *const f64,
    dlamda: *mut f64,
    q2: *mut MKL_Complex16,
    ldq2: *const c_int,
    w: *mut f64,
    indxp: *mut c_int,
    indx: *mut c_int,
    indxq: *const c_int,
    perm: *mut c_int,
    givptr: *mut c_int,
    givcol: *mut c_int,
    givnum: *mut f64,
    info: *mut c_int
)
{
    zlaed8_(
        k,
        n,
        qsiz,
        q,
        ldq,
        d,
        rho,
        cutpnt,
        z,
        dlamda,
        q2,
        ldq2,
        w,
        indxp,
        indx,
        indxq,
        perm,
        givptr,
        givcol,
        givnum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaein_(
    rightv: *const c_int,
    noinit: *const c_int,
    n: *const c_int,
    h: *const MKL_Complex16,
    ldh: *const c_int,
    w: *const MKL_Complex16,
    v: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    rwork: *mut f64,
    eps3: *const f64,
    smlnum: *const f64,
    info: *mut c_int
)
{
    zlaein_(
        rightv,
        noinit,
        n,
        h,
        ldh,
        w,
        v,
        b,
        ldb,
        rwork,
        eps3,
        smlnum,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaesy_(
    a: *const MKL_Complex16,
    b: *const MKL_Complex16,
    c: *const MKL_Complex16,
    rt1: *mut MKL_Complex16,
    rt2: *mut MKL_Complex16,
    evscal: *mut MKL_Complex16,
    cs1: *mut MKL_Complex16,
    sn1: *mut MKL_Complex16
)
{
    zlaesy_(
        a,
        b,
        c,
        rt1,
        rt2,
        evscal,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaev2_(
    a: *const MKL_Complex16,
    b: *const MKL_Complex16,
    c: *const MKL_Complex16,
    rt1: *mut f64,
    rt2: *mut f64,
    cs1: *mut f64,
    sn1: *mut MKL_Complex16
)
{
    zlaev2_(
        a,
        b,
        c,
        rt1,
        rt2,
        cs1,
        sn1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlag2c_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    sa: *mut MKL_Complex8,
    ldsa: *const c_int,
    info: *mut c_int
)
{
    zlag2c_(
        m,
        n,
        a,
        lda,
        sa,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlags2_(
    upper: *const c_int,
    a1: *const f64,
    a2: *const MKL_Complex16,
    a3: *const f64,
    b1: *const f64,
    b2: *const MKL_Complex16,
    b3: *const f64,
    csu: *mut f64,
    snu: *mut MKL_Complex16,
    csv: *mut f64,
    snv: *mut MKL_Complex16,
    csq: *mut f64,
    snq: *mut MKL_Complex16
)
{
    zlags2_(
        upper,
        a1,
        a2,
        a3,
        b1,
        b2,
        b3,
        csu,
        snu,
        csv,
        snv,
        csq,
        snq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlagtm_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    alpha: *const f64,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    x: *const MKL_Complex16,
    ldx: *const c_int,
    beta: *const f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    zlagtm_(
        trans,
        n,
        nrhs,
        alpha,
        dl,
        d,
        du,
        x,
        ldx,
        beta,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahef_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlahef_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahqr_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    w: *mut MKL_Complex16,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    info: *mut c_int
)
{
    zlahqr_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahr2_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int
)
{
    zlahr2_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlahrd_(
    n: *const c_int,
    k: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int
)
{
    zlahrd_(
        n,
        k,
        nb,
        a,
        lda,
        tau,
        t,
        ldt,
        y,
        ldy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaic1_(
    job: *const c_int,
    j: *const c_int,
    x: *const MKL_Complex16,
    sest: *const f64,
    w: *const MKL_Complex16,
    gamma: *const MKL_Complex16,
    sestpr: *mut f64,
    s: *mut MKL_Complex16,
    c: *mut MKL_Complex16
)
{
    zlaic1_(
        job,
        j,
        x,
        sest,
        w,
        gamma,
        sestpr,
        s,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlals0_(
    icompq: *const c_int,
    nl: *const c_int,
    nr: *const c_int,
    sqre: *const c_int,
    nrhs: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    bx: *mut MKL_Complex16,
    ldbx: *const c_int,
    perm: *const c_int,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    givnum: *const f64,
    ldgnum: *const c_int,
    poles: *const f64,
    difl: *const f64,
    difr: *const f64,
    z: *const f64,
    k: *const c_int,
    c: *const f64,
    s: *const f64,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zlals0_(
        icompq,
        nl,
        nr,
        sqre,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        perm,
        givptr,
        givcol,
        ldgcol,
        givnum,
        ldgnum,
        poles,
        difl,
        difr,
        z,
        k,
        c,
        s,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlalsa_(
    icompq: *const c_int,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    bx: *mut MKL_Complex16,
    ldbx: *const c_int,
    u: *const f64,
    ldu: *const c_int,
    vt: *const f64,
    k: *const c_int,
    difl: *const f64,
    difr: *const f64,
    z: *const f64,
    poles: *const f64,
    givptr: *const c_int,
    givcol: *const c_int,
    ldgcol: *const c_int,
    perm: *const c_int,
    givnum: *const f64,
    c: *const f64,
    s: *const f64,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlalsa_(
        icompq,
        smlsiz,
        n,
        nrhs,
        b,
        ldb,
        bx,
        ldbx,
        u,
        ldu,
        vt,
        k,
        difl,
        difr,
        z,
        poles,
        givptr,
        givcol,
        ldgcol,
        perm,
        givnum,
        c,
        s,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlalsd_(
    uplo: *const c_char,
    smlsiz: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f64,
    e: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    rcond: *const f64,
    rank: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlalsd_(
        uplo,
        smlsiz,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        rcond,
        rank,
        work,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlangb_(
    norm: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    zlangb_(
        norm,
        n,
        kl,
        ku,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlange_(
    norm: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    zlange_(
        norm,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlangt_(
    norm: *const c_char,
    n: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16
) -> f64
{
    zlangt_(
        norm,
        n,
        dl,
        d,
        du
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    zlanhb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhe_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    zlanhe_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhf_(
    norm: *const c_char,
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    work: *mut f64
) -> f64
{
    zlanhf_(
        norm,
        transr,
        uplo,
        n,
        a,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    work: *mut f64
) -> f64
{
    zlanhp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhs_(
    norm: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    zlanhs_(
        norm,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanht_(
    norm: *const c_char,
    n: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16
) -> f64
{
    zlanht_(
        norm,
        n,
        d,
        e
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    zlansb_(
        norm,
        uplo,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    work: *mut f64
) -> f64
{
    zlansp_(
        norm,
        uplo,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    zlansy_(
        norm,
        uplo,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    k: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    work: *mut f64
) -> f64
{
    zlantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        ab,
        ldab,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    work: *mut f64
) -> f64
{
    zlantp_(
        norm,
        uplo,
        diag,
        n,
        ap,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    work: *mut f64
) -> f64
{
    zlantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        a,
        lda,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlapll_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    y: *mut MKL_Complex16,
    incy: *const c_int,
    ssmin: *mut f64
)
{
    zlapll_(
        n,
        x,
        incx,
        y,
        incy,
        ssmin
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlapmt_(
    forwrd: *const c_int,
    m: *const c_int,
    n: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    k: *mut c_int
)
{
    zlapmt_(
        forwrd,
        m,
        n,
        x,
        ldx,
        k
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqgb_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    r: *const f64,
    c: *const f64,
    rowcnd: *const f64,
    colcnd: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqgb_(
        m,
        n,
        kl,
        ku,
        ab,
        ldab,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqge_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    r: *const f64,
    c: *const f64,
    rowcnd: *const f64,
    colcnd: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqge_(
        m,
        n,
        a,
        lda,
        r,
        c,
        rowcnd,
        colcnd,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqhb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    s: *mut f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqhb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqhe_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqhe_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqhp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqhp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqp2_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex16,
    vn1: *mut f64,
    vn2: *mut f64,
    work: *mut MKL_Complex16
)
{
    zlaqp2_(
        m,
        n,
        offset,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqps_(
    m: *const c_int,
    n: *const c_int,
    offset: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    jpvt: *mut c_int,
    tau: *mut MKL_Complex16,
    vn1: *mut f64,
    vn2: *mut f64,
    auxv: *mut MKL_Complex16,
    f: *mut MKL_Complex16,
    ldf: *const c_int
)
{
    zlaqps_(
        m,
        n,
        offset,
        nb,
        kb,
        a,
        lda,
        jpvt,
        tau,
        vn1,
        vn2,
        auxv,
        f,
        ldf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr0_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    w: *mut MKL_Complex16,
    iloz: *mut c_int,
    ihiz: *mut c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlaqr0_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr1_(
    n: *const c_int,
    h: *const MKL_Complex16,
    ldh: *const c_int,
    s1: *const MKL_Complex16,
    s2: *mut MKL_Complex16,
    v: *mut MKL_Complex16
)
{
    zlaqr1_(
        n,
        h,
        ldh,
        s1,
        s2,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr2_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sh: *mut MKL_Complex16,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex16,
    ldwv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int
)
{
    zlaqr2_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sh,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr3_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nw: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    sh: *mut MKL_Complex16,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    nh: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex16,
    ldwv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int
)
{
    zlaqr3_(
        wantt,
        wantz,
        n,
        ktop,
        kbot,
        nw,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        ns,
        nd,
        sh,
        v,
        ldv,
        nh,
        t,
        ldt,
        nv,
        wv,
        ldwv,
        work,
        lwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr4_(
    wantt: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    w: *mut MKL_Complex16,
    iloz: *mut c_int,
    ihiz: *mut c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlaqr4_(
        wantt,
        wantz,
        n,
        ilo,
        ihi,
        h,
        ldh,
        w,
        iloz,
        ihiz,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqr5_(
    wantt: *const c_int,
    wantz: *const c_int,
    kacc22: *const c_int,
    n: *const c_int,
    ktop: *const c_int,
    kbot: *const c_int,
    nshfts: *const c_int,
    s: *mut MKL_Complex16,
    h: *mut MKL_Complex16,
    ldh: *const c_int,
    iloz: *const c_int,
    ihiz: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    nv: *const c_int,
    wv: *mut MKL_Complex16,
    ldwv: *const c_int,
    nh: *const c_int,
    wh: *mut MKL_Complex16,
    ldwh: *const c_int
)
{
    zlaqr5_(
        wantt,
        wantz,
        kacc22,
        n,
        ktop,
        kbot,
        nshfts,
        s,
        h,
        ldh,
        iloz,
        ihiz,
        z,
        ldz,
        v,
        ldv,
        u,
        ldu,
        nv,
        wv,
        ldwv,
        nh,
        wh,
        ldwh
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqsb_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqsb_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqsp_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqsp_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqsy_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    s: *const f64,
    scond: *const f64,
    amax: *const f64,
    equed: *mut c_char
)
{
    zlaqsy_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        equed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqz0_(
    wants: *const c_char,
    wantq: *const c_char,
    wantz: *const c_char,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f32,
    rec: *const c_int,
    info: *mut c_int
)
{
    zlaqz0_(
        wants,
        wantq,
        wantz,
        n,
        ilo,
        ihi,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        work,
        lwork,
        rwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqz1_(
    ilq: *const c_int,
    ilz: *const c_int,
    k: *const c_int,
    istartm: *const c_int,
    istopm: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    nq: *const c_int,
    qstart: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    nz: *const c_int,
    zstart: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int
)
{
    zlaqz1_(
        ilq,
        ilz,
        k,
        istartm,
        istopm,
        ihi,
        a,
        lda,
        b,
        ldb,
        nq,
        qstart,
        q,
        ldq,
        nz,
        zstart,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqz2_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nw: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    ns: *mut c_int,
    nd: *mut c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    qc: *mut MKL_Complex16,
    ldqc: *const c_int,
    zc: *mut MKL_Complex16,
    ldzc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    rec: *const c_int,
    info: *mut c_int
)
{
    zlaqz2_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nw,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ns,
        nd,
        alpha,
        beta,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        rwork,
        rec,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaqz3_(
    ilschur: *const c_int,
    ilq: *const c_int,
    ilz: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    nshifts: *const c_int,
    nb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    qc: *mut MKL_Complex16,
    ldqc: *const c_int,
    zc: *mut MKL_Complex16,
    ldzc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlaqz3_(
        ilschur,
        ilq,
        ilz,
        n,
        ilo,
        ihi,
        nshifts,
        nb,
        alpha,
        beta,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        qc,
        ldqc,
        zc,
        ldzc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlar1v_(
    n: *const c_int,
    b1: *const c_int,
    bn: *const c_int,
    lambda: *const f64,
    d: *const f64,
    l: *const f64,
    ld: *const f64,
    lld: *const f64,
    pivmin: *const f64,
    gaptol: *const f64,
    z: *mut MKL_Complex16,
    wantnc: *const c_int,
    negcnt: *mut c_int,
    ztz: *mut f64,
    mingma: *mut f64,
    r: *mut c_int,
    isuppz: *mut c_int,
    nrminv: *mut f64,
    resid: *mut f64,
    rqcorr: *mut f64,
    work: *mut f64
)
{
    zlar1v_(
        n,
        b1,
        bn,
        lambda,
        d,
        l,
        ld,
        lld,
        pivmin,
        gaptol,
        z,
        wantnc,
        negcnt,
        ztz,
        mingma,
        r,
        isuppz,
        nrminv,
        resid,
        rqcorr,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlar2v_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    y: *mut MKL_Complex16,
    z: *mut MKL_Complex16,
    incx: *const c_int,
    c: *const f64,
    s: *const MKL_Complex16,
    incc: *const c_int
)
{
    zlar2v_(
        n,
        x,
        y,
        z,
        incx,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarcm_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    rwork: *mut f64
)
{
    zlarcm_(
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    ldwork: *const c_int
)
{
    zlarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarf_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex16,
    incv: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16
)
{
    zlarf_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfg_(
    n: *const c_int,
    alpha: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    tau: *mut MKL_Complex16
)
{
    zlarfg_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfgp_(
    n: *const c_int,
    alpha: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    tau: *mut MKL_Complex16
)
{
    zlarfgp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfp_(
    n: *const c_int,
    alpha: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    tau: *mut MKL_Complex16
)
{
    zlarfp_(
        n,
        alpha,
        x,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    tau: *const MKL_Complex16,
    t: *mut MKL_Complex16,
    ldt: *const c_int
)
{
    zlarft_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfx_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex16,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16
)
{
    zlarfx_(
        side,
        m,
        n,
        v,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlargv_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    y: *mut MKL_Complex16,
    incy: *const c_int,
    c: *mut f64,
    incc: *const c_int
)
{
    zlargv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarnv_(
    idist: *const c_int,
    iseed: *mut c_int,
    n: *const c_int,
    x: *mut MKL_Complex16
)
{
    zlarnv_(
        idist,
        iseed,
        n,
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarrv_(
    n: *const c_int,
    vl: *const f64,
    vu: *const f64,
    d: *mut f64,
    l: *mut f64,
    pivmin: *mut f64,
    isplit: *const c_int,
    m: *const c_int,
    dol: *const c_int,
    dou: *const c_int,
    minrgp: *const f64,
    rtol1: *const f64,
    rtol2: *const f64,
    w: *mut f64,
    werr: *mut f64,
    wgap: *mut f64,
    iblock: *const c_int,
    indexw: *const c_int,
    gers: *const f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlarrv_(
        n,
        vl,
        vu,
        d,
        l,
        pivmin,
        isplit,
        m,
        dol,
        dou,
        minrgp,
        rtol1,
        rtol2,
        w,
        werr,
        wgap,
        iblock,
        indexw,
        gers,
        z,
        ldz,
        isuppz,
        work,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarscl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f64,
    x: *mut MKL_Complex16,
    ldx: *const c_int
)
{
    zlarscl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlartg_(
    f: *const MKL_Complex16,
    g: *const MKL_Complex16,
    cs: *mut f64,
    sn: *mut MKL_Complex16,
    r: *mut MKL_Complex16
)
{
    zlartg_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlartv_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    incx: *const c_int,
    y: *mut MKL_Complex16,
    incy: *const c_int,
    c: *const f64,
    s: *const MKL_Complex16,
    incc: *const c_int
)
{
    zlartv_(
        n,
        x,
        incx,
        y,
        incy,
        c,
        s,
        incc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarzb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    ldwork: *const c_int
)
{
    zlarzb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        c,
        ldc,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarz_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex16,
    incv: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16
)
{
    zlarz_(
        side,
        m,
        n,
        l,
        v,
        incv,
        tau,
        c,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarzt_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const c_int,
    k: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    tau: *const MKL_Complex16,
    t: *mut MKL_Complex16,
    ldt: *const c_int
)
{
    zlarzt_(
        direct,
        storev,
        n,
        k,
        v,
        ldv,
        tau,
        t,
        ldt
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlascl_(
    type_: *const c_char,
    kl: *const c_int,
    ku: *const c_int,
    cfrom: *const f64,
    cto: *const f64,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zlascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlascl2_(
    m: *const c_int,
    n: *const c_int,
    d: *const f64,
    x: *mut MKL_Complex16,
    ldx: *const c_int
)
{
    zlascl2_(
        m,
        n,
        d,
        x,
        ldx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaset_(
    uplo: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    beta: *const MKL_Complex16,
    a: *mut MKL_Complex16,
    lda: *const c_int
)
{
    zlaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlasr_(
    side: *const c_char,
    pivot: *const c_char,
    direct: *const c_char,
    m: *const c_int,
    n: *const c_int,
    c: *const f64,
    s: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int
)
{
    zlasr_(
        side,
        pivot,
        direct,
        m,
        n,
        c,
        s,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlassq_(
    n: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    scale: *mut f64,
    sumsq: *mut f64
)
{
    zlassq_(
        n,
        x,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaswp_(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    k1: *const c_int,
    k2: *const c_int,
    ipiv: *const c_int,
    incx: *const c_int
)
{
    zlaswp_(
        n,
        a,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlasyf_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    kb: *mut c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    w: *mut MKL_Complex16,
    ldw: *const c_int,
    info: *mut c_int
)
{
    zlasyf_(
        uplo,
        n,
        nb,
        kb,
        a,
        lda,
        ipiv,
        w,
        ldw,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlat2c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    sa: *mut MKL_Complex8,
    ldsa: *const c_int,
    info: *mut c_int
)
{
    zlat2c_(
        uplo,
        n,
        a,
        lda,
        sa,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatbs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    x: *mut MKL_Complex16,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    zlatbs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        kd,
        ab,
        ldab,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatdf_(
    ijob: *const c_int,
    n: *const c_int,
    z: *const MKL_Complex16,
    ldz: *const c_int,
    rhs: *mut MKL_Complex16,
    rdsum: *mut f64,
    rdscal: *mut f64,
    ipiv: *const c_int,
    jpiv: *const c_int
)
{
    zlatdf_(
        ijob,
        n,
        z,
        ldz,
        rhs,
        rdsum,
        rdscal,
        ipiv,
        jpiv
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatps_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    x: *mut MKL_Complex16,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    zlatps_(
        uplo,
        trans,
        diag,
        normin,
        n,
        ap,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatrd_(
    uplo: *const c_char,
    n: *const c_int,
    nb: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    w: *mut MKL_Complex16,
    ldw: *const c_int
)
{
    zlatrd_(
        uplo,
        n,
        nb,
        a,
        lda,
        e,
        tau,
        w,
        ldw
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *mut MKL_Complex16,
    scale: *mut f64,
    cnorm: *mut f64,
    info: *mut c_int
)
{
    zlatrs_(
        uplo,
        trans,
        diag,
        normin,
        n,
        a,
        lda,
        x,
        scale,
        cnorm,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatrs3_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    normin: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    scale: *mut f64,
    cnorm: *mut f64,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zlatrs3_(
        uplo,
        trans,
        diag,
        normin,
        n,
        nrhs,
        a,
        lda,
        x,
        ldx,
        scale,
        cnorm,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatrz_(
    m: *const c_int,
    n: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16
)
{
    zlatrz_(
        m,
        n,
        l,
        a,
        lda,
        tau,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatzm_(
    side: *const c_char,
    m: *const c_int,
    n: *const c_int,
    v: *const MKL_Complex16,
    incv: *const c_int,
    tau: *const MKL_Complex16,
    c1: *mut MKL_Complex16,
    c2: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16
)
{
    zlatzm_(
        side,
        m,
        n,
        v,
        incv,
        tau,
        c1,
        c2,
        ldc,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlauu2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zlauu2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlauum_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zlauum_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbcon_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zpbcon_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbequ_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zpbequ_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbrfs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbstf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    info: *mut c_int
)
{
    zpbstf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbsv_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    afb: *mut MKL_Complex16,
    ldafb: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbtf2_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    info: *mut c_int
)
{
    zpbtf2_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbtrf_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *mut MKL_Complex16,
    ldab: *const c_int,
    info: *mut c_int
)
{
    zpbtrf_(
        uplo,
        n,
        kd,
        ab,
        ldab,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbtrs_(
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zpftrf_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zpftri_(
        transr,
        uplo,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        a,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpocon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zpocon_(
        uplo,
        n,
        a,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpoequb_(
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zpoequb_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpoequ_(
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zpoequ_(
        n,
        a,
        lda,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zporfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zporfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    s: *mut f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zposv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zposvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zpotf2_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zpotrf_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    zpotri_(
        uplo,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpotrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zppcon_(
        uplo,
        n,
        ap,
        anorm,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppequ_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut c_int
)
{
    zppequ_(
        uplo,
        n,
        ap,
        s,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    afp: *const MKL_Complex16,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zpprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zppsv_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex16,
    afp: *mut MKL_Complex16,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zpptrf_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zpptri_(
        uplo,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpptrs_(
        uplo,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpstf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    zpstf2_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpstrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    piv: *mut c_int,
    rank: *mut c_int,
    tol: *const f64,
    work: *mut f64,
    info: *mut c_int
)
{
    zpstrf_(
        uplo,
        n,
        a,
        lda,
        piv,
        rank,
        tol,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptcon_(
    n: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16,
    anorm: *const f64,
    rcond: *mut f64,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zptcon_(
        n,
        d,
        e,
        anorm,
        rcond,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    zpteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16,
    df: *const f64,
    ef: *const MKL_Complex16,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zptrfs_(
        uplo,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptsv_(
    n: *const c_int,
    nrhs: *const c_int,
    d: *mut f64,
    e: *mut MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zptsv_(
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptsvx_(
    fact: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16,
    df: *mut f64,
    ef: *mut MKL_Complex16,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zptsvx_(
        fact,
        n,
        nrhs,
        d,
        e,
        df,
        ef,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpttrf_(
    n: *const c_int,
    d: *mut f64,
    e: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zpttrf_(
        n,
        d,
        e,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpttrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zpttrs_(
        uplo,
        n,
        nrhs,
        d,
        e,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptts2_(
    iuplo: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    d: *const f64,
    e: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    zptts2_(
        iuplo,
        n,
        nrhs,
        d,
        e,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zrot_(
    n: *const c_int,
    cx: *mut MKL_Complex16,
    incx: *const c_int,
    cy: *mut MKL_Complex16,
    incy: *const c_int,
    c: *const f64,
    s: *const MKL_Complex16
)
{
    zrot_(
        n,
        cx,
        incx,
        cy,
        incy,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspcon_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zspcon_(
        uplo,
        n,
        ap,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspmv_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    ap: *const MKL_Complex16,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const MKL_Complex16,
    y: *mut MKL_Complex16,
    incy: *const c_int
)
{
    zspmv_(
        uplo,
        n,
        alpha,
        ap,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspr_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    x: *const MKL_Complex16,
    incx: *const c_int,
    ap: *mut MKL_Complex16
)
{
    zspr_(
        uplo,
        n,
        alpha,
        x,
        incx,
        ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsprfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    afp: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zsprfs_(
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspsv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zspsv_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    afp: *mut MKL_Complex16,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        ap,
        afp,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptrf_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zsptrf_(
        uplo,
        n,
        ap,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptri_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsptri_(
        uplo,
        n,
        ap,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zsptrs_(
        uplo,
        n,
        nrhs,
        ap,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstedc_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    lrwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zstedc_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    abstol: *const f64,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    isuppz: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zstegr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        w,
        z,
        ldz,
        isuppz,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstein_(
    n: *const c_int,
    d: *const f64,
    e: *const f64,
    m: *const c_int,
    w: *const f64,
    iblock: *const c_int,
    isplit: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut f64,
    iwork: *mut c_int,
    ifail: *mut c_int,
    info: *mut c_int
)
{
    zstein_(
        n,
        d,
        e,
        m,
        w,
        iblock,
        isplit,
        z,
        ldz,
        work,
        iwork,
        ifail,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const c_int,
    iu: *const c_int,
    m: *mut c_int,
    w: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    nzc: *const c_int,
    isuppz: *mut c_int,
    tryrac: *mut c_int,
    work: *mut f64,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    zstemr_(
        jobz,
        range,
        n,
        d,
        e,
        vl,
        vu,
        il,
        iu,
        m,
        w,
        z,
        ldz,
        nzc,
        isuppz,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsteqr_(
    compz: *const c_char,
    n: *const c_int,
    d: *mut f64,
    e: *mut f64,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    zsteqr_(
        compz,
        n,
        d,
        e,
        z,
        ldz,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsycon_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsycon_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyequb_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    s: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsyequb_(
        uplo,
        n,
        a,
        lda,
        s,
        scond,
        amax,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsymv_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const MKL_Complex16,
    y: *mut MKL_Complex16,
    incy: *const c_int
)
{
    zsymv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyr_(
    uplo: *const c_char,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    x: *const MKL_Complex16,
    incx: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int
)
{
    zsyr_(
        uplo,
        n,
        alpha,
        x,
        incx,
        a,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyrfs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zsyrfs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    s: *mut f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zsyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsysv_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zsysvx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        b,
        ldb,
        x,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    af: *mut MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *mut c_int,
    equed: *mut c_char,
    s: *mut f64,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const c_int,
    params: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    zsysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        equed,
        s,
        b,
        ldb,
        x,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytf2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    info: *mut c_int
)
{
    zsytf2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zsytrf_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zsytri_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_(
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zsytrs_(
        uplo,
        n,
        nrhs,
        a,
        lda,
        ipiv,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        ab,
        ldab,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *const MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ztbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        ab,
        ldab,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const c_int,
    n: *const c_int,
    alpha: *const MKL_Complex16,
    a: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int
)
{
    ztfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        a,
        b,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztftri_(
        transr,
        uplo,
        diag,
        n,
        a,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const MKL_Complex16,
    ap: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztfttp_(
        transr,
        uplo,
        n,
        arf,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    arf: *const MKL_Complex16,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    ztfttr_(
        transr,
        uplo,
        n,
        arf,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    s: *const MKL_Complex16,
    lds: *const c_int,
    p: *const MKL_Complex16,
    ldp: *const c_int,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztgevc_(
        side,
        howmny,
        select,
        n,
        s,
        lds,
        p,
        ldp,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgex2_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    j1: *const c_int,
    info: *mut c_int
)
{
    ztgex2_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        j1,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgexc_(
    wantq: *const c_int,
    wantz: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    ifst: *const c_int,
    ilst: *mut c_int,
    info: *mut c_int
)
{
    ztgexc_(
        wantq,
        wantz,
        n,
        a,
        lda,
        b,
        ldb,
        q,
        ldq,
        z,
        ldz,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsen_(
    ijob: *const c_int,
    wantq: *const c_int,
    wantz: *const c_int,
    select: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    alpha: *mut MKL_Complex16,
    beta: *mut MKL_Complex16,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    m: *mut c_int,
    pl: *mut f64,
    pr: *mut f64,
    dif: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    iwork: *mut c_int,
    liwork: *const c_int,
    info: *mut c_int
)
{
    ztgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        q,
        ldq,
        z,
        ldz,
        m,
        pl,
        pr,
        dif,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const c_int,
    p: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    tola: *const f64,
    tolb: *const f64,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut MKL_Complex16,
    ldu: *const c_int,
    v: *mut MKL_Complex16,
    ldv: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    work: *mut MKL_Complex16,
    ncycle: *mut c_int,
    info: *mut c_int
)
{
    ztgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        ncycle,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    vl: *const MKL_Complex16,
    ldvl: *const c_int,
    vr: *const MKL_Complex16,
    ldvr: *const c_int,
    s: *mut f64,
    dif: *mut f64,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ztgsna_(
        job,
        howmny,
        select,
        n,
        a,
        lda,
        b,
        ldb,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        dif,
        mm,
        m,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsy2_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    d: *const MKL_Complex16,
    ldd: *const c_int,
    e: *const MKL_Complex16,
    lde: *const c_int,
    f: *mut MKL_Complex16,
    ldf: *const c_int,
    scale: *mut f64,
    rdsum: *mut f64,
    rdscal: *mut f64,
    info: *mut c_int
)
{
    ztgsy2_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        rdsum,
        rdscal,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsyl_(
    trans: *const c_char,
    ijob: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    d: *const MKL_Complex16,
    ldd: *const c_int,
    e: *const MKL_Complex16,
    lde: *const c_int,
    f: *mut MKL_Complex16,
    ldf: *const c_int,
    scale: *mut f64,
    dif: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    ztgsyl_(
        trans,
        ijob,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        scale,
        dif,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztpcon_(
        norm,
        uplo,
        diag,
        n,
        ap,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *const MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztptri_(
        uplo,
        diag,
        n,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    ap: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ztptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        ap,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    arf: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztpttf_(
        transr,
        uplo,
        n,
        ap,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpttr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    ztpttr_(
        uplo,
        n,
        ap,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    rcond: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztrcon_(
        norm,
        uplo,
        diag,
        n,
        a,
        lda,
        rcond,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    vl: *mut MKL_Complex16,
    ldvl: *const c_int,
    vr: *mut MKL_Complex16,
    ldvr: *const c_int,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztrevc_(
        side,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrexc_(
    compq: *const c_char,
    n: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    ifst: *const c_int,
    ilst: *const c_int,
    info: *mut c_int
)
{
    ztrexc_(
        compq,
        n,
        t,
        ldt,
        q,
        ldq,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    x: *const MKL_Complex16,
    ldx: *const c_int,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut MKL_Complex16,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        x,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    w: *mut MKL_Complex16,
    m: *mut c_int,
    s: *mut f64,
    sep: *mut f64,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ztrsen_(
        job,
        compq,
        select,
        n,
        t,
        ldt,
        q,
        ldq,
        w,
        m,
        s,
        sep,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const c_int,
    n: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    vl: *const MKL_Complex16,
    ldvl: *const c_int,
    vr: *const MKL_Complex16,
    ldvr: *const c_int,
    s: *mut f64,
    sep: *mut f64,
    mm: *const c_int,
    m: *mut c_int,
    work: *mut MKL_Complex16,
    ldwork: *const c_int,
    rwork: *mut f64,
    info: *mut c_int
)
{
    ztrsna_(
        job,
        howmny,
        select,
        n,
        t,
        ldt,
        vl,
        ldvl,
        vr,
        ldvr,
        s,
        sep,
        mm,
        m,
        work,
        ldwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    scale: *mut f64,
    info: *mut c_int
)
{
    ztrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    scale: *mut f64,
    swork: *mut f64,
    ldswork: *const c_int,
    info: *mut c_int
)
{
    ztrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        scale,
        swork,
        ldswork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrti2_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    ztrti2_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    ztrtri_(
        uplo,
        diag,
        n,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ztrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        a,
        lda,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    arf: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztrttf_(
        transr,
        uplo,
        n,
        a,
        lda,
        arf,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrttp_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    ap: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztrttp_(
        uplo,
        n,
        a,
        lda,
        ap,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztzrqf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    info: *mut c_int
)
{
    ztzrqf_(
        m,
        n,
        a,
        lda,
        tau,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztzrzf_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *mut MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ztzrzf_(
        m,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zung2l_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zung2l_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zung2r_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zung2r_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungbr_(
    vect: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungbr_(
        vect,
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunghr_(
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunghr_(
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungl2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zungl2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunglq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunglq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungql_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungql_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungqr_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungqr_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungr2_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zungr2_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungrq_(
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungrq_(
        m,
        n,
        k,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungtr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zungtr_(
        uplo,
        n,
        a,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunm2l_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunm2l_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunm2r_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunm2r_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ilo: *const c_int,
    ihi: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunml2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunml2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmlq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmql_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmqr_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmr2_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunmr2_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmr3_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zunmr3_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmrq_(
        side,
        trans,
        m,
        n,
        k,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zunmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        a,
        lda,
        tau,
        c,
        ldc,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zupgtr_(
    uplo: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    tau: *const MKL_Complex16,
    q: *mut MKL_Complex16,
    ldq: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zupgtr_(
        uplo,
        n,
        ap,
        tau,
        q,
        ldq,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zupmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const c_int,
    n: *const c_int,
    ap: *const MKL_Complex16,
    tau: *const MKL_Complex16,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zupmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        ap,
        tau,
        c,
        ldc,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    t: *mut MKL_Complex8,
    ldt: *const c_int,
    info: *mut c_int
)
{
    cgeqrt2_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    cheswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    chetri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex8,
    nb: *const c_int,
    info: *mut c_int
)
{
    chetri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gbamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    alpha: *const f32,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    cla_gbamv_(
        trans,
        m,
        n,
        kl,
        ku,
        alpha,
        ab,
        ldab,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gbrcond_c_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *const c_int,
    c: *const f32,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_gbrcond_c_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gbrcond_x_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex8,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_gbrcond_x_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gbrfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut MKL_Complex8,
    ayb: *mut f32,
    dy: *mut MKL_Complex8,
    y_tail: *mut MKL_Complex8,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    cla_gbrfsx_extended_(
        prec_type,
        trans_type,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gbrpvgrw_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ncols: *const c_int,
    ab: *const MKL_Complex8,
    ldab: *const c_int,
    afb: *const MKL_Complex8,
    ldafb: *const c_int
) -> f32
{
    cla_gbrpvgrw_(
        n,
        kl,
        ku,
        ncols,
        ab,
        ldab,
        afb,
        ldafb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_geamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    cla_geamv_(
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gercond_c_(
    trans: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f32,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_gercond_c_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gercond_x_(
    trans: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex8,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_gercond_x_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gerfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    errs_n: *mut f32,
    errs_c: *mut f32,
    res: *mut MKL_Complex8,
    ayb: *mut f32,
    dy: *mut MKL_Complex8,
    y_tail: *mut MKL_Complex8,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    cla_gerfsx_extended_(
        prec_type,
        trans_type,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        errs_n,
        errs_c,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_gerpvgrw_(
    n: *const c_int,
    ncols: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int
) -> f32
{
    cla_gerpvgrw_(
        n,
        ncols,
        a,
        lda,
        af,
        ldaf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_heamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    cla_heamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_hercond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f32,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_hercond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_hercond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex8,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_hercond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_herfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut MKL_Complex8,
    ayb: *mut f32,
    dy: *mut MKL_Complex8,
    y_tail: *mut MKL_Complex8,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    cla_herfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_herpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f32
) -> f32
{
    cla_herpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_lin_berr_(
    n: *const c_int,
    nz: *const c_int,
    nrhs: *const c_int,
    res: *const MKL_Complex8,
    ayb: *const f32,
    berr: *mut f32
)
{
    cla_lin_berr_(
        n,
        nz,
        nrhs,
        res,
        ayb,
        berr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_porcond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    c: *const f32,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_porcond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_porcond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    x: *const MKL_Complex8,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_porcond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_porfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut MKL_Complex8,
    ayb: *mut f32,
    dy: *mut MKL_Complex8,
    y_tail: *mut MKL_Complex8,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    cla_porfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_porpvgrw_(
    uplo: *const c_char,
    ncols: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    work: *mut f32
) -> f32
{
    cla_porpvgrw_(
        uplo,
        ncols,
        a,
        lda,
        af,
        ldaf,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_syamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const MKL_Complex8,
    lda: *const c_int,
    x: *const MKL_Complex8,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    cla_syamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_syrcond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f32,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_syrcond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_syrcond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex8,
    info: *mut c_int,
    work: *mut MKL_Complex8,
    rwork: *mut f32
) -> f32
{
    cla_syrcond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_syrfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const MKL_Complex8,
    ldb: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut MKL_Complex8,
    ayb: *mut f32,
    dy: *mut MKL_Complex8,
    y_tail: *mut MKL_Complex8,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    cla_syrfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_syrpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    af: *const MKL_Complex8,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f32
) -> f32
{
    cla_syrpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cla_wwaddw_(
    n: *const c_int,
    x: *mut MKL_Complex8,
    y: *mut MKL_Complex8,
    w: *const MKL_Complex8
)
{
    cla_wwaddw_(
        n,
        x,
        y,
        w
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex8,
    ldv: *const c_int,
    t: *const MKL_Complex8,
    ldt: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    work: *mut MKL_Complex8,
    ldwork: *const c_int
)
{
    ctprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    t: *mut f64,
    ldt: *const c_int,
    info: *mut c_int
)
{
    dgeqrt2_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gbamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    alpha: *const f64,
    ab: *const f64,
    ldab: *const c_int,
    x: *const f64,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    dla_gbamv_(
        trans,
        m,
        n,
        kl,
        ku,
        alpha,
        ab,
        ldab,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gbrcond_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f64,
    info: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int
) -> f64
{
    dla_gbrcond_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gbrfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const f64,
    ldb: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut f64,
    ayb: *mut f64,
    dy: *mut f64,
    y_tail: *mut f64,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    dla_gbrfsx_extended_(
        prec_type,
        trans_type,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gbrpvgrw_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ncols: *const c_int,
    ab: *const f64,
    ldab: *const c_int,
    afb: *const f64,
    ldafb: *const c_int
) -> f64
{
    dla_gbrpvgrw_(
        n,
        kl,
        ku,
        ncols,
        ab,
        ldab,
        afb,
        ldafb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_geamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const f64,
    lda: *const c_int,
    x: *const f64,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    dla_geamv_(
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gercond_(
    trans: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f64,
    info: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int
) -> f64
{
    dla_gercond_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gerfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const f64,
    ldb: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    errs_n: *mut f64,
    errs_c: *mut f64,
    res: *mut f64,
    ayb: *mut f64,
    dy: *mut f64,
    y_tail: *mut f64,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    dla_gerfsx_extended_(
        prec_type,
        trans_type,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        errs_n,
        errs_c,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_gerpvgrw_(
    n: *const c_int,
    ncols: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int
) -> f64
{
    dla_gerpvgrw_(
        n,
        ncols,
        a,
        lda,
        af,
        ldaf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_lin_berr_(
    n: *const c_int,
    nz: *const c_int,
    nrhs: *const c_int,
    res: *const f64,
    ayb: *const f64,
    berr: *mut f64
)
{
    dla_lin_berr_(
        n,
        nz,
        nrhs,
        res,
        ayb,
        berr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_porcond_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    cmode: *const c_int,
    c: *const f64,
    info: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int
) -> f64
{
    dla_porcond_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_porfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const f64,
    ldb: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut f64,
    ayb: *mut f64,
    dy: *mut f64,
    y_tail: *mut f64,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    dla_porfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_porpvgrw_(
    uplo: *const c_char,
    ncols: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    work: *mut f64
) -> f64
{
    dla_porpvgrw_(
        uplo,
        ncols,
        a,
        lda,
        af,
        ldaf,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_syamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const f64,
    lda: *const c_int,
    x: *const f64,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    dla_syamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_syrcond_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f64,
    info: *mut c_int,
    work: *mut f64,
    iwork: *mut c_int
) -> f64
{
    dla_syrcond_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_syrfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const f64,
    ldb: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut f64,
    ayb: *mut f64,
    dy: *mut f64,
    y_tail: *mut f64,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    dla_syrfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_syrpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const f64,
    lda: *const c_int,
    af: *const f64,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f64
) -> f64
{
    dla_syrpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dla_wwaddw_(
    n: *const c_int,
    x: *mut f64,
    y: *mut f64,
    w: *const f64
)
{
    dla_wwaddw_(
        n,
        x,
        y,
        w
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const f64,
    ldv: *const c_int,
    t: *const f64,
    ldt: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    work: *mut f64,
    ldwork: *const c_int
)
{
    dtprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    t: *mut f32,
    ldt: *const c_int,
    info: *mut c_int
)
{
    sgeqrt2_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gbamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    alpha: *const f32,
    ab: *const f32,
    ldab: *const c_int,
    x: *const f32,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    sla_gbamv_(
        trans,
        m,
        n,
        kl,
        ku,
        alpha,
        ab,
        ldab,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gbrcond_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f32,
    info: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int
) -> f32
{
    sla_gbrcond_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gbrfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const f32,
    ldb: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut f32,
    ayb: *mut f32,
    dy: *mut f32,
    y_tail: *mut f32,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    sla_gbrfsx_extended_(
        prec_type,
        trans_type,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gbrpvgrw_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ncols: *const c_int,
    ab: *const f32,
    ldab: *const c_int,
    afb: *const f32,
    ldafb: *const c_int
) -> f32
{
    sla_gbrpvgrw_(
        n,
        kl,
        ku,
        ncols,
        ab,
        ldab,
        afb,
        ldafb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_geamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const f32,
    lda: *const c_int,
    x: *const f32,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    sla_geamv_(
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gercond_(
    trans: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f32,
    info: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int
) -> f32
{
    sla_gercond_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gerfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const f32,
    ldb: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    errs_n: *mut f32,
    errs_c: *mut f32,
    res: *mut f32,
    ayb: *mut f32,
    dy: *mut f32,
    y_tail: *mut f32,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    sla_gerfsx_extended_(
        prec_type,
        trans_type,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        errs_n,
        errs_c,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_gerpvgrw_(
    n: *const c_int,
    ncols: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int
) -> f32
{
    sla_gerpvgrw_(
        n,
        ncols,
        a,
        lda,
        af,
        ldaf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_lin_berr_(
    n: *const c_int,
    nz: *const c_int,
    nrhs: *const c_int,
    res: *const f32,
    ayb: *const f32,
    berr: *mut f32
)
{
    sla_lin_berr_(
        n,
        nz,
        nrhs,
        res,
        ayb,
        berr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_porcond_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    cmode: *const c_int,
    c: *const f32,
    info: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int
) -> f32
{
    sla_porcond_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_porfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const f32,
    ldb: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut f32,
    ayb: *mut f32,
    dy: *mut f32,
    y_tail: *mut f32,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    sla_porfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_porpvgrw_(
    uplo: *const c_char,
    ncols: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    work: *mut f32
) -> f32
{
    sla_porpvgrw_(
        uplo,
        ncols,
        a,
        lda,
        af,
        ldaf,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_syamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f32,
    a: *const f32,
    lda: *const c_int,
    x: *const f32,
    incx: *const c_int,
    beta: *const f32,
    y: *mut f32,
    incy: *const c_int
)
{
    sla_syamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_syrcond_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    cmode: *const c_int,
    c: *const f32,
    info: *mut c_int,
    work: *mut f32,
    iwork: *mut c_int
) -> f32
{
    sla_syrcond_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        cmode,
        c,
        info,
        work,
        iwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_syrfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f32,
    b: *const f32,
    ldb: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    berr_out: *mut f32,
    n_norms: *const c_int,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    res: *mut f32,
    ayb: *mut f32,
    dy: *mut f32,
    y_tail: *mut f32,
    rcond: *const f32,
    ithresh: *const c_int,
    rthresh: *const f32,
    dz_ub: *const f32,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    sla_syrfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_syrpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const f32,
    lda: *const c_int,
    af: *const f32,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f32
) -> f32
{
    sla_syrpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sla_wwaddw_(
    n: *const c_int,
    x: *mut f32,
    y: *mut f32,
    w: *const f32
)
{
    sla_wwaddw_(
        n,
        x,
        y,
        w
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const f32,
    ldv: *const c_int,
    t: *const f32,
    ldt: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    work: *mut f32,
    ldwork: *const c_int
)
{
    stprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt2_(
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    t: *mut MKL_Complex16,
    ldt: *const c_int,
    info: *mut c_int
)
{
    zgeqrt2_(
        m,
        n,
        a,
        lda,
        t,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheswapr_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    i1: *const c_int,
    i2: *const c_int
)
{
    zheswapr_(
        uplo,
        n,
        a,
        lda,
        i1,
        i2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri2_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zhetri2_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri2x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    ipiv: *const c_int,
    work: *mut MKL_Complex16,
    nb: *const c_int,
    info: *mut c_int
)
{
    zhetri2x_(
        uplo,
        n,
        a,
        lda,
        ipiv,
        work,
        nb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gbamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    alpha: *const f64,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    zla_gbamv_(
        trans,
        m,
        n,
        kl,
        ku,
        alpha,
        ab,
        ldab,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gbrcond_c_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *const c_int,
    c: *const f64,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_gbrcond_c_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gbrcond_x_(
    trans: *const c_char,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex16,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_gbrcond_x_(
        trans,
        n,
        kl,
        ku,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gbrfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    nrhs: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut MKL_Complex16,
    ayb: *mut f64,
    dy: *mut MKL_Complex16,
    y_tail: *mut MKL_Complex16,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    zla_gbrfsx_extended_(
        prec_type,
        trans_type,
        n,
        kl,
        ku,
        nrhs,
        ab,
        ldab,
        afb,
        ldafb,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gbrpvgrw_(
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    ncols: *const c_int,
    ab: *const MKL_Complex16,
    ldab: *const c_int,
    afb: *const MKL_Complex16,
    ldafb: *const c_int
) -> f64
{
    zla_gbrpvgrw_(
        n,
        kl,
        ku,
        ncols,
        ab,
        ldab,
        afb,
        ldafb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_geamv_(
    trans: *const c_int,
    m: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    zla_geamv_(
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gercond_c_(
    trans: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f64,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_gercond_c_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gercond_x_(
    trans: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex16,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_gercond_x_(
        trans,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gerfsx_extended_(
    prec_type: *const c_int,
    trans_type: *const c_int,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    errs_n: *mut f64,
    errs_c: *mut f64,
    res: *mut MKL_Complex16,
    ayb: *mut f64,
    dy: *mut MKL_Complex16,
    y_tail: *mut MKL_Complex16,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    zla_gerfsx_extended_(
        prec_type,
        trans_type,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        errs_n,
        errs_c,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_gerpvgrw_(
    n: *const c_int,
    ncols: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int
) -> f64
{
    zla_gerpvgrw_(
        n,
        ncols,
        a,
        lda,
        af,
        ldaf
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_heamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    zla_heamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_hercond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f64,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_hercond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_hercond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex16,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_hercond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_herfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut MKL_Complex16,
    ayb: *mut f64,
    dy: *mut MKL_Complex16,
    y_tail: *mut MKL_Complex16,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    zla_herfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_herpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f64
) -> f64
{
    zla_herpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_lin_berr_(
    n: *const c_int,
    nz: *const c_int,
    nrhs: *const c_int,
    res: *const MKL_Complex16,
    ayb: *const f64,
    berr: *mut f64
)
{
    zla_lin_berr_(
        n,
        nz,
        nrhs,
        res,
        ayb,
        berr
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_porcond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    c: *const f64,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_porcond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_porcond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    x: *const MKL_Complex16,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_porcond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_porfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut MKL_Complex16,
    ayb: *mut f64,
    dy: *mut MKL_Complex16,
    y_tail: *mut MKL_Complex16,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    zla_porfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_porpvgrw_(
    uplo: *const c_char,
    ncols: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    work: *mut f64
) -> f64
{
    zla_porpvgrw_(
        uplo,
        ncols,
        a,
        lda,
        af,
        ldaf,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_syamv_(
    uplo: *const c_int,
    n: *const c_int,
    alpha: *const f64,
    a: *const MKL_Complex16,
    lda: *const c_int,
    x: *const MKL_Complex16,
    incx: *const c_int,
    beta: *const f64,
    y: *mut f64,
    incy: *const c_int
)
{
    zla_syamv_(
        uplo,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_syrcond_c_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    c: *const f64,
    capply: *const c_int,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_syrcond_c_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        c,
        capply,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_syrcond_x_(
    uplo: *const c_char,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    x: *const MKL_Complex16,
    info: *mut c_int,
    work: *mut MKL_Complex16,
    rwork: *mut f64
) -> f64
{
    zla_syrcond_x_(
        uplo,
        n,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        x,
        info,
        work,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_syrfsx_extended_(
    prec_type: *const c_int,
    uplo: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    colequ: *const c_int,
    c: *const f64,
    b: *const MKL_Complex16,
    ldb: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    berr_out: *mut f64,
    n_norms: *const c_int,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    res: *mut MKL_Complex16,
    ayb: *mut f64,
    dy: *mut MKL_Complex16,
    y_tail: *mut MKL_Complex16,
    rcond: *const f64,
    ithresh: *const c_int,
    rthresh: *const f64,
    dz_ub: *const f64,
    ignore_cwise: *const c_int,
    info: *mut c_int
)
{
    zla_syrfsx_extended_(
        prec_type,
        uplo,
        n,
        nrhs,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        colequ,
        c,
        b,
        ldb,
        y,
        ldy,
        berr_out,
        n_norms,
        err_bnds_norm,
        err_bnds_comp,
        res,
        ayb,
        dy,
        y_tail,
        rcond,
        ithresh,
        rthresh,
        dz_ub,
        ignore_cwise,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_syrpvgrw_(
    uplo: *const c_char,
    n: *const c_int,
    info: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    af: *const MKL_Complex16,
    ldaf: *const c_int,
    ipiv: *const c_int,
    work: *mut f64
) -> f64
{
    zla_syrpvgrw_(
        uplo,
        n,
        info,
        a,
        lda,
        af,
        ldaf,
        ipiv,
        work
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zla_wwaddw_(
    n: *const c_int,
    x: *mut MKL_Complex16,
    y: *mut MKL_Complex16,
    w: *const MKL_Complex16
)
{
    zla_wwaddw_(
        n,
        x,
        y,
        w
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const c_int,
    n: *const c_int,
    k: *const c_int,
    l: *const c_int,
    v: *const MKL_Complex16,
    ldv: *const c_int,
    t: *const MKL_Complex16,
    ldt: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    work: *mut MKL_Complex16,
    ldwork: *const c_int
)
{
    ztprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        v,
        ldv,
        t,
        ldt,
        a,
        lda,
        b,
        ldb,
        work,
        ldwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cherdb_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut MKL_Complex8,
    z: *mut MKL_Complex8,
    ldz: *const c_int,
    work: *mut MKL_Complex8,
    lwork: *const c_int,
    info: *mut c_int
)
{
    cherdb_(
        jobz,
        uplo,
        n,
        kd,
        a,
        lda,
        d,
        e,
        tau,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyrdb_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut f64,
    z: *mut f64,
    ldz: *const c_int,
    work: *mut f64,
    lwork: *const c_int,
    info: *mut c_int
)
{
    dsyrdb_(
        jobz,
        uplo,
        n,
        kd,
        a,
        lda,
        d,
        e,
        tau,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyrdb_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    d: *mut f32,
    e: *mut f32,
    tau: *mut f32,
    z: *mut f32,
    ldz: *const c_int,
    work: *mut f32,
    lwork: *const c_int,
    info: *mut c_int
)
{
    ssyrdb_(
        jobz,
        uplo,
        n,
        kd,
        a,
        lda,
        d,
        e,
        tau,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zherdb_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const c_int,
    kd: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    d: *mut f64,
    e: *mut f64,
    tau: *mut MKL_Complex16,
    z: *mut MKL_Complex16,
    ldz: *const c_int,
    work: *mut MKL_Complex16,
    lwork: *const c_int,
    info: *mut c_int
)
{
    zherdb_(
        jobz,
        uplo,
        n,
        kd,
        a,
        lda,
        d,
        e,
        tau,
        z,
        ldz,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cdtsvb_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut MKL_Complex8,
    d: *mut MKL_Complex8,
    du: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cdtsvb_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cdttrfb_(
    n: *const c_int,
    dl: *mut MKL_Complex8,
    d: *mut MKL_Complex8,
    du: *const MKL_Complex8,
    info: *mut c_int
)
{
    cdttrfb_(
        n,
        dl,
        d,
        du,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cdttrsb_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex8,
    d: *const MKL_Complex8,
    du: *const MKL_Complex8,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    info: *mut c_int
)
{
    cdttrsb_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ddtsvb_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut f64,
    d: *mut f64,
    du: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ddtsvb_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ddttrfb_(
    n: *const c_int,
    dl: *mut f64,
    d: *mut f64,
    du: *const f64,
    info: *mut c_int
)
{
    ddttrfb_(
        n,
        dl,
        d,
        du,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ddttrsb_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f64,
    d: *const f64,
    du: *const f64,
    b: *mut f64,
    ldb: *const c_int,
    info: *mut c_int
)
{
    ddttrsb_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sdtsvb_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut f32,
    d: *mut f32,
    du: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sdtsvb_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sdttrfb_(
    n: *const c_int,
    dl: *mut f32,
    d: *mut f32,
    du: *const f32,
    info: *mut c_int
)
{
    sdttrfb_(
        n,
        dl,
        d,
        du,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sdttrsb_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const f32,
    d: *const f32,
    du: *const f32,
    b: *mut f32,
    ldb: *const c_int,
    info: *mut c_int
)
{
    sdttrsb_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zdtsvb_(
    n: *const c_int,
    nrhs: *const c_int,
    dl: *mut MKL_Complex16,
    d: *mut MKL_Complex16,
    du: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zdtsvb_(
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zdttrfb_(
    n: *const c_int,
    dl: *mut MKL_Complex16,
    d: *mut MKL_Complex16,
    du: *const MKL_Complex16,
    info: *mut c_int
)
{
    zdttrfb_(
        n,
        dl,
        d,
        du,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zdttrsb_(
    trans: *const c_char,
    n: *const c_int,
    nrhs: *const c_int,
    dl: *const MKL_Complex16,
    d: *const MKL_Complex16,
    du: *const MKL_Complex16,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    info: *mut c_int
)
{
    zdttrsb_(
        trans,
        n,
        nrhs,
        dl,
        d,
        du,
        b,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ctppack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ctppack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ctppack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex8,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ctppack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dtppack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dtppack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dtppack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut f64,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dtppack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_stppack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_stppack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_stppack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut f32,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_stppack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ztppack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ztppack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ztppack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *mut MKL_Complex16,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ztppack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ctpunpack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ctpunpack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ctpunpack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex8,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ctpunpack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dtpunpack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const f64,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dtpunpack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dtpunpack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const f64,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_dtpunpack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_stpunpack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const f32,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_stpunpack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_stpunpack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const f32,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_stpunpack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ztpunpack(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ztpunpack(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_ztpunpack_(
    uplo: *const c_char,
    trans: *const c_char,
    n: *const c_int,
    ap: *const MKL_Complex16,
    i: *const c_int,
    j: *const c_int,
    rows: *const c_int,
    cols: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    info: *mut c_int
)
{
    mkl_ztpunpack_(
        uplo,
        trans,
        n,
        ap,
        i,
        j,
        rows,
        cols,
        a,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatm1_(
    mode: *const c_int,
    cond: *const f64,
    irsign: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *mut f64,
    n: *const c_int,
    info: *mut c_int
)
{
    dlatm1_(
        mode,
        cond,
        irsign,
        idist,
        iseed,
        d,
        n,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatm1_(
    mode: *const c_int,
    cond: *const f32,
    irsign: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *mut f32,
    n: *const c_int,
    info: *mut c_int
)
{
    slatm1_(
        mode,
        cond,
        irsign,
        idist,
        iseed,
        d,
        n,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatm1_(
    mode: *const c_int,
    cond: *const f32,
    irsign: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *mut MKL_Complex8,
    n: *const c_int,
    info: *mut c_int
)
{
    clatm1_(
        mode,
        cond,
        irsign,
        idist,
        iseed,
        d,
        n,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatm1_(
    mode: *const c_int,
    cond: *const f64,
    irsign: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *mut MKL_Complex16,
    n: *const c_int,
    info: *mut c_int
)
{
    zlatm1_(
        mode,
        cond,
        irsign,
        idist,
        iseed,
        d,
        n,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatm2_(
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const f64,
    igrade: *const c_int,
    dl: *const f64,
    dr: *const f64,
    ipvtng: *const c_int,
    iwork: *mut c_int,
    sparse: *const f64
) -> f64
{
    dlatm2_(
        m,
        n,
        ii,
        j,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatm2_(
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const f32,
    igrade: *const c_int,
    dl: *const f32,
    dr: *const f32,
    ipvtng: *const c_int,
    iwork: *mut c_int,
    sparse: *const f32
) -> f32
{
    slatm2_(
        m,
        n,
        ii,
        j,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatm2_(
    retval: *mut MKL_Complex8,
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const MKL_Complex8,
    igrade: *const c_int,
    dl: *const MKL_Complex8,
    dr: *const MKL_Complex8,
    ipvtng: *const c_int,
    iwork: *mut c_int,
    sparse: *const f32
)
{
    clatm2_(
        retval,
        m,
        n,
        ii,
        j,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatm2_(
    retval: *mut MKL_Complex16,
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const MKL_Complex16,
    igrade: *const c_int,
    dl: *const MKL_Complex16,
    dr: *const MKL_Complex16,
    ipvtng: *const c_int,
    iwork: *mut c_int,
    sparse: *const f64
)
{
    zlatm2_(
        retval,
        m,
        n,
        ii,
        j,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatm3_(
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    isub: *mut c_int,
    jsub: *mut c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const f64,
    igrade: *const c_int,
    dl: *const f64,
    dr: *const f64,
    ipvtng: *const c_int,
    iwork: *const c_int,
    sparse: *const f64
) -> f64
{
    dlatm3_(
        m,
        n,
        ii,
        j,
        isub,
        jsub,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatm3_(
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    isub: *mut c_int,
    jsub: *mut c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const f32,
    igrade: *const c_int,
    dl: *const f32,
    dr: *const f32,
    ipvtng: *const c_int,
    iwork: *const c_int,
    sparse: *const f32
) -> f32
{
    slatm3_(
        m,
        n,
        ii,
        j,
        isub,
        jsub,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatm3_(
    retval: *mut MKL_Complex8,
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    isub: *mut c_int,
    jsub: *mut c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const MKL_Complex8,
    igrade: *const c_int,
    dl: *const MKL_Complex8,
    dr: *const MKL_Complex8,
    ipvtng: *const c_int,
    iwork: *const c_int,
    sparse: *const f32
)
{
    clatm3_(
        retval,
        m,
        n,
        ii,
        j,
        isub,
        jsub,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatm3_(
    retval: *mut MKL_Complex16,
    m: *const c_int,
    n: *const c_int,
    ii: *mut c_int,
    j: *const c_int,
    isub: *mut c_int,
    jsub: *mut c_int,
    kl: *const c_int,
    ku: *const c_int,
    idist: *const c_int,
    iseed: *mut c_int,
    d: *const MKL_Complex16,
    igrade: *const c_int,
    dl: *const MKL_Complex16,
    dr: *const MKL_Complex16,
    ipvtng: *const c_int,
    iwork: *const c_int,
    sparse: *const f64
)
{
    zlatm3_(
        retval,
        m,
        n,
        ii,
        j,
        isub,
        jsub,
        kl,
        ku,
        idist,
        iseed,
        d,
        igrade,
        dl,
        dr,
        ipvtng,
        iwork,
        sparse
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatm5_(
    prtype: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    ldb: *const c_int,
    c: *mut f64,
    ldc: *const c_int,
    d: *mut f64,
    ldd: *const c_int,
    e: *mut f64,
    lde: *const c_int,
    f: *mut f64,
    ldf: *const c_int,
    r: *mut f64,
    ldr: *const c_int,
    l: *mut f64,
    ldl: *const c_int,
    alpha: *const f64,
    qblcka: *const c_int,
    qblckb: *const c_int
)
{
    dlatm5_(
        prtype,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        r,
        ldr,
        l,
        ldl,
        alpha,
        qblcka,
        qblckb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatm5_(
    prtype: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    ldb: *const c_int,
    c: *mut f32,
    ldc: *const c_int,
    d: *mut f32,
    ldd: *const c_int,
    e: *mut f32,
    lde: *const c_int,
    f: *mut f32,
    ldf: *const c_int,
    r: *mut f32,
    ldr: *const c_int,
    l: *mut f32,
    ldl: *const c_int,
    alpha: *const f32,
    qblcka: *const c_int,
    qblckb: *const c_int
)
{
    slatm5_(
        prtype,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        r,
        ldr,
        l,
        ldl,
        alpha,
        qblcka,
        qblckb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatm5_(
    prtype: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    ldb: *const c_int,
    c: *mut MKL_Complex8,
    ldc: *const c_int,
    d: *mut MKL_Complex8,
    ldd: *const c_int,
    e: *mut MKL_Complex8,
    lde: *const c_int,
    f: *mut MKL_Complex8,
    ldf: *const c_int,
    r: *mut MKL_Complex8,
    ldr: *const c_int,
    l: *mut MKL_Complex8,
    ldl: *const c_int,
    alpha: *const f32,
    qblcka: *const c_int,
    qblckb: *const c_int
)
{
    clatm5_(
        prtype,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        r,
        ldr,
        l,
        ldl,
        alpha,
        qblcka,
        qblckb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatm5_(
    prtype: *const c_int,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    ldb: *const c_int,
    c: *mut MKL_Complex16,
    ldc: *const c_int,
    d: *mut MKL_Complex16,
    ldd: *const c_int,
    e: *mut MKL_Complex16,
    lde: *const c_int,
    f: *mut MKL_Complex16,
    ldf: *const c_int,
    r: *mut MKL_Complex16,
    ldr: *const c_int,
    l: *mut MKL_Complex16,
    ldl: *const c_int,
    alpha: *const f64,
    qblcka: *const c_int,
    qblckb: *const c_int
)
{
    zlatm5_(
        prtype,
        m,
        n,
        a,
        lda,
        b,
        ldb,
        c,
        ldc,
        d,
        ldd,
        e,
        lde,
        f,
        ldf,
        r,
        ldr,
        l,
        ldl,
        alpha,
        qblcka,
        qblckb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatm6_(
    type_: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    b: *mut f64,
    x: *mut f64,
    ldx: *const c_int,
    y: *mut f64,
    ldy: *const c_int,
    alpha: *const f64,
    beta: *const f64,
    wx: *const f64,
    wy: *const f64,
    s: *mut f64,
    dif: *mut f64
)
{
    dlatm6_(
        type_,
        n,
        a,
        lda,
        b,
        x,
        ldx,
        y,
        ldy,
        alpha,
        beta,
        wx,
        wy,
        s,
        dif
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatm6_(
    type_: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    b: *mut f32,
    x: *mut f32,
    ldx: *const c_int,
    y: *mut f32,
    ldy: *const c_int,
    alpha: *const f32,
    beta: *const f32,
    wx: *const f32,
    wy: *const f32,
    s: *mut f32,
    dif: *mut f32
)
{
    slatm6_(
        type_,
        n,
        a,
        lda,
        b,
        x,
        ldx,
        y,
        ldy,
        alpha,
        beta,
        wx,
        wy,
        s,
        dif
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatm6_(
    type_: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    b: *mut MKL_Complex8,
    x: *mut MKL_Complex8,
    ldx: *const c_int,
    y: *mut MKL_Complex8,
    ldy: *const c_int,
    alpha: *const MKL_Complex8,
    beta: *const MKL_Complex8,
    wx: *const MKL_Complex8,
    wy: *const MKL_Complex8,
    s: *mut f32,
    dif: *mut f32
)
{
    clatm6_(
        type_,
        n,
        a,
        lda,
        b,
        x,
        ldx,
        y,
        ldy,
        alpha,
        beta,
        wx,
        wy,
        s,
        dif
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatm6_(
    type_: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    b: *mut MKL_Complex16,
    x: *mut MKL_Complex16,
    ldx: *const c_int,
    y: *mut MKL_Complex16,
    ldy: *const c_int,
    alpha: *const MKL_Complex16,
    beta: *const MKL_Complex16,
    wx: *const MKL_Complex16,
    wy: *const MKL_Complex16,
    s: *mut f64,
    dif: *mut f64
)
{
    zlatm6_(
        type_,
        n,
        a,
        lda,
        b,
        x,
        ldx,
        y,
        ldy,
        alpha,
        beta,
        wx,
        wy,
        s,
        dif
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatme_(
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    d: *mut f64,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const f64,
    ei: *const c_char,
    rsign: *const c_char,
    upper: *const c_char,
    sim: *const c_char,
    ds: *mut f64,
    modes: *const c_int,
    conds: *const f64,
    kl: *const c_int,
    ku: *const c_int,
    anorm: *const f64,
    a: *mut f64,
    lda: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlatme_(
        n,
        dist,
        iseed,
        d,
        mode,
        cond,
        dmax,
        ei,
        rsign,
        upper,
        sim,
        ds,
        modes,
        conds,
        kl,
        ku,
        anorm,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatme_(
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    d: *mut f32,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const f32,
    ei: *const c_char,
    rsign: *const c_char,
    upper: *const c_char,
    sim: *const c_char,
    ds: *mut f32,
    modes: *const c_int,
    conds: *const f32,
    kl: *const c_int,
    ku: *const c_int,
    anorm: *const f32,
    a: *mut f32,
    lda: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slatme_(
        n,
        dist,
        iseed,
        d,
        mode,
        cond,
        dmax,
        ei,
        rsign,
        upper,
        sim,
        ds,
        modes,
        conds,
        kl,
        ku,
        anorm,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatme_(
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    d: *mut MKL_Complex8,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const MKL_Complex8,
    rsign: *const c_char,
    upper: *const c_char,
    sim: *const c_char,
    ds: *mut f32,
    modes: *const c_int,
    conds: *const f32,
    kl: *const c_int,
    ku: *const c_int,
    anorm: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clatme_(
        n,
        dist,
        iseed,
        d,
        mode,
        cond,
        dmax,
        rsign,
        upper,
        sim,
        ds,
        modes,
        conds,
        kl,
        ku,
        anorm,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatme_(
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    d: *mut MKL_Complex16,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const MKL_Complex16,
    rsign: *const c_char,
    upper: *const c_char,
    sim: *const c_char,
    ds: *mut f64,
    modes: *const c_int,
    conds: *const f64,
    kl: *const c_int,
    ku: *const c_int,
    anorm: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlatme_(
        n,
        dist,
        iseed,
        d,
        mode,
        cond,
        dmax,
        rsign,
        upper,
        sim,
        ds,
        modes,
        conds,
        kl,
        ku,
        anorm,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatmr_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut f64,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const f64,
    rsign: *const c_char,
    grade: *const c_char,
    dl: *mut f64,
    model: *const c_int,
    condl: *const f64,
    dr: *mut f64,
    moder: *const c_int,
    condr: *const f64,
    pivtng: *const c_char,
    ipivot: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    sparse: *const f64,
    anorm: *const f64,
    pack: *const c_char,
    a: *mut f64,
    lda: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    dlatmr_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        rsign,
        grade,
        dl,
        model,
        condl,
        dr,
        moder,
        condr,
        pivtng,
        ipivot,
        kl,
        ku,
        sparse,
        anorm,
        pack,
        a,
        lda,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatmr_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *const f32,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const f32,
    rsign: *const c_char,
    grade: *const c_char,
    dl: *mut f32,
    model: *const c_int,
    condl: *const f32,
    dr: *mut f32,
    moder: *const c_int,
    condr: *const f32,
    pivtng: *const c_char,
    ipivot: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    sparse: *const f32,
    anorm: *const f32,
    pack: *const c_char,
    a: *mut f32,
    lda: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    slatmr_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        rsign,
        grade,
        dl,
        model,
        condl,
        dr,
        moder,
        condr,
        pivtng,
        ipivot,
        kl,
        ku,
        sparse,
        anorm,
        pack,
        a,
        lda,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatmr_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut MKL_Complex8,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const MKL_Complex8,
    rsign: *const c_char,
    grade: *const c_char,
    dl: *mut MKL_Complex8,
    model: *const c_int,
    condl: *const f32,
    dr: *mut MKL_Complex8,
    moder: *const c_int,
    condr: *const f32,
    pivtng: *const c_char,
    ipivot: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    sparse: *const f32,
    anorm: *const f32,
    pack: *const c_char,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    clatmr_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        rsign,
        grade,
        dl,
        model,
        condl,
        dr,
        moder,
        condr,
        pivtng,
        ipivot,
        kl,
        ku,
        sparse,
        anorm,
        pack,
        a,
        lda,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatmr_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut MKL_Complex16,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const MKL_Complex16,
    rsign: *const c_char,
    grade: *const c_char,
    dl: *mut MKL_Complex16,
    model: *const c_int,
    condl: *const f64,
    dr: *mut MKL_Complex16,
    moder: *const c_int,
    condr: *const f64,
    pivtng: *const c_char,
    ipivot: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    sparse: *const f64,
    anorm: *const f64,
    pack: *const c_char,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iwork: *mut c_int,
    info: *mut c_int
)
{
    zlatmr_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        rsign,
        grade,
        dl,
        model,
        condl,
        dr,
        moder,
        condr,
        pivtng,
        ipivot,
        kl,
        ku,
        sparse,
        anorm,
        pack,
        a,
        lda,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatms_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut f64,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const f64,
    kl: *const c_int,
    ku: *const c_int,
    pack: *const c_char,
    a: *mut f64,
    lda: *const c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatms_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut f32,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const f32,
    kl: *const c_int,
    ku: *const c_int,
    pack: *const c_char,
    a: *mut f32,
    lda: *const c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatms_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut f32,
    mode: *const c_int,
    cond: *const f32,
    dmax: *const f32,
    kl: *const c_int,
    ku: *const c_int,
    pack: *const c_char,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatms_(
    m: *const c_int,
    n: *const c_int,
    dist: *const c_char,
    iseed: *mut c_int,
    sym: *const c_char,
    d: *mut f64,
    mode: *const c_int,
    cond: *const f64,
    dmax: *const f64,
    kl: *const c_int,
    ku: *const c_int,
    pack: *const c_char,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        d,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        a,
        lda,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlakf2_(
    m: *const c_int,
    n: *const c_int,
    a: *const f64,
    lda: *const c_int,
    b: *const f64,
    d: *const f64,
    e: *const f64,
    z: *mut f64,
    ldz: *const c_int
)
{
    dlakf2_(
        m,
        n,
        a,
        lda,
        b,
        d,
        e,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slakf2_(
    m: *const c_int,
    n: *const c_int,
    a: *const f32,
    lda: *const c_int,
    b: *const f32,
    d: *const f32,
    e: *const f32,
    z: *mut f32,
    ldz: *const c_int
)
{
    slakf2_(
        m,
        n,
        a,
        lda,
        b,
        d,
        e,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clakf2_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex8,
    lda: *const c_int,
    b: *const MKL_Complex8,
    d: *const MKL_Complex8,
    e: *const MKL_Complex8,
    z: *mut MKL_Complex8,
    ldz: *const c_int
)
{
    clakf2_(
        m,
        n,
        a,
        lda,
        b,
        d,
        e,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlakf2_(
    m: *const c_int,
    n: *const c_int,
    a: *const MKL_Complex16,
    lda: *const c_int,
    b: *const MKL_Complex16,
    d: *const MKL_Complex16,
    e: *const MKL_Complex16,
    z: *mut MKL_Complex16,
    ldz: *const c_int
)
{
    zlakf2_(
        m,
        n,
        a,
        lda,
        b,
        d,
        e,
        z,
        ldz
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarge_(
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlarge_(
        n,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarge_(
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slarge_(
        n,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarge_(
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clarge_(
        n,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarge_(
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlarge_(
        n,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarnd_(
    idist: *const c_int,
    iseed: *mut c_int
) -> f64
{
    dlarnd_(
        idist,
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarnd_(
    idist: *const c_int,
    iseed: *mut c_int
) -> f32
{
    slarnd_(
        idist,
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarnd_(
    retval: *mut MKL_Complex8,
    idist: *const c_int,
    iseed: *mut c_int
)
{
    clarnd_(
        retval,
        idist,
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarnd_(
    retval: *mut MKL_Complex16,
    idist: *const c_int,
    iseed: *mut c_int
)
{
    zlarnd_(
        retval,
        idist,
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaror_(
    side: *const c_char,
    init: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f64,
    lda: *const c_int,
    iseed: *mut c_int,
    x: *mut f64,
    info: *mut c_int
)
{
    dlaror_(
        side,
        init,
        m,
        n,
        a,
        lda,
        iseed,
        x,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaror_(
    side: *const c_char,
    init: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut f32,
    lda: *const c_int,
    iseed: *mut c_int,
    x: *mut f32,
    info: *mut c_int
)
{
    slaror_(
        side,
        init,
        m,
        n,
        a,
        lda,
        iseed,
        x,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claror_(
    side: *const c_char,
    init: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iseed: *mut c_int,
    x: *mut MKL_Complex8,
    info: *mut c_int
)
{
    claror_(
        side,
        init,
        m,
        n,
        a,
        lda,
        iseed,
        x,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaror_(
    side: *const c_char,
    init: *const c_char,
    m: *const c_int,
    n: *const c_int,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iseed: *mut c_int,
    x: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlaror_(
        side,
        init,
        m,
        n,
        a,
        lda,
        iseed,
        x,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarot_(
    lrows: *const c_int,
    lleft: *const c_int,
    lright: *const c_int,
    nl: *const c_int,
    c: *const f64,
    s: *const f64,
    a: *mut f64,
    lda: *const c_int,
    xleft: *mut f64,
    xright: *mut f64
)
{
    dlarot_(
        lrows,
        lleft,
        lright,
        nl,
        c,
        s,
        a,
        lda,
        xleft,
        xright
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarot_(
    lrows: *const c_int,
    lleft: *const c_int,
    lright: *const c_int,
    nl: *const c_int,
    c: *const f32,
    s: *const f32,
    a: *mut f32,
    lda: *const c_int,
    xleft: *mut f32,
    xright: *mut f32
)
{
    slarot_(
        lrows,
        lleft,
        lright,
        nl,
        c,
        s,
        a,
        lda,
        xleft,
        xright
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarot_(
    lrows: *const c_int,
    lleft: *const c_int,
    lright: *mut c_int,
    nl: *const c_int,
    c: *const MKL_Complex8,
    s: *const MKL_Complex8,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    xleft: *mut MKL_Complex8,
    xright: *mut MKL_Complex8
)
{
    clarot_(
        lrows,
        lleft,
        lright,
        nl,
        c,
        s,
        a,
        lda,
        xleft,
        xright
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarot_(
    lrows: *const c_int,
    lleft: *const c_int,
    lright: *const c_int,
    nl: *const c_int,
    c: *const MKL_Complex16,
    s: *const MKL_Complex16,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    xleft: *mut MKL_Complex16,
    xright: *mut MKL_Complex16
)
{
    zlarot_(
        lrows,
        lleft,
        lright,
        nl,
        c,
        s,
        a,
        lda,
        xleft,
        xright
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaran_(
    iseed: *mut c_int
) -> f64
{
    dlaran_(
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaran_(
    iseed: *mut c_int
) -> f32
{
    slaran_(
        iseed
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagge_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    d: *const f64,
    a: *mut f64,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlagge_(
        m,
        n,
        kl,
        ku,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagge_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    d: *const f32,
    a: *mut f32,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slagge_(
        m,
        n,
        kl,
        ku,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clagge_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    d: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clagge_(
        m,
        n,
        kl,
        ku,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlagge_(
    m: *const c_int,
    n: *const c_int,
    kl: *const c_int,
    ku: *const c_int,
    d: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlagge_(
        m,
        n,
        kl,
        ku,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clagsy_(
    n: *const c_int,
    k: *const c_int,
    d: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    clagsy_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagsy_(
    n: *const c_int,
    k: *const c_int,
    d: *const f64,
    a: *mut f64,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f64,
    info: *mut c_int
)
{
    dlagsy_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagsy_(
    n: *const c_int,
    k: *const c_int,
    d: *const f32,
    a: *mut f32,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut f32,
    info: *mut c_int
)
{
    slagsy_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlagsy_(
    n: *const c_int,
    k: *const c_int,
    d: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlagsy_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claghe_(
    n: *const c_int,
    k: *const c_int,
    d: *const f32,
    a: *mut MKL_Complex8,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex8,
    info: *mut c_int
)
{
    claghe_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaghe_(
    n: *const c_int,
    k: *const c_int,
    d: *const f64,
    a: *mut MKL_Complex16,
    lda: *const c_int,
    iseed: *mut c_int,
    work: *mut MKL_Complex16,
    info: *mut c_int
)
{
    zlaghe_(
        n,
        k,
        d,
        a,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cspffrt2(
    ap: *mut MKL_Complex8,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex8,
    work2: *mut MKL_Complex8
)
{
    mkl_cspffrt2(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cspffrt2_(
    ap: *mut MKL_Complex8,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex8,
    work2: *mut MKL_Complex8
)
{
    mkl_cspffrt2_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cspffrtx(
    ap: *mut MKL_Complex8,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex8,
    work2: *mut MKL_Complex8
)
{
    mkl_cspffrtx(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_cspffrtx_(
    ap: *mut MKL_Complex8,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex8,
    work2: *mut MKL_Complex8
)
{
    mkl_cspffrtx_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dspffrt2(
    ap: *mut f64,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f64,
    work2: *mut f64
)
{
    mkl_dspffrt2(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dspffrt2_(
    ap: *mut f64,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f64,
    work2: *mut f64
)
{
    mkl_dspffrt2_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dspffrtx(
    ap: *mut f64,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f64,
    work2: *mut f64
)
{
    mkl_dspffrtx(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_dspffrtx_(
    ap: *mut f64,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f64,
    work2: *mut f64
)
{
    mkl_dspffrtx_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sspffrt2(
    ap: *mut f32,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f32,
    work2: *mut f32
)
{
    mkl_sspffrt2(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sspffrt2_(
    ap: *mut f32,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f32,
    work2: *mut f32
)
{
    mkl_sspffrt2_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sspffrtx(
    ap: *mut f32,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f32,
    work2: *mut f32
)
{
    mkl_sspffrtx(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_sspffrtx_(
    ap: *mut f32,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut f32,
    work2: *mut f32
)
{
    mkl_sspffrtx_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zspffrt2(
    ap: *mut MKL_Complex16,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex16,
    work2: *mut MKL_Complex16
)
{
    mkl_zspffrt2(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zspffrt2_(
    ap: *mut MKL_Complex16,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex16,
    work2: *mut MKL_Complex16
)
{
    mkl_zspffrt2_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zspffrtx(
    ap: *mut MKL_Complex16,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex16,
    work2: *mut MKL_Complex16
)
{
    mkl_zspffrtx(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_zspffrtx_(
    ap: *mut MKL_Complex16,
    n: *const c_int,
    ncolm: *const c_int,
    work: *mut MKL_Complex16,
    work2: *mut MKL_Complex16
)
{
    mkl_zspffrtx_(
        ap,
        n,
        ncolm,
        work,
        work2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_progress(
    thread: *mut c_int,
    step: *mut c_int,
    stage: *mut c_char,
    lstage: c_int
) -> c_int
{
    mkl_progress(
        thread,
        step,
        stage,
        lstage
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_mkl_progress_(
    thread: *mut c_int,
    step: *mut c_int,
    stage: *mut c_char,
    lstage: c_int
) -> c_int
{
    mkl_progress_(
        thread,
        step,
        stage,
        lstage
    )
}

    