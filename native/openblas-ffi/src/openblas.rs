/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct __BindgenBitfieldUnit<Storage> {
    storage: Storage,
}
impl<Storage> __BindgenBitfieldUnit<Storage> {
    #[inline]
    pub const fn new(storage: Storage) -> Self {
        Self { storage }
    }
}
impl<Storage> __BindgenBitfieldUnit<Storage>
where
    Storage: AsRef<[u8]> + AsMut<[u8]>,
{
    #[inline]
    fn extract_bit(byte: u8, index: usize) -> bool {
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        byte & mask == mask
    }
    #[inline]
    pub fn get_bit(&self, index: usize) -> bool {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = self.storage.as_ref()[byte_index];
        Self::extract_bit(byte, index)
    }
    #[inline]
    pub unsafe fn raw_get_bit(this: *const Self, index: usize) -> bool {
        debug_assert!(index / 8 < core::mem::size_of::<Storage>());
        let byte_index = index / 8;
        let byte = *(core::ptr::addr_of!((*this).storage) as *const u8).offset(byte_index as isize);
        Self::extract_bit(byte, index)
    }
    #[inline]
    fn change_bit(byte: u8, index: usize, val: bool) -> u8 {
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        if val {
            byte | mask
        } else {
            byte & !mask
        }
    }
    #[inline]
    pub fn set_bit(&mut self, index: usize, val: bool) {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = &mut self.storage.as_mut()[byte_index];
        *byte = Self::change_bit(*byte, index, val);
    }
    #[inline]
    pub unsafe fn raw_set_bit(this: *mut Self, index: usize, val: bool) {
        debug_assert!(index / 8 < core::mem::size_of::<Storage>());
        let byte_index = index / 8;
        let byte =
            (core::ptr::addr_of_mut!((*this).storage) as *mut u8).offset(byte_index as isize);
        *byte = Self::change_bit(*byte, index, val);
    }
    #[inline]
    pub fn get(&self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if self.get_bit(i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub unsafe fn raw_get(this: *const Self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < core::mem::size_of::<Storage>());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= core::mem::size_of::<Storage>());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if Self::raw_get_bit(this, i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub fn set(&mut self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            self.set_bit(index + bit_offset, val_bit_is_set);
        }
    }
    #[inline]
    pub unsafe fn raw_set(this: *mut Self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < core::mem::size_of::<Storage>());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= core::mem::size_of::<Storage>());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            Self::raw_set_bit(this, index + bit_offset, val_bit_is_set);
        }
    }
}
pub const OPENBLAS_SEQUENTIAL: u32 = 0;
pub const OPENBLAS_THREAD: u32 = 1;
pub const OPENBLAS_OPENMP: u32 = 2;
pub const __WORDSIZE: u32 = 64;
pub const __has_safe_buffers: u32 = 1;
pub const __DARWIN_ONLY_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const __DARWIN_ONLY_VERS_1050: u32 = 1;
pub const __DARWIN_UNIX03: u32 = 1;
pub const __DARWIN_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_VERS_1050: u32 = 1;
pub const __DARWIN_NON_CANCELABLE: u32 = 0;
pub const __DARWIN_SUF_EXTSN: &[u8; 14] = b"$DARWIN_EXTSN\0";
pub const __DARWIN_C_ANSI: u32 = 4096;
pub const __DARWIN_C_FULL: u32 = 900000;
pub const __DARWIN_C_LEVEL: u32 = 900000;
pub const __STDC_WANT_LIB_EXT1__: u32 = 1;
pub const __DARWIN_NO_LONG_LONG: u32 = 0;
pub const _DARWIN_FEATURE_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_VERS_1050: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: u32 = 3;
pub const __has_ptrcheck: u32 = 0;
pub const __has_bounds_safety_attributes: u32 = 0;
pub const USE_CLANG_TYPES: u32 = 0;
pub const __PTHREAD_SIZE__: u32 = 8176;
pub const __PTHREAD_ATTR_SIZE__: u32 = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: u32 = 8;
pub const __PTHREAD_MUTEX_SIZE__: u32 = 56;
pub const __PTHREAD_CONDATTR_SIZE__: u32 = 8;
pub const __PTHREAD_COND_SIZE__: u32 = 40;
pub const __PTHREAD_ONCE_SIZE__: u32 = 8;
pub const __PTHREAD_RWLOCK_SIZE__: u32 = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: u32 = 16;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const INT64_MAX: u64 = 9223372036854775807;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT64_MIN: i64 = -9223372036854775808;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const UINT64_MAX: i32 = -1;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST64_MIN: i64 = -9223372036854775808;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const INT_LEAST64_MAX: u64 = 9223372036854775807;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const UINT_LEAST64_MAX: i32 = -1;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i32 = -32768;
pub const INT_FAST32_MIN: i32 = -2147483648;
pub const INT_FAST64_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u32 = 32767;
pub const INT_FAST32_MAX: u32 = 2147483647;
pub const INT_FAST64_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: u32 = 65535;
pub const UINT_FAST32_MAX: u32 = 4294967295;
pub const UINT_FAST64_MAX: i32 = -1;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const UINTPTR_MAX: i32 = -1;
pub const SIZE_MAX: i32 = -1;
pub const RSIZE_MAX: i32 = -1;
pub const WINT_MIN: i32 = -2147483648;
pub const WINT_MAX: u32 = 2147483647;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const BFLOAT16CONVERSION: u32 = 1;
pub const __API_TO_BE_DEPRECATED: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACOSAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_IOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_IOSAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACCATALYST: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACCATALYSTAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_WATCHOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_WATCHOSAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_TVOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_TVOSAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_DRIVERKIT: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_VISIONOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_VISIONOSAPPLICATIONEXTENSION: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_KERNELKIT: u32 = 100000;
pub const __MAC_10_0: u32 = 1000;
pub const __MAC_10_1: u32 = 1010;
pub const __MAC_10_2: u32 = 1020;
pub const __MAC_10_3: u32 = 1030;
pub const __MAC_10_4: u32 = 1040;
pub const __MAC_10_5: u32 = 1050;
pub const __MAC_10_6: u32 = 1060;
pub const __MAC_10_7: u32 = 1070;
pub const __MAC_10_8: u32 = 1080;
pub const __MAC_10_9: u32 = 1090;
pub const __MAC_10_10: u32 = 101000;
pub const __MAC_10_10_2: u32 = 101002;
pub const __MAC_10_10_3: u32 = 101003;
pub const __MAC_10_11: u32 = 101100;
pub const __MAC_10_11_2: u32 = 101102;
pub const __MAC_10_11_3: u32 = 101103;
pub const __MAC_10_11_4: u32 = 101104;
pub const __MAC_10_12: u32 = 101200;
pub const __MAC_10_12_1: u32 = 101201;
pub const __MAC_10_12_2: u32 = 101202;
pub const __MAC_10_12_4: u32 = 101204;
pub const __MAC_10_13: u32 = 101300;
pub const __MAC_10_13_1: u32 = 101301;
pub const __MAC_10_13_2: u32 = 101302;
pub const __MAC_10_13_4: u32 = 101304;
pub const __MAC_10_14: u32 = 101400;
pub const __MAC_10_14_1: u32 = 101401;
pub const __MAC_10_14_4: u32 = 101404;
pub const __MAC_10_14_5: u32 = 101405;
pub const __MAC_10_14_6: u32 = 101406;
pub const __MAC_10_15: u32 = 101500;
pub const __MAC_10_15_1: u32 = 101501;
pub const __MAC_10_15_4: u32 = 101504;
pub const __MAC_10_16: u32 = 101600;
pub const __MAC_11_0: u32 = 110000;
pub const __MAC_11_1: u32 = 110100;
pub const __MAC_11_3: u32 = 110300;
pub const __MAC_11_4: u32 = 110400;
pub const __MAC_11_5: u32 = 110500;
pub const __MAC_11_6: u32 = 110600;
pub const __MAC_12_0: u32 = 120000;
pub const __MAC_12_1: u32 = 120100;
pub const __MAC_12_2: u32 = 120200;
pub const __MAC_12_3: u32 = 120300;
pub const __MAC_12_4: u32 = 120400;
pub const __MAC_12_5: u32 = 120500;
pub const __MAC_12_6: u32 = 120600;
pub const __MAC_12_7: u32 = 120700;
pub const __MAC_13_0: u32 = 130000;
pub const __MAC_13_1: u32 = 130100;
pub const __MAC_13_2: u32 = 130200;
pub const __MAC_13_3: u32 = 130300;
pub const __MAC_13_4: u32 = 130400;
pub const __MAC_13_5: u32 = 130500;
pub const __MAC_13_6: u32 = 130600;
pub const __MAC_13_7: u32 = 130700;
pub const __MAC_14_0: u32 = 140000;
pub const __MAC_14_1: u32 = 140100;
pub const __MAC_14_2: u32 = 140200;
pub const __MAC_14_3: u32 = 140300;
pub const __MAC_14_4: u32 = 140400;
pub const __MAC_14_5: u32 = 140500;
pub const __MAC_14_6: u32 = 140600;
pub const __MAC_14_7: u32 = 140700;
pub const __MAC_15_0: u32 = 150000;
pub const __MAC_15_1: u32 = 150100;
pub const __MAC_15_2: u32 = 150200;
pub const __MAC_15_3: u32 = 150300;
pub const __MAC_15_4: u32 = 150400;
pub const __IPHONE_2_0: u32 = 20000;
pub const __IPHONE_2_1: u32 = 20100;
pub const __IPHONE_2_2: u32 = 20200;
pub const __IPHONE_3_0: u32 = 30000;
pub const __IPHONE_3_1: u32 = 30100;
pub const __IPHONE_3_2: u32 = 30200;
pub const __IPHONE_4_0: u32 = 40000;
pub const __IPHONE_4_1: u32 = 40100;
pub const __IPHONE_4_2: u32 = 40200;
pub const __IPHONE_4_3: u32 = 40300;
pub const __IPHONE_5_0: u32 = 50000;
pub const __IPHONE_5_1: u32 = 50100;
pub const __IPHONE_6_0: u32 = 60000;
pub const __IPHONE_6_1: u32 = 60100;
pub const __IPHONE_7_0: u32 = 70000;
pub const __IPHONE_7_1: u32 = 70100;
pub const __IPHONE_8_0: u32 = 80000;
pub const __IPHONE_8_1: u32 = 80100;
pub const __IPHONE_8_2: u32 = 80200;
pub const __IPHONE_8_3: u32 = 80300;
pub const __IPHONE_8_4: u32 = 80400;
pub const __IPHONE_9_0: u32 = 90000;
pub const __IPHONE_9_1: u32 = 90100;
pub const __IPHONE_9_2: u32 = 90200;
pub const __IPHONE_9_3: u32 = 90300;
pub const __IPHONE_10_0: u32 = 100000;
pub const __IPHONE_10_1: u32 = 100100;
pub const __IPHONE_10_2: u32 = 100200;
pub const __IPHONE_10_3: u32 = 100300;
pub const __IPHONE_11_0: u32 = 110000;
pub const __IPHONE_11_1: u32 = 110100;
pub const __IPHONE_11_2: u32 = 110200;
pub const __IPHONE_11_3: u32 = 110300;
pub const __IPHONE_11_4: u32 = 110400;
pub const __IPHONE_12_0: u32 = 120000;
pub const __IPHONE_12_1: u32 = 120100;
pub const __IPHONE_12_2: u32 = 120200;
pub const __IPHONE_12_3: u32 = 120300;
pub const __IPHONE_12_4: u32 = 120400;
pub const __IPHONE_13_0: u32 = 130000;
pub const __IPHONE_13_1: u32 = 130100;
pub const __IPHONE_13_2: u32 = 130200;
pub const __IPHONE_13_3: u32 = 130300;
pub const __IPHONE_13_4: u32 = 130400;
pub const __IPHONE_13_5: u32 = 130500;
pub const __IPHONE_13_6: u32 = 130600;
pub const __IPHONE_13_7: u32 = 130700;
pub const __IPHONE_14_0: u32 = 140000;
pub const __IPHONE_14_1: u32 = 140100;
pub const __IPHONE_14_2: u32 = 140200;
pub const __IPHONE_14_3: u32 = 140300;
pub const __IPHONE_14_5: u32 = 140500;
pub const __IPHONE_14_4: u32 = 140400;
pub const __IPHONE_14_6: u32 = 140600;
pub const __IPHONE_14_7: u32 = 140700;
pub const __IPHONE_14_8: u32 = 140800;
pub const __IPHONE_15_0: u32 = 150000;
pub const __IPHONE_15_1: u32 = 150100;
pub const __IPHONE_15_2: u32 = 150200;
pub const __IPHONE_15_3: u32 = 150300;
pub const __IPHONE_15_4: u32 = 150400;
pub const __IPHONE_15_5: u32 = 150500;
pub const __IPHONE_15_6: u32 = 150600;
pub const __IPHONE_15_7: u32 = 150700;
pub const __IPHONE_15_8: u32 = 150800;
pub const __IPHONE_16_0: u32 = 160000;
pub const __IPHONE_16_1: u32 = 160100;
pub const __IPHONE_16_2: u32 = 160200;
pub const __IPHONE_16_3: u32 = 160300;
pub const __IPHONE_16_4: u32 = 160400;
pub const __IPHONE_16_5: u32 = 160500;
pub const __IPHONE_16_6: u32 = 160600;
pub const __IPHONE_16_7: u32 = 160700;
pub const __IPHONE_17_0: u32 = 170000;
pub const __IPHONE_17_1: u32 = 170100;
pub const __IPHONE_17_2: u32 = 170200;
pub const __IPHONE_17_3: u32 = 170300;
pub const __IPHONE_17_4: u32 = 170400;
pub const __IPHONE_17_5: u32 = 170500;
pub const __IPHONE_17_6: u32 = 170600;
pub const __IPHONE_17_7: u32 = 170700;
pub const __IPHONE_18_0: u32 = 180000;
pub const __IPHONE_18_1: u32 = 180100;
pub const __IPHONE_18_2: u32 = 180200;
pub const __IPHONE_18_3: u32 = 180300;
pub const __IPHONE_18_4: u32 = 180400;
pub const __WATCHOS_1_0: u32 = 10000;
pub const __WATCHOS_2_0: u32 = 20000;
pub const __WATCHOS_2_1: u32 = 20100;
pub const __WATCHOS_2_2: u32 = 20200;
pub const __WATCHOS_3_0: u32 = 30000;
pub const __WATCHOS_3_1: u32 = 30100;
pub const __WATCHOS_3_1_1: u32 = 30101;
pub const __WATCHOS_3_2: u32 = 30200;
pub const __WATCHOS_4_0: u32 = 40000;
pub const __WATCHOS_4_1: u32 = 40100;
pub const __WATCHOS_4_2: u32 = 40200;
pub const __WATCHOS_4_3: u32 = 40300;
pub const __WATCHOS_5_0: u32 = 50000;
pub const __WATCHOS_5_1: u32 = 50100;
pub const __WATCHOS_5_2: u32 = 50200;
pub const __WATCHOS_5_3: u32 = 50300;
pub const __WATCHOS_6_0: u32 = 60000;
pub const __WATCHOS_6_1: u32 = 60100;
pub const __WATCHOS_6_2: u32 = 60200;
pub const __WATCHOS_7_0: u32 = 70000;
pub const __WATCHOS_7_1: u32 = 70100;
pub const __WATCHOS_7_2: u32 = 70200;
pub const __WATCHOS_7_3: u32 = 70300;
pub const __WATCHOS_7_4: u32 = 70400;
pub const __WATCHOS_7_5: u32 = 70500;
pub const __WATCHOS_7_6: u32 = 70600;
pub const __WATCHOS_8_0: u32 = 80000;
pub const __WATCHOS_8_1: u32 = 80100;
pub const __WATCHOS_8_3: u32 = 80300;
pub const __WATCHOS_8_4: u32 = 80400;
pub const __WATCHOS_8_5: u32 = 80500;
pub const __WATCHOS_8_6: u32 = 80600;
pub const __WATCHOS_8_7: u32 = 80700;
pub const __WATCHOS_8_8: u32 = 80800;
pub const __WATCHOS_9_0: u32 = 90000;
pub const __WATCHOS_9_1: u32 = 90100;
pub const __WATCHOS_9_2: u32 = 90200;
pub const __WATCHOS_9_3: u32 = 90300;
pub const __WATCHOS_9_4: u32 = 90400;
pub const __WATCHOS_9_5: u32 = 90500;
pub const __WATCHOS_9_6: u32 = 90600;
pub const __WATCHOS_10_0: u32 = 100000;
pub const __WATCHOS_10_1: u32 = 100100;
pub const __WATCHOS_10_2: u32 = 100200;
pub const __WATCHOS_10_3: u32 = 100300;
pub const __WATCHOS_10_4: u32 = 100400;
pub const __WATCHOS_10_5: u32 = 100500;
pub const __WATCHOS_10_6: u32 = 100600;
pub const __WATCHOS_10_7: u32 = 100700;
pub const __WATCHOS_11_0: u32 = 110000;
pub const __WATCHOS_11_1: u32 = 110100;
pub const __WATCHOS_11_2: u32 = 110200;
pub const __WATCHOS_11_3: u32 = 110300;
pub const __WATCHOS_11_4: u32 = 110400;
pub const __TVOS_9_0: u32 = 90000;
pub const __TVOS_9_1: u32 = 90100;
pub const __TVOS_9_2: u32 = 90200;
pub const __TVOS_10_0: u32 = 100000;
pub const __TVOS_10_0_1: u32 = 100001;
pub const __TVOS_10_1: u32 = 100100;
pub const __TVOS_10_2: u32 = 100200;
pub const __TVOS_11_0: u32 = 110000;
pub const __TVOS_11_1: u32 = 110100;
pub const __TVOS_11_2: u32 = 110200;
pub const __TVOS_11_3: u32 = 110300;
pub const __TVOS_11_4: u32 = 110400;
pub const __TVOS_12_0: u32 = 120000;
pub const __TVOS_12_1: u32 = 120100;
pub const __TVOS_12_2: u32 = 120200;
pub const __TVOS_12_3: u32 = 120300;
pub const __TVOS_12_4: u32 = 120400;
pub const __TVOS_13_0: u32 = 130000;
pub const __TVOS_13_2: u32 = 130200;
pub const __TVOS_13_3: u32 = 130300;
pub const __TVOS_13_4: u32 = 130400;
pub const __TVOS_14_0: u32 = 140000;
pub const __TVOS_14_1: u32 = 140100;
pub const __TVOS_14_2: u32 = 140200;
pub const __TVOS_14_3: u32 = 140300;
pub const __TVOS_14_5: u32 = 140500;
pub const __TVOS_14_6: u32 = 140600;
pub const __TVOS_14_7: u32 = 140700;
pub const __TVOS_15_0: u32 = 150000;
pub const __TVOS_15_1: u32 = 150100;
pub const __TVOS_15_2: u32 = 150200;
pub const __TVOS_15_3: u32 = 150300;
pub const __TVOS_15_4: u32 = 150400;
pub const __TVOS_15_5: u32 = 150500;
pub const __TVOS_15_6: u32 = 150600;
pub const __TVOS_16_0: u32 = 160000;
pub const __TVOS_16_1: u32 = 160100;
pub const __TVOS_16_2: u32 = 160200;
pub const __TVOS_16_3: u32 = 160300;
pub const __TVOS_16_4: u32 = 160400;
pub const __TVOS_16_5: u32 = 160500;
pub const __TVOS_16_6: u32 = 160600;
pub const __TVOS_17_0: u32 = 170000;
pub const __TVOS_17_1: u32 = 170100;
pub const __TVOS_17_2: u32 = 170200;
pub const __TVOS_17_3: u32 = 170300;
pub const __TVOS_17_4: u32 = 170400;
pub const __TVOS_17_5: u32 = 170500;
pub const __TVOS_17_6: u32 = 170600;
pub const __TVOS_18_0: u32 = 180000;
pub const __TVOS_18_1: u32 = 180100;
pub const __TVOS_18_2: u32 = 180200;
pub const __TVOS_18_3: u32 = 180300;
pub const __TVOS_18_4: u32 = 180400;
pub const __BRIDGEOS_2_0: u32 = 20000;
pub const __BRIDGEOS_3_0: u32 = 30000;
pub const __BRIDGEOS_3_1: u32 = 30100;
pub const __BRIDGEOS_3_4: u32 = 30400;
pub const __BRIDGEOS_4_0: u32 = 40000;
pub const __BRIDGEOS_4_1: u32 = 40100;
pub const __BRIDGEOS_5_0: u32 = 50000;
pub const __BRIDGEOS_5_1: u32 = 50100;
pub const __BRIDGEOS_5_3: u32 = 50300;
pub const __BRIDGEOS_6_0: u32 = 60000;
pub const __BRIDGEOS_6_2: u32 = 60200;
pub const __BRIDGEOS_6_4: u32 = 60400;
pub const __BRIDGEOS_6_5: u32 = 60500;
pub const __BRIDGEOS_6_6: u32 = 60600;
pub const __BRIDGEOS_7_0: u32 = 70000;
pub const __BRIDGEOS_7_1: u32 = 70100;
pub const __BRIDGEOS_7_2: u32 = 70200;
pub const __BRIDGEOS_7_3: u32 = 70300;
pub const __BRIDGEOS_7_4: u32 = 70400;
pub const __BRIDGEOS_7_6: u32 = 70600;
pub const __BRIDGEOS_8_0: u32 = 80000;
pub const __BRIDGEOS_8_1: u32 = 80100;
pub const __BRIDGEOS_8_2: u32 = 80200;
pub const __BRIDGEOS_8_3: u32 = 80300;
pub const __BRIDGEOS_8_4: u32 = 80400;
pub const __BRIDGEOS_8_5: u32 = 80500;
pub const __BRIDGEOS_8_6: u32 = 80600;
pub const __BRIDGEOS_9_0: u32 = 90000;
pub const __BRIDGEOS_9_1: u32 = 90100;
pub const __BRIDGEOS_9_2: u32 = 90200;
pub const __BRIDGEOS_9_3: u32 = 90300;
pub const __BRIDGEOS_9_4: u32 = 90400;
pub const __DRIVERKIT_19_0: u32 = 190000;
pub const __DRIVERKIT_20_0: u32 = 200000;
pub const __DRIVERKIT_21_0: u32 = 210000;
pub const __DRIVERKIT_22_0: u32 = 220000;
pub const __DRIVERKIT_22_4: u32 = 220400;
pub const __DRIVERKIT_22_5: u32 = 220500;
pub const __DRIVERKIT_22_6: u32 = 220600;
pub const __DRIVERKIT_23_0: u32 = 230000;
pub const __DRIVERKIT_23_1: u32 = 230100;
pub const __DRIVERKIT_23_2: u32 = 230200;
pub const __DRIVERKIT_23_3: u32 = 230300;
pub const __DRIVERKIT_23_4: u32 = 230400;
pub const __DRIVERKIT_23_5: u32 = 230500;
pub const __DRIVERKIT_23_6: u32 = 230600;
pub const __DRIVERKIT_24_0: u32 = 240000;
pub const __DRIVERKIT_24_1: u32 = 240100;
pub const __DRIVERKIT_24_2: u32 = 240200;
pub const __DRIVERKIT_24_3: u32 = 240300;
pub const __DRIVERKIT_24_4: u32 = 240400;
pub const __VISIONOS_1_0: u32 = 10000;
pub const __VISIONOS_1_1: u32 = 10100;
pub const __VISIONOS_1_2: u32 = 10200;
pub const __VISIONOS_1_3: u32 = 10300;
pub const __VISIONOS_2_0: u32 = 20000;
pub const __VISIONOS_2_1: u32 = 20100;
pub const __VISIONOS_2_2: u32 = 20200;
pub const __VISIONOS_2_3: u32 = 20300;
pub const __VISIONOS_2_4: u32 = 20400;
pub const MAC_OS_X_VERSION_10_0: u32 = 1000;
pub const MAC_OS_X_VERSION_10_1: u32 = 1010;
pub const MAC_OS_X_VERSION_10_2: u32 = 1020;
pub const MAC_OS_X_VERSION_10_3: u32 = 1030;
pub const MAC_OS_X_VERSION_10_4: u32 = 1040;
pub const MAC_OS_X_VERSION_10_5: u32 = 1050;
pub const MAC_OS_X_VERSION_10_6: u32 = 1060;
pub const MAC_OS_X_VERSION_10_7: u32 = 1070;
pub const MAC_OS_X_VERSION_10_8: u32 = 1080;
pub const MAC_OS_X_VERSION_10_9: u32 = 1090;
pub const MAC_OS_X_VERSION_10_10: u32 = 101000;
pub const MAC_OS_X_VERSION_10_10_2: u32 = 101002;
pub const MAC_OS_X_VERSION_10_10_3: u32 = 101003;
pub const MAC_OS_X_VERSION_10_11: u32 = 101100;
pub const MAC_OS_X_VERSION_10_11_2: u32 = 101102;
pub const MAC_OS_X_VERSION_10_11_3: u32 = 101103;
pub const MAC_OS_X_VERSION_10_11_4: u32 = 101104;
pub const MAC_OS_X_VERSION_10_12: u32 = 101200;
pub const MAC_OS_X_VERSION_10_12_1: u32 = 101201;
pub const MAC_OS_X_VERSION_10_12_2: u32 = 101202;
pub const MAC_OS_X_VERSION_10_12_4: u32 = 101204;
pub const MAC_OS_X_VERSION_10_13: u32 = 101300;
pub const MAC_OS_X_VERSION_10_13_1: u32 = 101301;
pub const MAC_OS_X_VERSION_10_13_2: u32 = 101302;
pub const MAC_OS_X_VERSION_10_13_4: u32 = 101304;
pub const MAC_OS_X_VERSION_10_14: u32 = 101400;
pub const MAC_OS_X_VERSION_10_14_1: u32 = 101401;
pub const MAC_OS_X_VERSION_10_14_4: u32 = 101404;
pub const MAC_OS_X_VERSION_10_14_5: u32 = 101405;
pub const MAC_OS_X_VERSION_10_14_6: u32 = 101406;
pub const MAC_OS_X_VERSION_10_15: u32 = 101500;
pub const MAC_OS_X_VERSION_10_15_1: u32 = 101501;
pub const MAC_OS_X_VERSION_10_15_4: u32 = 101504;
pub const MAC_OS_X_VERSION_10_16: u32 = 101600;
pub const MAC_OS_VERSION_11_0: u32 = 110000;
pub const MAC_OS_VERSION_11_1: u32 = 110100;
pub const MAC_OS_VERSION_11_3: u32 = 110300;
pub const MAC_OS_VERSION_11_4: u32 = 110400;
pub const MAC_OS_VERSION_11_5: u32 = 110500;
pub const MAC_OS_VERSION_11_6: u32 = 110600;
pub const MAC_OS_VERSION_12_0: u32 = 120000;
pub const MAC_OS_VERSION_12_1: u32 = 120100;
pub const MAC_OS_VERSION_12_2: u32 = 120200;
pub const MAC_OS_VERSION_12_3: u32 = 120300;
pub const MAC_OS_VERSION_12_4: u32 = 120400;
pub const MAC_OS_VERSION_12_5: u32 = 120500;
pub const MAC_OS_VERSION_12_6: u32 = 120600;
pub const MAC_OS_VERSION_12_7: u32 = 120700;
pub const MAC_OS_VERSION_13_0: u32 = 130000;
pub const MAC_OS_VERSION_13_1: u32 = 130100;
pub const MAC_OS_VERSION_13_2: u32 = 130200;
pub const MAC_OS_VERSION_13_3: u32 = 130300;
pub const MAC_OS_VERSION_13_4: u32 = 130400;
pub const MAC_OS_VERSION_13_5: u32 = 130500;
pub const MAC_OS_VERSION_13_6: u32 = 130600;
pub const MAC_OS_VERSION_13_7: u32 = 130700;
pub const MAC_OS_VERSION_14_0: u32 = 140000;
pub const MAC_OS_VERSION_14_1: u32 = 140100;
pub const MAC_OS_VERSION_14_2: u32 = 140200;
pub const MAC_OS_VERSION_14_3: u32 = 140300;
pub const MAC_OS_VERSION_14_4: u32 = 140400;
pub const MAC_OS_VERSION_14_5: u32 = 140500;
pub const MAC_OS_VERSION_14_6: u32 = 140600;
pub const MAC_OS_VERSION_14_7: u32 = 140700;
pub const MAC_OS_VERSION_15_0: u32 = 150000;
pub const MAC_OS_VERSION_15_1: u32 = 150100;
pub const MAC_OS_VERSION_15_2: u32 = 150200;
pub const MAC_OS_VERSION_15_3: u32 = 150300;
pub const MAC_OS_VERSION_15_4: u32 = 150400;
pub const __AVAILABILITY_VERSIONS_VERSION_HASH: u32 = 93585900;
pub const __AVAILABILITY_VERSIONS_VERSION_STRING: &[u8; 6] = b"Local\0";
pub const __AVAILABILITY_FILE: &[u8; 23] = b"AvailabilityVersions.h\0";
pub const __MAC_OS_X_VERSION_MAX_ALLOWED: u32 = 150400;
pub const __ENABLE_LEGACY_MAC_AVAILABILITY: u32 = 1;
pub const __DARWIN_WCHAR_MIN: i32 = -2147483648;
pub const _FORTIFY_SOURCE: u32 = 2;
pub const __DARWIN_NSIG: u32 = 32;
pub const NSIG: u32 = 32;
pub const _ARM_SIGNAL_: u32 = 1;
pub const SIGHUP: u32 = 1;
pub const SIGINT: u32 = 2;
pub const SIGQUIT: u32 = 3;
pub const SIGILL: u32 = 4;
pub const SIGTRAP: u32 = 5;
pub const SIGABRT: u32 = 6;
pub const SIGIOT: u32 = 6;
pub const SIGEMT: u32 = 7;
pub const SIGFPE: u32 = 8;
pub const SIGKILL: u32 = 9;
pub const SIGBUS: u32 = 10;
pub const SIGSEGV: u32 = 11;
pub const SIGSYS: u32 = 12;
pub const SIGPIPE: u32 = 13;
pub const SIGALRM: u32 = 14;
pub const SIGTERM: u32 = 15;
pub const SIGURG: u32 = 16;
pub const SIGSTOP: u32 = 17;
pub const SIGTSTP: u32 = 18;
pub const SIGCONT: u32 = 19;
pub const SIGCHLD: u32 = 20;
pub const SIGTTIN: u32 = 21;
pub const SIGTTOU: u32 = 22;
pub const SIGIO: u32 = 23;
pub const SIGXCPU: u32 = 24;
pub const SIGXFSZ: u32 = 25;
pub const SIGVTALRM: u32 = 26;
pub const SIGPROF: u32 = 27;
pub const SIGWINCH: u32 = 28;
pub const SIGINFO: u32 = 29;
pub const SIGUSR1: u32 = 30;
pub const SIGUSR2: u32 = 31;
pub const __DARWIN_OPAQUE_ARM_THREAD_STATE64: u32 = 0;
pub const USE_CLANG_STDDEF: u32 = 0;
pub const SIGEV_NONE: u32 = 0;
pub const SIGEV_SIGNAL: u32 = 1;
pub const SIGEV_THREAD: u32 = 3;
pub const ILL_NOOP: u32 = 0;
pub const ILL_ILLOPC: u32 = 1;
pub const ILL_ILLTRP: u32 = 2;
pub const ILL_PRVOPC: u32 = 3;
pub const ILL_ILLOPN: u32 = 4;
pub const ILL_ILLADR: u32 = 5;
pub const ILL_PRVREG: u32 = 6;
pub const ILL_COPROC: u32 = 7;
pub const ILL_BADSTK: u32 = 8;
pub const FPE_NOOP: u32 = 0;
pub const FPE_FLTDIV: u32 = 1;
pub const FPE_FLTOVF: u32 = 2;
pub const FPE_FLTUND: u32 = 3;
pub const FPE_FLTRES: u32 = 4;
pub const FPE_FLTINV: u32 = 5;
pub const FPE_FLTSUB: u32 = 6;
pub const FPE_INTDIV: u32 = 7;
pub const FPE_INTOVF: u32 = 8;
pub const SEGV_NOOP: u32 = 0;
pub const SEGV_MAPERR: u32 = 1;
pub const SEGV_ACCERR: u32 = 2;
pub const BUS_NOOP: u32 = 0;
pub const BUS_ADRALN: u32 = 1;
pub const BUS_ADRERR: u32 = 2;
pub const BUS_OBJERR: u32 = 3;
pub const TRAP_BRKPT: u32 = 1;
pub const TRAP_TRACE: u32 = 2;
pub const CLD_NOOP: u32 = 0;
pub const CLD_EXITED: u32 = 1;
pub const CLD_KILLED: u32 = 2;
pub const CLD_DUMPED: u32 = 3;
pub const CLD_TRAPPED: u32 = 4;
pub const CLD_STOPPED: u32 = 5;
pub const CLD_CONTINUED: u32 = 6;
pub const POLL_IN: u32 = 1;
pub const POLL_OUT: u32 = 2;
pub const POLL_MSG: u32 = 3;
pub const POLL_ERR: u32 = 4;
pub const POLL_PRI: u32 = 5;
pub const POLL_HUP: u32 = 6;
pub const SA_ONSTACK: u32 = 1;
pub const SA_RESTART: u32 = 2;
pub const SA_RESETHAND: u32 = 4;
pub const SA_NOCLDSTOP: u32 = 8;
pub const SA_NODEFER: u32 = 16;
pub const SA_NOCLDWAIT: u32 = 32;
pub const SA_SIGINFO: u32 = 64;
pub const SA_USERTRAMP: u32 = 256;
pub const SA_64REGSET: u32 = 512;
pub const SA_USERSPACE_MASK: u32 = 127;
pub const SIG_BLOCK: u32 = 1;
pub const SIG_UNBLOCK: u32 = 2;
pub const SIG_SETMASK: u32 = 3;
pub const SI_USER: u32 = 65537;
pub const SI_QUEUE: u32 = 65538;
pub const SI_TIMER: u32 = 65539;
pub const SI_ASYNCIO: u32 = 65540;
pub const SI_MESGQ: u32 = 65541;
pub const SS_ONSTACK: u32 = 1;
pub const SS_DISABLE: u32 = 4;
pub const MINSIGSTKSZ: u32 = 32768;
pub const SIGSTKSZ: u32 = 131072;
pub const SV_ONSTACK: u32 = 1;
pub const SV_INTERRUPT: u32 = 2;
pub const SV_RESETHAND: u32 = 4;
pub const SV_NODEFER: u32 = 16;
pub const SV_NOCLDSTOP: u32 = 8;
pub const SV_SIGINFO: u32 = 64;
pub const PRIO_PROCESS: u32 = 0;
pub const PRIO_PGRP: u32 = 1;
pub const PRIO_USER: u32 = 2;
pub const PRIO_DARWIN_THREAD: u32 = 3;
pub const PRIO_DARWIN_PROCESS: u32 = 4;
pub const PRIO_MIN: i32 = -20;
pub const PRIO_MAX: u32 = 20;
pub const PRIO_DARWIN_BG: u32 = 4096;
pub const PRIO_DARWIN_NONUI: u32 = 4097;
pub const RUSAGE_SELF: u32 = 0;
pub const RUSAGE_CHILDREN: i32 = -1;
pub const RUSAGE_INFO_V0: u32 = 0;
pub const RUSAGE_INFO_V1: u32 = 1;
pub const RUSAGE_INFO_V2: u32 = 2;
pub const RUSAGE_INFO_V3: u32 = 3;
pub const RUSAGE_INFO_V4: u32 = 4;
pub const RUSAGE_INFO_V5: u32 = 5;
pub const RUSAGE_INFO_V6: u32 = 6;
pub const RUSAGE_INFO_CURRENT: u32 = 6;
pub const RU_PROC_RUNS_RESLIDE: u32 = 1;
pub const RLIMIT_CPU: u32 = 0;
pub const RLIMIT_FSIZE: u32 = 1;
pub const RLIMIT_DATA: u32 = 2;
pub const RLIMIT_STACK: u32 = 3;
pub const RLIMIT_CORE: u32 = 4;
pub const RLIMIT_AS: u32 = 5;
pub const RLIMIT_RSS: u32 = 5;
pub const RLIMIT_MEMLOCK: u32 = 6;
pub const RLIMIT_NPROC: u32 = 7;
pub const RLIMIT_NOFILE: u32 = 8;
pub const RLIM_NLIMITS: u32 = 9;
pub const _RLIMIT_POSIX_FLAG: u32 = 4096;
pub const RLIMIT_WAKEUPS_MONITOR: u32 = 1;
pub const RLIMIT_CPU_USAGE_MONITOR: u32 = 2;
pub const RLIMIT_THREAD_CPULIMITS: u32 = 3;
pub const RLIMIT_FOOTPRINT_INTERVAL: u32 = 4;
pub const WAKEMON_ENABLE: u32 = 1;
pub const WAKEMON_DISABLE: u32 = 2;
pub const WAKEMON_GET_PARAMS: u32 = 4;
pub const WAKEMON_SET_DEFAULTS: u32 = 8;
pub const WAKEMON_MAKE_FATAL: u32 = 16;
pub const CPUMON_MAKE_FATAL: u32 = 4096;
pub const FOOTPRINT_INTERVAL_RESET: u32 = 1;
pub const IOPOL_TYPE_DISK: u32 = 0;
pub const IOPOL_TYPE_VFS_ATIME_UPDATES: u32 = 2;
pub const IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES: u32 = 3;
pub const IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME: u32 = 4;
pub const IOPOL_TYPE_VFS_TRIGGER_RESOLVE: u32 = 5;
pub const IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION: u32 = 6;
pub const IOPOL_TYPE_VFS_IGNORE_PERMISSIONS: u32 = 7;
pub const IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE: u32 = 8;
pub const IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES: u32 = 9;
pub const IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY: u32 = 10;
pub const IOPOL_SCOPE_PROCESS: u32 = 0;
pub const IOPOL_SCOPE_THREAD: u32 = 1;
pub const IOPOL_SCOPE_DARWIN_BG: u32 = 2;
pub const IOPOL_DEFAULT: u32 = 0;
pub const IOPOL_IMPORTANT: u32 = 1;
pub const IOPOL_PASSIVE: u32 = 2;
pub const IOPOL_THROTTLE: u32 = 3;
pub const IOPOL_UTILITY: u32 = 4;
pub const IOPOL_STANDARD: u32 = 5;
pub const IOPOL_APPLICATION: u32 = 5;
pub const IOPOL_NORMAL: u32 = 1;
pub const IOPOL_ATIME_UPDATES_DEFAULT: u32 = 0;
pub const IOPOL_ATIME_UPDATES_OFF: u32 = 1;
pub const IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT: u32 = 0;
pub const IOPOL_MATERIALIZE_DATALESS_FILES_OFF: u32 = 1;
pub const IOPOL_MATERIALIZE_DATALESS_FILES_ON: u32 = 2;
pub const IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT: u32 = 0;
pub const IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME: u32 = 1;
pub const IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT: u32 = 0;
pub const IOPOL_VFS_TRIGGER_RESOLVE_OFF: u32 = 1;
pub const IOPOL_VFS_CONTENT_PROTECTION_DEFAULT: u32 = 0;
pub const IOPOL_VFS_CONTENT_PROTECTION_IGNORE: u32 = 1;
pub const IOPOL_VFS_IGNORE_PERMISSIONS_OFF: u32 = 0;
pub const IOPOL_VFS_IGNORE_PERMISSIONS_ON: u32 = 1;
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_OFF: u32 = 0;
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_ON: u32 = 1;
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_IGNORE: u32 = 2;
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF: u32 = 0;
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON: u32 = 1;
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT: u32 = 0;
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON: u32 = 1;
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT: u32 = 0;
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON: u32 = 1;
pub const WNOHANG: u32 = 1;
pub const WUNTRACED: u32 = 2;
pub const WCOREFLAG: u32 = 128;
pub const _WSTOPPED: u32 = 127;
pub const WEXITED: u32 = 4;
pub const WSTOPPED: u32 = 8;
pub const WCONTINUED: u32 = 16;
pub const WNOWAIT: u32 = 32;
pub const WAIT_ANY: i32 = -1;
pub const WAIT_MYPGRP: u32 = 0;
pub const _QUAD_HIGHWORD: u32 = 1;
pub const _QUAD_LOWWORD: u32 = 0;
pub const __DARWIN_LITTLE_ENDIAN: u32 = 1234;
pub const __DARWIN_BIG_ENDIAN: u32 = 4321;
pub const __DARWIN_PDP_ENDIAN: u32 = 3412;
pub const LITTLE_ENDIAN: u32 = 1234;
pub const BIG_ENDIAN: u32 = 4321;
pub const PDP_ENDIAN: u32 = 3412;
pub const __DARWIN_BYTE_ORDER: u32 = 1234;
pub const BYTE_ORDER: u32 = 1234;
pub const EXIT_FAILURE: u32 = 1;
pub const EXIT_SUCCESS: u32 = 0;
pub const RAND_MAX: u32 = 2147483647;
pub const __PRI_8_LENGTH_MODIFIER__: &[u8; 3] = b"hh\0";
pub const __PRI_64_LENGTH_MODIFIER__: &[u8; 3] = b"ll\0";
pub const __SCN_64_LENGTH_MODIFIER__: &[u8; 3] = b"ll\0";
pub const __PRI_MAX_LENGTH_MODIFIER__: &[u8; 2] = b"j\0";
pub const __SCN_MAX_LENGTH_MODIFIER__: &[u8; 2] = b"j\0";
pub const PRId8: &[u8; 4] = b"hhd\0";
pub const PRIi8: &[u8; 4] = b"hhi\0";
pub const PRIo8: &[u8; 4] = b"hho\0";
pub const PRIu8: &[u8; 4] = b"hhu\0";
pub const PRIx8: &[u8; 4] = b"hhx\0";
pub const PRIX8: &[u8; 4] = b"hhX\0";
pub const PRId16: &[u8; 3] = b"hd\0";
pub const PRIi16: &[u8; 3] = b"hi\0";
pub const PRIo16: &[u8; 3] = b"ho\0";
pub const PRIu16: &[u8; 3] = b"hu\0";
pub const PRIx16: &[u8; 3] = b"hx\0";
pub const PRIX16: &[u8; 3] = b"hX\0";
pub const PRId32: &[u8; 2] = b"d\0";
pub const PRIi32: &[u8; 2] = b"i\0";
pub const PRIo32: &[u8; 2] = b"o\0";
pub const PRIu32: &[u8; 2] = b"u\0";
pub const PRIx32: &[u8; 2] = b"x\0";
pub const PRIX32: &[u8; 2] = b"X\0";
pub const PRId64: &[u8; 4] = b"lld\0";
pub const PRIi64: &[u8; 4] = b"lli\0";
pub const PRIo64: &[u8; 4] = b"llo\0";
pub const PRIu64: &[u8; 4] = b"llu\0";
pub const PRIx64: &[u8; 4] = b"llx\0";
pub const PRIX64: &[u8; 4] = b"llX\0";
pub const PRIdLEAST8: &[u8; 4] = b"hhd\0";
pub const PRIiLEAST8: &[u8; 4] = b"hhi\0";
pub const PRIoLEAST8: &[u8; 4] = b"hho\0";
pub const PRIuLEAST8: &[u8; 4] = b"hhu\0";
pub const PRIxLEAST8: &[u8; 4] = b"hhx\0";
pub const PRIXLEAST8: &[u8; 4] = b"hhX\0";
pub const PRIdLEAST16: &[u8; 3] = b"hd\0";
pub const PRIiLEAST16: &[u8; 3] = b"hi\0";
pub const PRIoLEAST16: &[u8; 3] = b"ho\0";
pub const PRIuLEAST16: &[u8; 3] = b"hu\0";
pub const PRIxLEAST16: &[u8; 3] = b"hx\0";
pub const PRIXLEAST16: &[u8; 3] = b"hX\0";
pub const PRIdLEAST32: &[u8; 2] = b"d\0";
pub const PRIiLEAST32: &[u8; 2] = b"i\0";
pub const PRIoLEAST32: &[u8; 2] = b"o\0";
pub const PRIuLEAST32: &[u8; 2] = b"u\0";
pub const PRIxLEAST32: &[u8; 2] = b"x\0";
pub const PRIXLEAST32: &[u8; 2] = b"X\0";
pub const PRIdLEAST64: &[u8; 4] = b"lld\0";
pub const PRIiLEAST64: &[u8; 4] = b"lli\0";
pub const PRIoLEAST64: &[u8; 4] = b"llo\0";
pub const PRIuLEAST64: &[u8; 4] = b"llu\0";
pub const PRIxLEAST64: &[u8; 4] = b"llx\0";
pub const PRIXLEAST64: &[u8; 4] = b"llX\0";
pub const PRIdFAST8: &[u8; 4] = b"hhd\0";
pub const PRIiFAST8: &[u8; 4] = b"hhi\0";
pub const PRIoFAST8: &[u8; 4] = b"hho\0";
pub const PRIuFAST8: &[u8; 4] = b"hhu\0";
pub const PRIxFAST8: &[u8; 4] = b"hhx\0";
pub const PRIXFAST8: &[u8; 4] = b"hhX\0";
pub const PRIdFAST16: &[u8; 3] = b"hd\0";
pub const PRIiFAST16: &[u8; 3] = b"hi\0";
pub const PRIoFAST16: &[u8; 3] = b"ho\0";
pub const PRIuFAST16: &[u8; 3] = b"hu\0";
pub const PRIxFAST16: &[u8; 3] = b"hx\0";
pub const PRIXFAST16: &[u8; 3] = b"hX\0";
pub const PRIdFAST32: &[u8; 2] = b"d\0";
pub const PRIiFAST32: &[u8; 2] = b"i\0";
pub const PRIoFAST32: &[u8; 2] = b"o\0";
pub const PRIuFAST32: &[u8; 2] = b"u\0";
pub const PRIxFAST32: &[u8; 2] = b"x\0";
pub const PRIXFAST32: &[u8; 2] = b"X\0";
pub const PRIdFAST64: &[u8; 4] = b"lld\0";
pub const PRIiFAST64: &[u8; 4] = b"lli\0";
pub const PRIoFAST64: &[u8; 4] = b"llo\0";
pub const PRIuFAST64: &[u8; 4] = b"llu\0";
pub const PRIxFAST64: &[u8; 4] = b"llx\0";
pub const PRIXFAST64: &[u8; 4] = b"llX\0";
pub const PRIdPTR: &[u8; 3] = b"ld\0";
pub const PRIiPTR: &[u8; 3] = b"li\0";
pub const PRIoPTR: &[u8; 3] = b"lo\0";
pub const PRIuPTR: &[u8; 3] = b"lu\0";
pub const PRIxPTR: &[u8; 3] = b"lx\0";
pub const PRIXPTR: &[u8; 3] = b"lX\0";
pub const PRIdMAX: &[u8; 3] = b"jd\0";
pub const PRIiMAX: &[u8; 3] = b"ji\0";
pub const PRIoMAX: &[u8; 3] = b"jo\0";
pub const PRIuMAX: &[u8; 3] = b"ju\0";
pub const PRIxMAX: &[u8; 3] = b"jx\0";
pub const PRIXMAX: &[u8; 3] = b"jX\0";
pub const SCNd8: &[u8; 4] = b"hhd\0";
pub const SCNi8: &[u8; 4] = b"hhi\0";
pub const SCNo8: &[u8; 4] = b"hho\0";
pub const SCNu8: &[u8; 4] = b"hhu\0";
pub const SCNx8: &[u8; 4] = b"hhx\0";
pub const SCNd16: &[u8; 3] = b"hd\0";
pub const SCNi16: &[u8; 3] = b"hi\0";
pub const SCNo16: &[u8; 3] = b"ho\0";
pub const SCNu16: &[u8; 3] = b"hu\0";
pub const SCNx16: &[u8; 3] = b"hx\0";
pub const SCNd32: &[u8; 2] = b"d\0";
pub const SCNi32: &[u8; 2] = b"i\0";
pub const SCNo32: &[u8; 2] = b"o\0";
pub const SCNu32: &[u8; 2] = b"u\0";
pub const SCNx32: &[u8; 2] = b"x\0";
pub const SCNd64: &[u8; 4] = b"lld\0";
pub const SCNi64: &[u8; 4] = b"lli\0";
pub const SCNo64: &[u8; 4] = b"llo\0";
pub const SCNu64: &[u8; 4] = b"llu\0";
pub const SCNx64: &[u8; 4] = b"llx\0";
pub const SCNdLEAST8: &[u8; 4] = b"hhd\0";
pub const SCNiLEAST8: &[u8; 4] = b"hhi\0";
pub const SCNoLEAST8: &[u8; 4] = b"hho\0";
pub const SCNuLEAST8: &[u8; 4] = b"hhu\0";
pub const SCNxLEAST8: &[u8; 4] = b"hhx\0";
pub const SCNdLEAST16: &[u8; 3] = b"hd\0";
pub const SCNiLEAST16: &[u8; 3] = b"hi\0";
pub const SCNoLEAST16: &[u8; 3] = b"ho\0";
pub const SCNuLEAST16: &[u8; 3] = b"hu\0";
pub const SCNxLEAST16: &[u8; 3] = b"hx\0";
pub const SCNdLEAST32: &[u8; 2] = b"d\0";
pub const SCNiLEAST32: &[u8; 2] = b"i\0";
pub const SCNoLEAST32: &[u8; 2] = b"o\0";
pub const SCNuLEAST32: &[u8; 2] = b"u\0";
pub const SCNxLEAST32: &[u8; 2] = b"x\0";
pub const SCNdLEAST64: &[u8; 4] = b"lld\0";
pub const SCNiLEAST64: &[u8; 4] = b"lli\0";
pub const SCNoLEAST64: &[u8; 4] = b"llo\0";
pub const SCNuLEAST64: &[u8; 4] = b"llu\0";
pub const SCNxLEAST64: &[u8; 4] = b"llx\0";
pub const SCNdFAST8: &[u8; 4] = b"hhd\0";
pub const SCNiFAST8: &[u8; 4] = b"hhi\0";
pub const SCNoFAST8: &[u8; 4] = b"hho\0";
pub const SCNuFAST8: &[u8; 4] = b"hhu\0";
pub const SCNxFAST8: &[u8; 4] = b"hhx\0";
pub const SCNdFAST16: &[u8; 3] = b"hd\0";
pub const SCNiFAST16: &[u8; 3] = b"hi\0";
pub const SCNoFAST16: &[u8; 3] = b"ho\0";
pub const SCNuFAST16: &[u8; 3] = b"hu\0";
pub const SCNxFAST16: &[u8; 3] = b"hx\0";
pub const SCNdFAST32: &[u8; 2] = b"d\0";
pub const SCNiFAST32: &[u8; 2] = b"i\0";
pub const SCNoFAST32: &[u8; 2] = b"o\0";
pub const SCNuFAST32: &[u8; 2] = b"u\0";
pub const SCNxFAST32: &[u8; 2] = b"x\0";
pub const SCNdFAST64: &[u8; 4] = b"lld\0";
pub const SCNiFAST64: &[u8; 4] = b"lli\0";
pub const SCNoFAST64: &[u8; 4] = b"llo\0";
pub const SCNuFAST64: &[u8; 4] = b"llu\0";
pub const SCNxFAST64: &[u8; 4] = b"llx\0";
pub const SCNdPTR: &[u8; 3] = b"ld\0";
pub const SCNiPTR: &[u8; 3] = b"li\0";
pub const SCNoPTR: &[u8; 3] = b"lo\0";
pub const SCNuPTR: &[u8; 3] = b"lu\0";
pub const SCNxPTR: &[u8; 3] = b"lx\0";
pub const SCNdMAX: &[u8; 3] = b"jd\0";
pub const SCNiMAX: &[u8; 3] = b"ji\0";
pub const SCNoMAX: &[u8; 3] = b"jo\0";
pub const SCNuMAX: &[u8; 3] = b"ju\0";
pub const SCNxMAX: &[u8; 3] = b"jx\0";
pub const LAPACK_IFMT: &[u8; 2] = b"d\0";
pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = f64;
pub type blasint = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xdouble {
    pub x: [::std::os::raw::c_ulong; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of xdouble"][::std::mem::size_of::<xdouble>() - 16usize];
    ["Alignment of xdouble"][::std::mem::align_of::<xdouble>() - 8usize];
    ["Offset of field: xdouble::x"][::std::mem::offset_of!(xdouble, x) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct openblas_complex_float {
    pub real: f32,
    pub imag: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of openblas_complex_float"][::std::mem::size_of::<openblas_complex_float>() - 8usize];
    ["Alignment of openblas_complex_float"]
        [::std::mem::align_of::<openblas_complex_float>() - 4usize];
    ["Offset of field: openblas_complex_float::real"]
        [::std::mem::offset_of!(openblas_complex_float, real) - 0usize];
    ["Offset of field: openblas_complex_float::imag"]
        [::std::mem::offset_of!(openblas_complex_float, imag) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct openblas_complex_double {
    pub real: f64,
    pub imag: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of openblas_complex_double"][::std::mem::size_of::<openblas_complex_double>() - 16usize];
    ["Alignment of openblas_complex_double"]
        [::std::mem::align_of::<openblas_complex_double>() - 8usize];
    ["Offset of field: openblas_complex_double::real"]
        [::std::mem::offset_of!(openblas_complex_double, real) - 0usize];
    ["Offset of field: openblas_complex_double::imag"]
        [::std::mem::offset_of!(openblas_complex_double, imag) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct openblas_complex_xdouble {
    pub real: xdouble,
    pub imag: xdouble,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of openblas_complex_xdouble"]
        [::std::mem::size_of::<openblas_complex_xdouble>() - 32usize];
    ["Alignment of openblas_complex_xdouble"]
        [::std::mem::align_of::<openblas_complex_xdouble>() - 8usize];
    ["Offset of field: openblas_complex_xdouble::real"]
        [::std::mem::offset_of!(openblas_complex_xdouble, real) - 0usize];
    ["Offset of field: openblas_complex_xdouble::imag"]
        [::std::mem::offset_of!(openblas_complex_xdouble, imag) - 16usize];
};
unsafe extern "C" {
    pub fn openblas_set_num_threads(num_threads: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn goto_set_num_threads(num_threads: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn openblas_set_num_threads_local(
        num_threads: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn openblas_get_num_threads() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn openblas_get_num_procs() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn openblas_get_config() -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn openblas_get_corename() -> *mut ::std::os::raw::c_char;
}
pub type openblas_dojob_callback = ::std::option::Option<
    unsafe extern "C" fn(
        thread_num: ::std::os::raw::c_int,
        jobdata: *mut ::std::os::raw::c_void,
        dojob_data: ::std::os::raw::c_int,
    ),
>;
pub type openblas_threads_callback = ::std::option::Option<
    unsafe extern "C" fn(
        sync: ::std::os::raw::c_int,
        dojob: openblas_dojob_callback,
        numjobs: ::std::os::raw::c_int,
        jobdata_elsize: usize,
        jobdata: *mut ::std::os::raw::c_void,
        dojob_data: ::std::os::raw::c_int,
    ),
>;
unsafe extern "C" {
    pub fn openblas_set_threads_callback_function(callback: openblas_threads_callback);
}
unsafe extern "C" {
    pub fn openblas_get_parallel() -> ::std::os::raw::c_int;
}
pub const CBLAS_ORDER_CblasRowMajor: CBLAS_ORDER = 101;
pub const CBLAS_ORDER_CblasColMajor: CBLAS_ORDER = 102;
pub type CBLAS_ORDER = ::std::os::raw::c_uint;
pub const CBLAS_TRANSPOSE_CblasNoTrans: CBLAS_TRANSPOSE = 111;
pub const CBLAS_TRANSPOSE_CblasTrans: CBLAS_TRANSPOSE = 112;
pub const CBLAS_TRANSPOSE_CblasConjTrans: CBLAS_TRANSPOSE = 113;
pub const CBLAS_TRANSPOSE_CblasConjNoTrans: CBLAS_TRANSPOSE = 114;
pub type CBLAS_TRANSPOSE = ::std::os::raw::c_uint;
pub const CBLAS_UPLO_CblasUpper: CBLAS_UPLO = 121;
pub const CBLAS_UPLO_CblasLower: CBLAS_UPLO = 122;
pub type CBLAS_UPLO = ::std::os::raw::c_uint;
pub const CBLAS_DIAG_CblasNonUnit: CBLAS_DIAG = 131;
pub const CBLAS_DIAG_CblasUnit: CBLAS_DIAG = 132;
pub type CBLAS_DIAG = ::std::os::raw::c_uint;
pub const CBLAS_SIDE_CblasLeft: CBLAS_SIDE = 141;
pub const CBLAS_SIDE_CblasRight: CBLAS_SIDE = 142;
pub type CBLAS_SIDE = ::std::os::raw::c_uint;
pub use self::CBLAS_ORDER as CBLAS_LAYOUT;
pub type int_least8_t = i8;
pub type int_least16_t = i16;
pub type int_least32_t = i32;
pub type int_least64_t = i64;
pub type uint_least8_t = u8;
pub type uint_least16_t = u16;
pub type uint_least32_t = u32;
pub type uint_least64_t = u64;
pub type int_fast8_t = i8;
pub type int_fast16_t = i16;
pub type int_fast32_t = i32;
pub type int_fast64_t = i64;
pub type uint_fast8_t = u8;
pub type uint_fast16_t = u16;
pub type uint_fast32_t = u32;
pub type uint_fast64_t = u64;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 128usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 8usize];
    ["Offset of field: __mbstate_t::__mbstate8"]
        [::std::mem::offset_of!(__mbstate_t, __mbstate8) - 0usize];
    ["Offset of field: __mbstate_t::_mbstateL"]
        [::std::mem::offset_of!(__mbstate_t, _mbstateL) - 0usize];
};
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_pthread_handler_rec"]
        [::std::mem::size_of::<__darwin_pthread_handler_rec>() - 24usize];
    ["Alignment of __darwin_pthread_handler_rec"]
        [::std::mem::align_of::<__darwin_pthread_handler_rec>() - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__routine"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __routine) - 0usize];
    ["Offset of field: __darwin_pthread_handler_rec::__arg"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __arg) - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__next"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __next) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_attr_t"][::std::mem::size_of::<_opaque_pthread_attr_t>() - 64usize];
    ["Alignment of _opaque_pthread_attr_t"]
        [::std::mem::align_of::<_opaque_pthread_attr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_attr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_attr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_cond_t"][::std::mem::size_of::<_opaque_pthread_cond_t>() - 48usize];
    ["Alignment of _opaque_pthread_cond_t"]
        [::std::mem::align_of::<_opaque_pthread_cond_t>() - 8usize];
    ["Offset of field: _opaque_pthread_cond_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_cond_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_condattr_t"]
        [::std::mem::size_of::<_opaque_pthread_condattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_condattr_t"]
        [::std::mem::align_of::<_opaque_pthread_condattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_condattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_condattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutex_t"][::std::mem::size_of::<_opaque_pthread_mutex_t>() - 64usize];
    ["Alignment of _opaque_pthread_mutex_t"]
        [::std::mem::align_of::<_opaque_pthread_mutex_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutex_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutex_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutexattr_t"]
        [::std::mem::size_of::<_opaque_pthread_mutexattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_mutexattr_t"]
        [::std::mem::align_of::<_opaque_pthread_mutexattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_once_t"][::std::mem::size_of::<_opaque_pthread_once_t>() - 16usize];
    ["Alignment of _opaque_pthread_once_t"]
        [::std::mem::align_of::<_opaque_pthread_once_t>() - 8usize];
    ["Offset of field: _opaque_pthread_once_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_once_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlock_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlock_t>() - 200usize];
    ["Alignment of _opaque_pthread_rwlock_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlock_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlockattr_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlockattr_t>() - 24usize];
    ["Alignment of _opaque_pthread_rwlockattr_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlockattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_t"][::std::mem::size_of::<_opaque_pthread_t>() - 8192usize];
    ["Alignment of _opaque_pthread_t"][::std::mem::align_of::<_opaque_pthread_t>() - 8usize];
    ["Offset of field: _opaque_pthread_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_t::__cleanup_stack"]
        [::std::mem::offset_of!(_opaque_pthread_t, __cleanup_stack) - 8usize];
    ["Offset of field: _opaque_pthread_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_t, __opaque) - 16usize];
};
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type bfloat16 = u16;
unsafe extern "C" {
    pub fn cblas_sdsdot(
        n: blasint,
        alpha: f32,
        x: *const f32,
        incx: blasint,
        y: *const f32,
        incy: blasint,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dsdot(
        n: blasint,
        x: *const f32,
        incx: blasint,
        y: *const f32,
        incy: blasint,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_sdot(
        n: blasint,
        x: *const f32,
        incx: blasint,
        y: *const f32,
        incy: blasint,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_ddot(
        n: blasint,
        x: *const f64,
        incx: blasint,
        y: *const f64,
        incy: blasint,
    ) -> f64;
}
unsafe extern "C" {
    pub fn cblas_cdotu(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
    ) -> openblas_complex_float;
}
unsafe extern "C" {
    pub fn cblas_cdotc(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
    ) -> openblas_complex_float;
}
unsafe extern "C" {
    pub fn cblas_zdotu(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
    ) -> openblas_complex_double;
}
unsafe extern "C" {
    pub fn cblas_zdotc(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
    ) -> openblas_complex_double;
}
unsafe extern "C" {
    pub fn cblas_cdotu_sub(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
        ret: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_cdotc_sub(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
        ret: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotu_sub(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
        ret: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zdotc_sub(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *const ::std::os::raw::c_void,
        incy: blasint,
        ret: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_sasum(n: blasint, x: *const f32, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dasum(n: blasint, x: *const f64, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scasum(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dzasum(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_ssum(n: blasint, x: *const f32, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dsum(n: blasint, x: *const f64, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scsum(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dzsum(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_snrm2(N: blasint, X: *const f32, incX: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dnrm2(N: blasint, X: *const f64, incX: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scnrm2(N: blasint, X: *const ::std::os::raw::c_void, incX: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dznrm2(N: blasint, X: *const ::std::os::raw::c_void, incX: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_isamax(n: blasint, x: *const f32, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_idamax(n: blasint, x: *const f64, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_icamax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_izamax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_isamin(n: blasint, x: *const f32, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_idamin(n: blasint, x: *const f64, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_icamin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_izamin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_samax(n: blasint, x: *const f32, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_damax(n: blasint, x: *const f64, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scamax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dzamax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_samin(n: blasint, x: *const f32, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_damin(n: blasint, x: *const f64, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_scamin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f32;
}
unsafe extern "C" {
    pub fn cblas_dzamin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> f64;
}
unsafe extern "C" {
    pub fn cblas_ismax(n: blasint, x: *const f32, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_idmax(n: blasint, x: *const f64, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_icmax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_izmax(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_ismin(n: blasint, x: *const f32, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_idmin(n: blasint, x: *const f64, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_icmin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_izmin(n: blasint, x: *const ::std::os::raw::c_void, incx: blasint) -> usize;
}
unsafe extern "C" {
    pub fn cblas_saxpy(
        n: blasint,
        alpha: f32,
        x: *const f32,
        incx: blasint,
        y: *mut f32,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_daxpy(
        n: blasint,
        alpha: f64,
        x: *const f64,
        incx: blasint,
        y: *mut f64,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_caxpy(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpy(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_caxpyc(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpyc(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_scopy(n: blasint, x: *const f32, incx: blasint, y: *mut f32, incy: blasint);
}
unsafe extern "C" {
    pub fn cblas_dcopy(n: blasint, x: *const f64, incx: blasint, y: *mut f64, incy: blasint);
}
unsafe extern "C" {
    pub fn cblas_ccopy(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zcopy(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sswap(n: blasint, x: *mut f32, incx: blasint, y: *mut f32, incy: blasint);
}
unsafe extern "C" {
    pub fn cblas_dswap(n: blasint, x: *mut f64, incx: blasint, y: *mut f64, incy: blasint);
}
unsafe extern "C" {
    pub fn cblas_cswap(
        n: blasint,
        x: *mut ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zswap(
        n: blasint,
        x: *mut ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_srot(
        N: blasint,
        X: *mut f32,
        incX: blasint,
        Y: *mut f32,
        incY: blasint,
        c: f32,
        s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_drot(
        N: blasint,
        X: *mut f64,
        incX: blasint,
        Y: *mut f64,
        incY: blasint,
        c: f64,
        s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_csrot(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incY: blasint,
        c: f32,
        s: f32,
    );
}
unsafe extern "C" {
    pub fn cblas_zdrot(
        n: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        y: *mut ::std::os::raw::c_void,
        incY: blasint,
        c: f64,
        s: f64,
    );
}
unsafe extern "C" {
    pub fn cblas_srotg(a: *mut f32, b: *mut f32, c: *mut f32, s: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_drotg(a: *mut f64, b: *mut f64, c: *mut f64, s: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_crotg(
        a: *mut ::std::os::raw::c_void,
        b: *mut ::std::os::raw::c_void,
        c: *mut f32,
        s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zrotg(
        a: *mut ::std::os::raw::c_void,
        b: *mut ::std::os::raw::c_void,
        c: *mut f64,
        s: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_srotm(
        N: blasint,
        X: *mut f32,
        incX: blasint,
        Y: *mut f32,
        incY: blasint,
        P: *const f32,
    );
}
unsafe extern "C" {
    pub fn cblas_drotm(
        N: blasint,
        X: *mut f64,
        incX: blasint,
        Y: *mut f64,
        incY: blasint,
        P: *const f64,
    );
}
unsafe extern "C" {
    pub fn cblas_srotmg(d1: *mut f32, d2: *mut f32, b1: *mut f32, b2: f32, P: *mut f32);
}
unsafe extern "C" {
    pub fn cblas_drotmg(d1: *mut f64, d2: *mut f64, b1: *mut f64, b2: f64, P: *mut f64);
}
unsafe extern "C" {
    pub fn cblas_sscal(N: blasint, alpha: f32, X: *mut f32, incX: blasint);
}
unsafe extern "C" {
    pub fn cblas_dscal(N: blasint, alpha: f64, X: *mut f64, incX: blasint);
}
unsafe extern "C" {
    pub fn cblas_cscal(
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zscal(
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_csscal(N: blasint, alpha: f32, X: *mut ::std::os::raw::c_void, incX: blasint);
}
unsafe extern "C" {
    pub fn cblas_zdscal(N: blasint, alpha: f64, X: *mut ::std::os::raw::c_void, incX: blasint);
}
unsafe extern "C" {
    pub fn cblas_sgemv(
        order: CBLAS_ORDER,
        trans: CBLAS_TRANSPOSE,
        m: blasint,
        n: blasint,
        alpha: f32,
        a: *const f32,
        lda: blasint,
        x: *const f32,
        incx: blasint,
        beta: f32,
        y: *mut f32,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemv(
        order: CBLAS_ORDER,
        trans: CBLAS_TRANSPOSE,
        m: blasint,
        n: blasint,
        alpha: f64,
        a: *const f64,
        lda: blasint,
        x: *const f64,
        incx: blasint,
        beta: f64,
        y: *mut f64,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemv(
        order: CBLAS_ORDER,
        trans: CBLAS_TRANSPOSE,
        m: blasint,
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        lda: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        beta: *const ::std::os::raw::c_void,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemv(
        order: CBLAS_ORDER,
        trans: CBLAS_TRANSPOSE,
        m: blasint,
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        lda: blasint,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        beta: *const ::std::os::raw::c_void,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sger(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: f32,
        X: *const f32,
        incX: blasint,
        Y: *const f32,
        incY: blasint,
        A: *mut f32,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dger(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: f64,
        X: *const f64,
        incX: blasint,
        Y: *const f64,
        incY: blasint,
        A: *mut f64,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgeru(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgerc(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgeru(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgerc(
        order: CBLAS_ORDER,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_strsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const f32,
        lda: blasint,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const f64,
        lda: blasint,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_strmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const f32,
        lda: blasint,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const f64,
        lda: blasint,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const f32,
        incX: blasint,
        A: *mut f32,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const f64,
        incX: blasint,
        A: *mut f64,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cher(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zher(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const f32,
        incX: blasint,
        Y: *const f32,
        incY: blasint,
        A: *mut f32,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const f64,
        incX: blasint,
        Y: *const f64,
        incY: blasint,
        A: *mut f64,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        A: *mut ::std::os::raw::c_void,
        lda: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sgbmv(
        order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        KL: blasint,
        KU: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        X: *const f32,
        incX: blasint,
        beta: f32,
        Y: *mut f32,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgbmv(
        order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        KL: blasint,
        KU: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        X: *const f64,
        incX: blasint,
        beta: f64,
        Y: *mut f64,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgbmv(
        order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        KL: blasint,
        KU: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgbmv(
        order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        KL: blasint,
        KU: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        X: *const f32,
        incX: blasint,
        beta: f32,
        Y: *mut f32,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        K: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        X: *const f64,
        incX: blasint,
        beta: f64,
        Y: *mut f64,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_stbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const f32,
        lda: blasint,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const f64,
        lda: blasint,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_stbsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const f32,
        lda: blasint,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtbsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const f64,
        lda: blasint,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctbsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztbsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        K: blasint,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_stpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const f32,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const f64,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_stpsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const f32,
        X: *mut f32,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtpsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const f64,
        X: *mut f64,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctpsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztpsv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        N: blasint,
        Ap: *const ::std::os::raw::c_void,
        X: *mut ::std::os::raw::c_void,
        incX: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        X: *const f32,
        incX: blasint,
        beta: f32,
        Y: *mut f32,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        X: *const f64,
        incX: blasint,
        beta: f64,
        Y: *mut f64,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_chemv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sspmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        Ap: *const f32,
        X: *const f32,
        incX: blasint,
        beta: f32,
        Y: *mut f32,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dspmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        Ap: *const f64,
        X: *const f64,
        incX: blasint,
        beta: f64,
        Y: *mut f64,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const f32,
        incX: blasint,
        Ap: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const f64,
        incX: blasint,
        Ap: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        A: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_sspr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f32,
        X: *const f32,
        incX: blasint,
        Y: *const f32,
        incY: blasint,
        A: *mut f32,
    );
}
unsafe extern "C" {
    pub fn cblas_dspr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: f64,
        X: *const f64,
        incX: blasint,
        Y: *const f64,
        incY: blasint,
        A: *mut f64,
    );
}
unsafe extern "C" {
    pub fn cblas_chpr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpr2(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        Y: *const ::std::os::raw::c_void,
        incY: blasint,
        Ap: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn cblas_chbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zhbmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_chpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        Ap: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zhpmv(
        order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        Ap: *const ::std::os::raw::c_void,
        X: *const ::std::os::raw::c_void,
        incX: blasint,
        beta: *const ::std::os::raw::c_void,
        Y: *mut ::std::os::raw::c_void,
        incY: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemm(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *const f32,
        ldb: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemm(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *const f64,
        ldb: blasint,
        beta: f64,
        C: *mut f64,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm3m(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm3m(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemmt(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        K: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *const f32,
        ldb: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemmt(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        K: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *const f64,
        ldb: blasint,
        beta: f64,
        C: *mut f64,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemmt(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemmt(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssymm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *const f32,
        ldb: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsymm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *const f64,
        ldb: blasint,
        beta: f64,
        C: *mut f64,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_csymm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zsymm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyrk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyrk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        beta: f64,
        C: *mut f64,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_csyrk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyrk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ssyr2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *const f32,
        ldb: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dsyr2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *const f64,
        ldb: blasint,
        beta: f64,
        C: *mut f64,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_csyr2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zsyr2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_strmm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *mut f32,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrmm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *mut f64,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrmm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *mut ::std::os::raw::c_void,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrmm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *mut ::std::os::raw::c_void,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_strsm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: f32,
        A: *const f32,
        lda: blasint,
        B: *mut f32,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dtrsm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: f64,
        A: *const f64,
        lda: blasint,
        B: *mut f64,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ctrsm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *mut ::std::os::raw::c_void,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_ztrsm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        TransA: CBLAS_TRANSPOSE,
        Diag: CBLAS_DIAG,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *mut ::std::os::raw::c_void,
        ldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_chemm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zhemm(
        Order: CBLAS_ORDER,
        Side: CBLAS_SIDE,
        Uplo: CBLAS_UPLO,
        M: blasint,
        N: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: *const ::std::os::raw::c_void,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cherk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        beta: f32,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zherk(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: f64,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        beta: f64,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cher2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: f32,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zher2k(
        Order: CBLAS_ORDER,
        Uplo: CBLAS_UPLO,
        Trans: CBLAS_TRANSPOSE,
        N: blasint,
        K: blasint,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: blasint,
        B: *const ::std::os::raw::c_void,
        ldb: blasint,
        beta: f64,
        C: *mut ::std::os::raw::c_void,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_xerbla(
        p: blasint,
        rout: *const ::std::os::raw::c_char,
        form: *const ::std::os::raw::c_char,
        ...
    );
}
unsafe extern "C" {
    #[doc = " BLAS extensions"]
    pub fn cblas_saxpby(
        n: blasint,
        alpha: f32,
        x: *const f32,
        incx: blasint,
        beta: f32,
        y: *mut f32,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_daxpby(
        n: blasint,
        alpha: f64,
        x: *const f64,
        incx: blasint,
        beta: f64,
        y: *mut f64,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_caxpby(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        beta: *const ::std::os::raw::c_void,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zaxpby(
        n: blasint,
        alpha: *const ::std::os::raw::c_void,
        x: *const ::std::os::raw::c_void,
        incx: blasint,
        beta: *const ::std::os::raw::c_void,
        y: *mut ::std::os::raw::c_void,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_somatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: f32,
        a: *const f32,
        clda: blasint,
        b: *mut f32,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_domatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: f64,
        a: *const f64,
        clda: blasint,
        b: *mut f64,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_comatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: *const f32,
        a: *const f32,
        clda: blasint,
        b: *mut f32,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zomatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: *const f64,
        a: *const f64,
        clda: blasint,
        b: *mut f64,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_simatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: f32,
        a: *mut f32,
        clda: blasint,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dimatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: f64,
        a: *mut f64,
        clda: blasint,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cimatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: *const f32,
        a: *mut f32,
        clda: blasint,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zimatcopy(
        CORDER: CBLAS_ORDER,
        CTRANS: CBLAS_TRANSPOSE,
        crows: blasint,
        ccols: blasint,
        calpha: *const f64,
        a: *mut f64,
        clda: blasint,
        cldb: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sgeadd(
        CORDER: CBLAS_ORDER,
        crows: blasint,
        ccols: blasint,
        calpha: f32,
        a: *const f32,
        clda: blasint,
        cbeta: f32,
        c: *mut f32,
        cldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgeadd(
        CORDER: CBLAS_ORDER,
        crows: blasint,
        ccols: blasint,
        calpha: f64,
        a: *const f64,
        clda: blasint,
        cbeta: f64,
        c: *mut f64,
        cldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgeadd(
        CORDER: CBLAS_ORDER,
        crows: blasint,
        ccols: blasint,
        calpha: *const f32,
        a: *const f32,
        clda: blasint,
        cbeta: *const f32,
        c: *mut f32,
        cldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgeadd(
        CORDER: CBLAS_ORDER,
        crows: blasint,
        ccols: blasint,
        calpha: *const f64,
        a: *const f64,
        clda: blasint,
        cbeta: *const f64,
        c: *mut f64,
        cldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sgemm_batch(
        Order: CBLAS_ORDER,
        TransA_array: *const CBLAS_TRANSPOSE,
        TransB_array: *const CBLAS_TRANSPOSE,
        M_array: *const blasint,
        N_array: *const blasint,
        K_array: *const blasint,
        alpha_array: *const f32,
        A_array: *mut *const f32,
        lda_array: *const blasint,
        B_array: *mut *const f32,
        ldb_array: *const blasint,
        beta_array: *const f32,
        C_array: *mut *mut f32,
        ldc_array: *const blasint,
        group_count: blasint,
        group_size: *const blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dgemm_batch(
        Order: CBLAS_ORDER,
        TransA_array: *const CBLAS_TRANSPOSE,
        TransB_array: *const CBLAS_TRANSPOSE,
        M_array: *const blasint,
        N_array: *const blasint,
        K_array: *const blasint,
        alpha_array: *const f64,
        A_array: *mut *const f64,
        lda_array: *const blasint,
        B_array: *mut *const f64,
        ldb_array: *const blasint,
        beta_array: *const f64,
        C_array: *mut *mut f64,
        ldc_array: *const blasint,
        group_count: blasint,
        group_size: *const blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_cgemm_batch(
        Order: CBLAS_ORDER,
        TransA_array: *const CBLAS_TRANSPOSE,
        TransB_array: *const CBLAS_TRANSPOSE,
        M_array: *const blasint,
        N_array: *const blasint,
        K_array: *const blasint,
        alpha_array: *const ::std::os::raw::c_void,
        A_array: *mut *const ::std::os::raw::c_void,
        lda_array: *const blasint,
        B_array: *mut *const ::std::os::raw::c_void,
        ldb_array: *const blasint,
        beta_array: *const ::std::os::raw::c_void,
        C_array: *mut *mut ::std::os::raw::c_void,
        ldc_array: *const blasint,
        group_count: blasint,
        group_size: *const blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_zgemm_batch(
        Order: CBLAS_ORDER,
        TransA_array: *const CBLAS_TRANSPOSE,
        TransB_array: *const CBLAS_TRANSPOSE,
        M_array: *const blasint,
        N_array: *const blasint,
        K_array: *const blasint,
        alpha_array: *const ::std::os::raw::c_void,
        A_array: *mut *const ::std::os::raw::c_void,
        lda_array: *const blasint,
        B_array: *mut *const ::std::os::raw::c_void,
        ldb_array: *const blasint,
        beta_array: *const ::std::os::raw::c_void,
        C_array: *mut *mut ::std::os::raw::c_void,
        ldc_array: *const blasint,
        group_count: blasint,
        group_size: *const blasint,
    );
}
unsafe extern "C" {
    #[doc = " BFLOAT16 and INT8 extensions"]
    pub fn cblas_sbstobf16(
        n: blasint,
        in_: *const f32,
        incin: blasint,
        out: *mut bfloat16,
        incout: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sbdtobf16(
        n: blasint,
        in_: *const f64,
        incin: blasint,
        out: *mut bfloat16,
        incout: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sbf16tos(
        n: blasint,
        in_: *const bfloat16,
        incin: blasint,
        out: *mut f32,
        incout: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_dbf16tod(
        n: blasint,
        in_: *const bfloat16,
        incin: blasint,
        out: *mut f64,
        incout: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sbdot(
        n: blasint,
        x: *const bfloat16,
        incx: blasint,
        y: *const bfloat16,
        incy: blasint,
    ) -> f32;
}
unsafe extern "C" {
    pub fn cblas_sbgemv(
        order: CBLAS_ORDER,
        trans: CBLAS_TRANSPOSE,
        m: blasint,
        n: blasint,
        alpha: f32,
        a: *const bfloat16,
        lda: blasint,
        x: *const bfloat16,
        incx: blasint,
        beta: f32,
        y: *mut f32,
        incy: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sbgemm(
        Order: CBLAS_ORDER,
        TransA: CBLAS_TRANSPOSE,
        TransB: CBLAS_TRANSPOSE,
        M: blasint,
        N: blasint,
        K: blasint,
        alpha: f32,
        A: *const bfloat16,
        lda: blasint,
        B: *const bfloat16,
        ldb: blasint,
        beta: f32,
        C: *mut f32,
        ldc: blasint,
    );
}
unsafe extern "C" {
    pub fn cblas_sbgemm_batch(
        Order: CBLAS_ORDER,
        TransA_array: *const CBLAS_TRANSPOSE,
        TransB_array: *const CBLAS_TRANSPOSE,
        M_array: *const blasint,
        N_array: *const blasint,
        K_array: *const blasint,
        alpha_array: *const f32,
        A_array: *mut *const bfloat16,
        lda_array: *const blasint,
        B_array: *mut *const bfloat16,
        ldb_array: *const blasint,
        beta_array: *const f32,
        C_array: *mut *mut f32,
        ldc_array: *const blasint,
        group_count: blasint,
        group_size: *const blasint,
    );
}
pub type __darwin_nl_item = ::std::os::raw::c_int;
pub type __darwin_wctrans_t = ::std::os::raw::c_int;
pub type __darwin_wctype_t = __uint32_t;
pub const idtype_t_P_ALL: idtype_t = 0;
pub const idtype_t_P_PID: idtype_t = 1;
pub const idtype_t_P_PGID: idtype_t = 2;
pub type idtype_t = ::std::os::raw::c_uint;
pub type pid_t = __darwin_pid_t;
pub type id_t = __darwin_id_t;
pub type sig_atomic_t = ::std::os::raw::c_int;
pub type u_int8_t = ::std::os::raw::c_uchar;
pub type u_int16_t = ::std::os::raw::c_ushort;
pub type u_int32_t = ::std::os::raw::c_uint;
pub type u_int64_t = ::std::os::raw::c_ulonglong;
pub type register_t = i64;
pub type user_addr_t = u_int64_t;
pub type user_size_t = u_int64_t;
pub type user_ssize_t = i64;
pub type user_long_t = i64;
pub type user_ulong_t = u_int64_t;
pub type user_time_t = i64;
pub type user_off_t = i64;
pub type syscall_arg_t = u_int64_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_exception_state {
    pub __exception: __uint32_t,
    pub __fsr: __uint32_t,
    pub __far: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_exception_state"]
        [::std::mem::size_of::<__darwin_arm_exception_state>() - 12usize];
    ["Alignment of __darwin_arm_exception_state"]
        [::std::mem::align_of::<__darwin_arm_exception_state>() - 4usize];
    ["Offset of field: __darwin_arm_exception_state::__exception"]
        [::std::mem::offset_of!(__darwin_arm_exception_state, __exception) - 0usize];
    ["Offset of field: __darwin_arm_exception_state::__fsr"]
        [::std::mem::offset_of!(__darwin_arm_exception_state, __fsr) - 4usize];
    ["Offset of field: __darwin_arm_exception_state::__far"]
        [::std::mem::offset_of!(__darwin_arm_exception_state, __far) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_exception_state64 {
    pub __far: __uint64_t,
    pub __esr: __uint32_t,
    pub __exception: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_exception_state64"]
        [::std::mem::size_of::<__darwin_arm_exception_state64>() - 16usize];
    ["Alignment of __darwin_arm_exception_state64"]
        [::std::mem::align_of::<__darwin_arm_exception_state64>() - 8usize];
    ["Offset of field: __darwin_arm_exception_state64::__far"]
        [::std::mem::offset_of!(__darwin_arm_exception_state64, __far) - 0usize];
    ["Offset of field: __darwin_arm_exception_state64::__esr"]
        [::std::mem::offset_of!(__darwin_arm_exception_state64, __esr) - 8usize];
    ["Offset of field: __darwin_arm_exception_state64::__exception"]
        [::std::mem::offset_of!(__darwin_arm_exception_state64, __exception) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_exception_state64_v2 {
    pub __far: __uint64_t,
    pub __esr: __uint64_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_exception_state64_v2"]
        [::std::mem::size_of::<__darwin_arm_exception_state64_v2>() - 16usize];
    ["Alignment of __darwin_arm_exception_state64_v2"]
        [::std::mem::align_of::<__darwin_arm_exception_state64_v2>() - 8usize];
    ["Offset of field: __darwin_arm_exception_state64_v2::__far"]
        [::std::mem::offset_of!(__darwin_arm_exception_state64_v2, __far) - 0usize];
    ["Offset of field: __darwin_arm_exception_state64_v2::__esr"]
        [::std::mem::offset_of!(__darwin_arm_exception_state64_v2, __esr) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_thread_state {
    pub __r: [__uint32_t; 13usize],
    pub __sp: __uint32_t,
    pub __lr: __uint32_t,
    pub __pc: __uint32_t,
    pub __cpsr: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_thread_state"]
        [::std::mem::size_of::<__darwin_arm_thread_state>() - 68usize];
    ["Alignment of __darwin_arm_thread_state"]
        [::std::mem::align_of::<__darwin_arm_thread_state>() - 4usize];
    ["Offset of field: __darwin_arm_thread_state::__r"]
        [::std::mem::offset_of!(__darwin_arm_thread_state, __r) - 0usize];
    ["Offset of field: __darwin_arm_thread_state::__sp"]
        [::std::mem::offset_of!(__darwin_arm_thread_state, __sp) - 52usize];
    ["Offset of field: __darwin_arm_thread_state::__lr"]
        [::std::mem::offset_of!(__darwin_arm_thread_state, __lr) - 56usize];
    ["Offset of field: __darwin_arm_thread_state::__pc"]
        [::std::mem::offset_of!(__darwin_arm_thread_state, __pc) - 60usize];
    ["Offset of field: __darwin_arm_thread_state::__cpsr"]
        [::std::mem::offset_of!(__darwin_arm_thread_state, __cpsr) - 64usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_thread_state64 {
    pub __x: [__uint64_t; 29usize],
    pub __fp: __uint64_t,
    pub __lr: __uint64_t,
    pub __sp: __uint64_t,
    pub __pc: __uint64_t,
    pub __cpsr: __uint32_t,
    pub __pad: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_thread_state64"]
        [::std::mem::size_of::<__darwin_arm_thread_state64>() - 272usize];
    ["Alignment of __darwin_arm_thread_state64"]
        [::std::mem::align_of::<__darwin_arm_thread_state64>() - 8usize];
    ["Offset of field: __darwin_arm_thread_state64::__x"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __x) - 0usize];
    ["Offset of field: __darwin_arm_thread_state64::__fp"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __fp) - 232usize];
    ["Offset of field: __darwin_arm_thread_state64::__lr"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __lr) - 240usize];
    ["Offset of field: __darwin_arm_thread_state64::__sp"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __sp) - 248usize];
    ["Offset of field: __darwin_arm_thread_state64::__pc"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __pc) - 256usize];
    ["Offset of field: __darwin_arm_thread_state64::__cpsr"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __cpsr) - 264usize];
    ["Offset of field: __darwin_arm_thread_state64::__pad"]
        [::std::mem::offset_of!(__darwin_arm_thread_state64, __pad) - 268usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_vfp_state {
    pub __r: [__uint32_t; 64usize],
    pub __fpscr: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_vfp_state"][::std::mem::size_of::<__darwin_arm_vfp_state>() - 260usize];
    ["Alignment of __darwin_arm_vfp_state"]
        [::std::mem::align_of::<__darwin_arm_vfp_state>() - 4usize];
    ["Offset of field: __darwin_arm_vfp_state::__r"]
        [::std::mem::offset_of!(__darwin_arm_vfp_state, __r) - 0usize];
    ["Offset of field: __darwin_arm_vfp_state::__fpscr"]
        [::std::mem::offset_of!(__darwin_arm_vfp_state, __fpscr) - 256usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_neon_state64 {
    pub __v: [__uint128_t; 32usize],
    pub __fpsr: __uint32_t,
    pub __fpcr: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_neon_state64"]
        [::std::mem::size_of::<__darwin_arm_neon_state64>() - 528usize];
    ["Alignment of __darwin_arm_neon_state64"]
        [::std::mem::align_of::<__darwin_arm_neon_state64>() - 16usize];
    ["Offset of field: __darwin_arm_neon_state64::__v"]
        [::std::mem::offset_of!(__darwin_arm_neon_state64, __v) - 0usize];
    ["Offset of field: __darwin_arm_neon_state64::__fpsr"]
        [::std::mem::offset_of!(__darwin_arm_neon_state64, __fpsr) - 512usize];
    ["Offset of field: __darwin_arm_neon_state64::__fpcr"]
        [::std::mem::offset_of!(__darwin_arm_neon_state64, __fpcr) - 516usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_neon_state {
    pub __v: [__uint128_t; 16usize],
    pub __fpsr: __uint32_t,
    pub __fpcr: __uint32_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_neon_state"]
        [::std::mem::size_of::<__darwin_arm_neon_state>() - 272usize];
    ["Alignment of __darwin_arm_neon_state"]
        [::std::mem::align_of::<__darwin_arm_neon_state>() - 16usize];
    ["Offset of field: __darwin_arm_neon_state::__v"]
        [::std::mem::offset_of!(__darwin_arm_neon_state, __v) - 0usize];
    ["Offset of field: __darwin_arm_neon_state::__fpsr"]
        [::std::mem::offset_of!(__darwin_arm_neon_state, __fpsr) - 256usize];
    ["Offset of field: __darwin_arm_neon_state::__fpcr"]
        [::std::mem::offset_of!(__darwin_arm_neon_state, __fpcr) - 260usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __arm_pagein_state {
    pub __pagein_error: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __arm_pagein_state"][::std::mem::size_of::<__arm_pagein_state>() - 4usize];
    ["Alignment of __arm_pagein_state"][::std::mem::align_of::<__arm_pagein_state>() - 4usize];
    ["Offset of field: __arm_pagein_state::__pagein_error"]
        [::std::mem::offset_of!(__arm_pagein_state, __pagein_error) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_sme_state {
    pub __svcr: __uint64_t,
    pub __tpidr2_el0: __uint64_t,
    pub __svl_b: __uint16_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_sme_state"][::std::mem::size_of::<__darwin_arm_sme_state>() - 24usize];
    ["Alignment of __darwin_arm_sme_state"]
        [::std::mem::align_of::<__darwin_arm_sme_state>() - 8usize];
    ["Offset of field: __darwin_arm_sme_state::__svcr"]
        [::std::mem::offset_of!(__darwin_arm_sme_state, __svcr) - 0usize];
    ["Offset of field: __darwin_arm_sme_state::__tpidr2_el0"]
        [::std::mem::offset_of!(__darwin_arm_sme_state, __tpidr2_el0) - 8usize];
    ["Offset of field: __darwin_arm_sme_state::__svl_b"]
        [::std::mem::offset_of!(__darwin_arm_sme_state, __svl_b) - 16usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_sve_z_state {
    pub __z: [[::std::os::raw::c_char; 256usize]; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_sve_z_state"]
        [::std::mem::size_of::<__darwin_arm_sve_z_state>() - 4096usize];
    ["Alignment of __darwin_arm_sve_z_state"]
        [::std::mem::align_of::<__darwin_arm_sve_z_state>() - 4usize];
    ["Offset of field: __darwin_arm_sve_z_state::__z"]
        [::std::mem::offset_of!(__darwin_arm_sve_z_state, __z) - 0usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_sve_p_state {
    pub __p: [[::std::os::raw::c_char; 32usize]; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_sve_p_state"]
        [::std::mem::size_of::<__darwin_arm_sve_p_state>() - 512usize];
    ["Alignment of __darwin_arm_sve_p_state"]
        [::std::mem::align_of::<__darwin_arm_sve_p_state>() - 4usize];
    ["Offset of field: __darwin_arm_sve_p_state::__p"]
        [::std::mem::offset_of!(__darwin_arm_sve_p_state, __p) - 0usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_sme_za_state {
    pub __za: [::std::os::raw::c_char; 4096usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_sme_za_state"]
        [::std::mem::size_of::<__darwin_arm_sme_za_state>() - 4096usize];
    ["Alignment of __darwin_arm_sme_za_state"]
        [::std::mem::align_of::<__darwin_arm_sme_za_state>() - 4usize];
    ["Offset of field: __darwin_arm_sme_za_state::__za"]
        [::std::mem::offset_of!(__darwin_arm_sme_za_state, __za) - 0usize];
};
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_sme2_state {
    pub __zt0: [::std::os::raw::c_char; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_sme2_state"][::std::mem::size_of::<__darwin_arm_sme2_state>() - 64usize];
    ["Alignment of __darwin_arm_sme2_state"]
        [::std::mem::align_of::<__darwin_arm_sme2_state>() - 4usize];
    ["Offset of field: __darwin_arm_sme2_state::__zt0"]
        [::std::mem::offset_of!(__darwin_arm_sme2_state, __zt0) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __arm_legacy_debug_state {
    pub __bvr: [__uint32_t; 16usize],
    pub __bcr: [__uint32_t; 16usize],
    pub __wvr: [__uint32_t; 16usize],
    pub __wcr: [__uint32_t; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __arm_legacy_debug_state"]
        [::std::mem::size_of::<__arm_legacy_debug_state>() - 256usize];
    ["Alignment of __arm_legacy_debug_state"]
        [::std::mem::align_of::<__arm_legacy_debug_state>() - 4usize];
    ["Offset of field: __arm_legacy_debug_state::__bvr"]
        [::std::mem::offset_of!(__arm_legacy_debug_state, __bvr) - 0usize];
    ["Offset of field: __arm_legacy_debug_state::__bcr"]
        [::std::mem::offset_of!(__arm_legacy_debug_state, __bcr) - 64usize];
    ["Offset of field: __arm_legacy_debug_state::__wvr"]
        [::std::mem::offset_of!(__arm_legacy_debug_state, __wvr) - 128usize];
    ["Offset of field: __arm_legacy_debug_state::__wcr"]
        [::std::mem::offset_of!(__arm_legacy_debug_state, __wcr) - 192usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_debug_state32 {
    pub __bvr: [__uint32_t; 16usize],
    pub __bcr: [__uint32_t; 16usize],
    pub __wvr: [__uint32_t; 16usize],
    pub __wcr: [__uint32_t; 16usize],
    pub __mdscr_el1: __uint64_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_debug_state32"]
        [::std::mem::size_of::<__darwin_arm_debug_state32>() - 264usize];
    ["Alignment of __darwin_arm_debug_state32"]
        [::std::mem::align_of::<__darwin_arm_debug_state32>() - 8usize];
    ["Offset of field: __darwin_arm_debug_state32::__bvr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state32, __bvr) - 0usize];
    ["Offset of field: __darwin_arm_debug_state32::__bcr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state32, __bcr) - 64usize];
    ["Offset of field: __darwin_arm_debug_state32::__wvr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state32, __wvr) - 128usize];
    ["Offset of field: __darwin_arm_debug_state32::__wcr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state32, __wcr) - 192usize];
    ["Offset of field: __darwin_arm_debug_state32::__mdscr_el1"]
        [::std::mem::offset_of!(__darwin_arm_debug_state32, __mdscr_el1) - 256usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_debug_state64 {
    pub __bvr: [__uint64_t; 16usize],
    pub __bcr: [__uint64_t; 16usize],
    pub __wvr: [__uint64_t; 16usize],
    pub __wcr: [__uint64_t; 16usize],
    pub __mdscr_el1: __uint64_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_debug_state64"]
        [::std::mem::size_of::<__darwin_arm_debug_state64>() - 520usize];
    ["Alignment of __darwin_arm_debug_state64"]
        [::std::mem::align_of::<__darwin_arm_debug_state64>() - 8usize];
    ["Offset of field: __darwin_arm_debug_state64::__bvr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state64, __bvr) - 0usize];
    ["Offset of field: __darwin_arm_debug_state64::__bcr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state64, __bcr) - 128usize];
    ["Offset of field: __darwin_arm_debug_state64::__wvr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state64, __wvr) - 256usize];
    ["Offset of field: __darwin_arm_debug_state64::__wcr"]
        [::std::mem::offset_of!(__darwin_arm_debug_state64, __wcr) - 384usize];
    ["Offset of field: __darwin_arm_debug_state64::__mdscr_el1"]
        [::std::mem::offset_of!(__darwin_arm_debug_state64, __mdscr_el1) - 512usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_arm_cpmu_state64 {
    pub __ctrs: [__uint64_t; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_arm_cpmu_state64"]
        [::std::mem::size_of::<__darwin_arm_cpmu_state64>() - 128usize];
    ["Alignment of __darwin_arm_cpmu_state64"]
        [::std::mem::align_of::<__darwin_arm_cpmu_state64>() - 8usize];
    ["Offset of field: __darwin_arm_cpmu_state64::__ctrs"]
        [::std::mem::offset_of!(__darwin_arm_cpmu_state64, __ctrs) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_mcontext32 {
    pub __es: __darwin_arm_exception_state,
    pub __ss: __darwin_arm_thread_state,
    pub __fs: __darwin_arm_vfp_state,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_mcontext32"][::std::mem::size_of::<__darwin_mcontext32>() - 340usize];
    ["Alignment of __darwin_mcontext32"][::std::mem::align_of::<__darwin_mcontext32>() - 4usize];
    ["Offset of field: __darwin_mcontext32::__es"]
        [::std::mem::offset_of!(__darwin_mcontext32, __es) - 0usize];
    ["Offset of field: __darwin_mcontext32::__ss"]
        [::std::mem::offset_of!(__darwin_mcontext32, __ss) - 12usize];
    ["Offset of field: __darwin_mcontext32::__fs"]
        [::std::mem::offset_of!(__darwin_mcontext32, __fs) - 80usize];
};
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_mcontext64 {
    pub __es: __darwin_arm_exception_state64,
    pub __ss: __darwin_arm_thread_state64,
    pub __ns: __darwin_arm_neon_state64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_mcontext64"][::std::mem::size_of::<__darwin_mcontext64>() - 816usize];
    ["Alignment of __darwin_mcontext64"][::std::mem::align_of::<__darwin_mcontext64>() - 16usize];
    ["Offset of field: __darwin_mcontext64::__es"]
        [::std::mem::offset_of!(__darwin_mcontext64, __es) - 0usize];
    ["Offset of field: __darwin_mcontext64::__ss"]
        [::std::mem::offset_of!(__darwin_mcontext64, __ss) - 16usize];
    ["Offset of field: __darwin_mcontext64::__ns"]
        [::std::mem::offset_of!(__darwin_mcontext64, __ns) - 288usize];
};
pub type mcontext_t = *mut __darwin_mcontext64;
pub type pthread_attr_t = __darwin_pthread_attr_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_sigaltstack {
    pub ss_sp: *mut ::std::os::raw::c_void,
    pub ss_size: __darwin_size_t,
    pub ss_flags: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_sigaltstack"][::std::mem::size_of::<__darwin_sigaltstack>() - 24usize];
    ["Alignment of __darwin_sigaltstack"][::std::mem::align_of::<__darwin_sigaltstack>() - 8usize];
    ["Offset of field: __darwin_sigaltstack::ss_sp"]
        [::std::mem::offset_of!(__darwin_sigaltstack, ss_sp) - 0usize];
    ["Offset of field: __darwin_sigaltstack::ss_size"]
        [::std::mem::offset_of!(__darwin_sigaltstack, ss_size) - 8usize];
    ["Offset of field: __darwin_sigaltstack::ss_flags"]
        [::std::mem::offset_of!(__darwin_sigaltstack, ss_flags) - 16usize];
};
pub type stack_t = __darwin_sigaltstack;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_ucontext {
    pub uc_onstack: ::std::os::raw::c_int,
    pub uc_sigmask: __darwin_sigset_t,
    pub uc_stack: __darwin_sigaltstack,
    pub uc_link: *mut __darwin_ucontext,
    pub uc_mcsize: __darwin_size_t,
    pub uc_mcontext: *mut __darwin_mcontext64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_ucontext"][::std::mem::size_of::<__darwin_ucontext>() - 56usize];
    ["Alignment of __darwin_ucontext"][::std::mem::align_of::<__darwin_ucontext>() - 8usize];
    ["Offset of field: __darwin_ucontext::uc_onstack"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_onstack) - 0usize];
    ["Offset of field: __darwin_ucontext::uc_sigmask"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_sigmask) - 4usize];
    ["Offset of field: __darwin_ucontext::uc_stack"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_stack) - 8usize];
    ["Offset of field: __darwin_ucontext::uc_link"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_link) - 32usize];
    ["Offset of field: __darwin_ucontext::uc_mcsize"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_mcsize) - 40usize];
    ["Offset of field: __darwin_ucontext::uc_mcontext"]
        [::std::mem::offset_of!(__darwin_ucontext, uc_mcontext) - 48usize];
};
pub type ucontext_t = __darwin_ucontext;
pub type sigset_t = __darwin_sigset_t;
pub type uid_t = __darwin_uid_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub union sigval {
    pub sival_int: ::std::os::raw::c_int,
    pub sival_ptr: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sigval"][::std::mem::size_of::<sigval>() - 8usize];
    ["Alignment of sigval"][::std::mem::align_of::<sigval>() - 8usize];
    ["Offset of field: sigval::sival_int"][::std::mem::offset_of!(sigval, sival_int) - 0usize];
    ["Offset of field: sigval::sival_ptr"][::std::mem::offset_of!(sigval, sival_ptr) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct sigevent {
    pub sigev_notify: ::std::os::raw::c_int,
    pub sigev_signo: ::std::os::raw::c_int,
    pub sigev_value: sigval,
    pub sigev_notify_function: ::std::option::Option<unsafe extern "C" fn(arg1: sigval)>,
    pub sigev_notify_attributes: *mut pthread_attr_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sigevent"][::std::mem::size_of::<sigevent>() - 32usize];
    ["Alignment of sigevent"][::std::mem::align_of::<sigevent>() - 8usize];
    ["Offset of field: sigevent::sigev_notify"]
        [::std::mem::offset_of!(sigevent, sigev_notify) - 0usize];
    ["Offset of field: sigevent::sigev_signo"]
        [::std::mem::offset_of!(sigevent, sigev_signo) - 4usize];
    ["Offset of field: sigevent::sigev_value"]
        [::std::mem::offset_of!(sigevent, sigev_value) - 8usize];
    ["Offset of field: sigevent::sigev_notify_function"]
        [::std::mem::offset_of!(sigevent, sigev_notify_function) - 16usize];
    ["Offset of field: sigevent::sigev_notify_attributes"]
        [::std::mem::offset_of!(sigevent, sigev_notify_attributes) - 24usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __siginfo {
    pub si_signo: ::std::os::raw::c_int,
    pub si_errno: ::std::os::raw::c_int,
    pub si_code: ::std::os::raw::c_int,
    pub si_pid: pid_t,
    pub si_uid: uid_t,
    pub si_status: ::std::os::raw::c_int,
    pub si_addr: *mut ::std::os::raw::c_void,
    pub si_value: sigval,
    pub si_band: ::std::os::raw::c_long,
    pub __pad: [::std::os::raw::c_ulong; 7usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __siginfo"][::std::mem::size_of::<__siginfo>() - 104usize];
    ["Alignment of __siginfo"][::std::mem::align_of::<__siginfo>() - 8usize];
    ["Offset of field: __siginfo::si_signo"][::std::mem::offset_of!(__siginfo, si_signo) - 0usize];
    ["Offset of field: __siginfo::si_errno"][::std::mem::offset_of!(__siginfo, si_errno) - 4usize];
    ["Offset of field: __siginfo::si_code"][::std::mem::offset_of!(__siginfo, si_code) - 8usize];
    ["Offset of field: __siginfo::si_pid"][::std::mem::offset_of!(__siginfo, si_pid) - 12usize];
    ["Offset of field: __siginfo::si_uid"][::std::mem::offset_of!(__siginfo, si_uid) - 16usize];
    ["Offset of field: __siginfo::si_status"]
        [::std::mem::offset_of!(__siginfo, si_status) - 20usize];
    ["Offset of field: __siginfo::si_addr"][::std::mem::offset_of!(__siginfo, si_addr) - 24usize];
    ["Offset of field: __siginfo::si_value"][::std::mem::offset_of!(__siginfo, si_value) - 32usize];
    ["Offset of field: __siginfo::si_band"][::std::mem::offset_of!(__siginfo, si_band) - 40usize];
    ["Offset of field: __siginfo::__pad"][::std::mem::offset_of!(__siginfo, __pad) - 48usize];
};
pub type siginfo_t = __siginfo;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __sigaction_u {
    pub __sa_handler: ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>,
    pub __sa_sigaction: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: ::std::os::raw::c_int,
            arg2: *mut __siginfo,
            arg3: *mut ::std::os::raw::c_void,
        ),
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __sigaction_u"][::std::mem::size_of::<__sigaction_u>() - 8usize];
    ["Alignment of __sigaction_u"][::std::mem::align_of::<__sigaction_u>() - 8usize];
    ["Offset of field: __sigaction_u::__sa_handler"]
        [::std::mem::offset_of!(__sigaction_u, __sa_handler) - 0usize];
    ["Offset of field: __sigaction_u::__sa_sigaction"]
        [::std::mem::offset_of!(__sigaction_u, __sa_sigaction) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __sigaction {
    pub __sigaction_u: __sigaction_u,
    pub sa_tramp: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut ::std::os::raw::c_void,
            arg2: ::std::os::raw::c_int,
            arg3: ::std::os::raw::c_int,
            arg4: *mut siginfo_t,
            arg5: *mut ::std::os::raw::c_void,
        ),
    >,
    pub sa_mask: sigset_t,
    pub sa_flags: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __sigaction"][::std::mem::size_of::<__sigaction>() - 24usize];
    ["Alignment of __sigaction"][::std::mem::align_of::<__sigaction>() - 8usize];
    ["Offset of field: __sigaction::__sigaction_u"]
        [::std::mem::offset_of!(__sigaction, __sigaction_u) - 0usize];
    ["Offset of field: __sigaction::sa_tramp"]
        [::std::mem::offset_of!(__sigaction, sa_tramp) - 8usize];
    ["Offset of field: __sigaction::sa_mask"]
        [::std::mem::offset_of!(__sigaction, sa_mask) - 16usize];
    ["Offset of field: __sigaction::sa_flags"]
        [::std::mem::offset_of!(__sigaction, sa_flags) - 20usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct sigaction {
    pub __sigaction_u: __sigaction_u,
    pub sa_mask: sigset_t,
    pub sa_flags: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sigaction"][::std::mem::size_of::<sigaction>() - 16usize];
    ["Alignment of sigaction"][::std::mem::align_of::<sigaction>() - 8usize];
    ["Offset of field: sigaction::__sigaction_u"]
        [::std::mem::offset_of!(sigaction, __sigaction_u) - 0usize];
    ["Offset of field: sigaction::sa_mask"][::std::mem::offset_of!(sigaction, sa_mask) - 8usize];
    ["Offset of field: sigaction::sa_flags"][::std::mem::offset_of!(sigaction, sa_flags) - 12usize];
};
pub type sig_t = ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sigvec {
    pub sv_handler: ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>,
    pub sv_mask: ::std::os::raw::c_int,
    pub sv_flags: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sigvec"][::std::mem::size_of::<sigvec>() - 16usize];
    ["Alignment of sigvec"][::std::mem::align_of::<sigvec>() - 8usize];
    ["Offset of field: sigvec::sv_handler"][::std::mem::offset_of!(sigvec, sv_handler) - 0usize];
    ["Offset of field: sigvec::sv_mask"][::std::mem::offset_of!(sigvec, sv_mask) - 8usize];
    ["Offset of field: sigvec::sv_flags"][::std::mem::offset_of!(sigvec, sv_flags) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sigstack {
    pub ss_sp: *mut ::std::os::raw::c_char,
    pub ss_onstack: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of sigstack"][::std::mem::size_of::<sigstack>() - 16usize];
    ["Alignment of sigstack"][::std::mem::align_of::<sigstack>() - 8usize];
    ["Offset of field: sigstack::ss_sp"][::std::mem::offset_of!(sigstack, ss_sp) - 0usize];
    ["Offset of field: sigstack::ss_onstack"]
        [::std::mem::offset_of!(sigstack, ss_onstack) - 8usize];
};
unsafe extern "C" {
    pub fn signal(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>,
    ) -> ::std::option::Option<
        unsafe extern "C" fn(
            arg1: ::std::os::raw::c_int,
            arg2: ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>,
        ),
    >;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timeval {
    pub tv_sec: __darwin_time_t,
    pub tv_usec: __darwin_suseconds_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of timeval"][::std::mem::size_of::<timeval>() - 16usize];
    ["Alignment of timeval"][::std::mem::align_of::<timeval>() - 8usize];
    ["Offset of field: timeval::tv_sec"][::std::mem::offset_of!(timeval, tv_sec) - 0usize];
    ["Offset of field: timeval::tv_usec"][::std::mem::offset_of!(timeval, tv_usec) - 8usize];
};
pub type rlim_t = __uint64_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage {
    pub ru_utime: timeval,
    pub ru_stime: timeval,
    pub ru_maxrss: ::std::os::raw::c_long,
    pub ru_ixrss: ::std::os::raw::c_long,
    pub ru_idrss: ::std::os::raw::c_long,
    pub ru_isrss: ::std::os::raw::c_long,
    pub ru_minflt: ::std::os::raw::c_long,
    pub ru_majflt: ::std::os::raw::c_long,
    pub ru_nswap: ::std::os::raw::c_long,
    pub ru_inblock: ::std::os::raw::c_long,
    pub ru_oublock: ::std::os::raw::c_long,
    pub ru_msgsnd: ::std::os::raw::c_long,
    pub ru_msgrcv: ::std::os::raw::c_long,
    pub ru_nsignals: ::std::os::raw::c_long,
    pub ru_nvcsw: ::std::os::raw::c_long,
    pub ru_nivcsw: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage"][::std::mem::size_of::<rusage>() - 144usize];
    ["Alignment of rusage"][::std::mem::align_of::<rusage>() - 8usize];
    ["Offset of field: rusage::ru_utime"][::std::mem::offset_of!(rusage, ru_utime) - 0usize];
    ["Offset of field: rusage::ru_stime"][::std::mem::offset_of!(rusage, ru_stime) - 16usize];
    ["Offset of field: rusage::ru_maxrss"][::std::mem::offset_of!(rusage, ru_maxrss) - 32usize];
    ["Offset of field: rusage::ru_ixrss"][::std::mem::offset_of!(rusage, ru_ixrss) - 40usize];
    ["Offset of field: rusage::ru_idrss"][::std::mem::offset_of!(rusage, ru_idrss) - 48usize];
    ["Offset of field: rusage::ru_isrss"][::std::mem::offset_of!(rusage, ru_isrss) - 56usize];
    ["Offset of field: rusage::ru_minflt"][::std::mem::offset_of!(rusage, ru_minflt) - 64usize];
    ["Offset of field: rusage::ru_majflt"][::std::mem::offset_of!(rusage, ru_majflt) - 72usize];
    ["Offset of field: rusage::ru_nswap"][::std::mem::offset_of!(rusage, ru_nswap) - 80usize];
    ["Offset of field: rusage::ru_inblock"][::std::mem::offset_of!(rusage, ru_inblock) - 88usize];
    ["Offset of field: rusage::ru_oublock"][::std::mem::offset_of!(rusage, ru_oublock) - 96usize];
    ["Offset of field: rusage::ru_msgsnd"][::std::mem::offset_of!(rusage, ru_msgsnd) - 104usize];
    ["Offset of field: rusage::ru_msgrcv"][::std::mem::offset_of!(rusage, ru_msgrcv) - 112usize];
    ["Offset of field: rusage::ru_nsignals"]
        [::std::mem::offset_of!(rusage, ru_nsignals) - 120usize];
    ["Offset of field: rusage::ru_nvcsw"][::std::mem::offset_of!(rusage, ru_nvcsw) - 128usize];
    ["Offset of field: rusage::ru_nivcsw"][::std::mem::offset_of!(rusage, ru_nivcsw) - 136usize];
};
pub type rusage_info_t = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v0 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v0"][::std::mem::size_of::<rusage_info_v0>() - 96usize];
    ["Alignment of rusage_info_v0"][::std::mem::align_of::<rusage_info_v0>() - 8usize];
    ["Offset of field: rusage_info_v0::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v0, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v0::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v0, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v0::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v0, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v0::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v0, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v0::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v0, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v0::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v0, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v0::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v0, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v0::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v0, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v0::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v0, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v0::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v0, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v0::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v0, ri_proc_exit_abstime) - 88usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v1 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v1"][::std::mem::size_of::<rusage_info_v1>() - 144usize];
    ["Alignment of rusage_info_v1"][::std::mem::align_of::<rusage_info_v1>() - 8usize];
    ["Offset of field: rusage_info_v1::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v1, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v1::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v1, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v1::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v1, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v1::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v1, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v1::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v1, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v1::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v1, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v1::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v1, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v1::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v1, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v1::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v1, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v1::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v1, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v1::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v1, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v1::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v1::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v1::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v1::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v1::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v1::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v1, ri_child_elapsed_abstime) - 136usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v2 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
    pub ri_diskio_bytesread: u64,
    pub ri_diskio_byteswritten: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v2"][::std::mem::size_of::<rusage_info_v2>() - 160usize];
    ["Alignment of rusage_info_v2"][::std::mem::align_of::<rusage_info_v2>() - 8usize];
    ["Offset of field: rusage_info_v2::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v2, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v2::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v2, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v2::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v2, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v2::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v2, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v2::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v2, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v2::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v2, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v2::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v2, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v2::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v2, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v2::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v2, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v2::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v2, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v2::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v2, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v2::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v2::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v2::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v2::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v2::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v2::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v2, ri_child_elapsed_abstime) - 136usize];
    ["Offset of field: rusage_info_v2::ri_diskio_bytesread"]
        [::std::mem::offset_of!(rusage_info_v2, ri_diskio_bytesread) - 144usize];
    ["Offset of field: rusage_info_v2::ri_diskio_byteswritten"]
        [::std::mem::offset_of!(rusage_info_v2, ri_diskio_byteswritten) - 152usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v3 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
    pub ri_diskio_bytesread: u64,
    pub ri_diskio_byteswritten: u64,
    pub ri_cpu_time_qos_default: u64,
    pub ri_cpu_time_qos_maintenance: u64,
    pub ri_cpu_time_qos_background: u64,
    pub ri_cpu_time_qos_utility: u64,
    pub ri_cpu_time_qos_legacy: u64,
    pub ri_cpu_time_qos_user_initiated: u64,
    pub ri_cpu_time_qos_user_interactive: u64,
    pub ri_billed_system_time: u64,
    pub ri_serviced_system_time: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v3"][::std::mem::size_of::<rusage_info_v3>() - 232usize];
    ["Alignment of rusage_info_v3"][::std::mem::align_of::<rusage_info_v3>() - 8usize];
    ["Offset of field: rusage_info_v3::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v3, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v3::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v3::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v3::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v3, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v3::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v3, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v3::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v3, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v3::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v3, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v3::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v3, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v3::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v3, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v3::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v3, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v3::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v3, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v3::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v3::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v3::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v3::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v3::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v3::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v3, ri_child_elapsed_abstime) - 136usize];
    ["Offset of field: rusage_info_v3::ri_diskio_bytesread"]
        [::std::mem::offset_of!(rusage_info_v3, ri_diskio_bytesread) - 144usize];
    ["Offset of field: rusage_info_v3::ri_diskio_byteswritten"]
        [::std::mem::offset_of!(rusage_info_v3, ri_diskio_byteswritten) - 152usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_default"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_default) - 160usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_maintenance"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_maintenance) - 168usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_background"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_background) - 176usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_utility"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_utility) - 184usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_legacy"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_legacy) - 192usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_user_initiated"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_user_initiated) - 200usize];
    ["Offset of field: rusage_info_v3::ri_cpu_time_qos_user_interactive"]
        [::std::mem::offset_of!(rusage_info_v3, ri_cpu_time_qos_user_interactive) - 208usize];
    ["Offset of field: rusage_info_v3::ri_billed_system_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_billed_system_time) - 216usize];
    ["Offset of field: rusage_info_v3::ri_serviced_system_time"]
        [::std::mem::offset_of!(rusage_info_v3, ri_serviced_system_time) - 224usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v4 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
    pub ri_diskio_bytesread: u64,
    pub ri_diskio_byteswritten: u64,
    pub ri_cpu_time_qos_default: u64,
    pub ri_cpu_time_qos_maintenance: u64,
    pub ri_cpu_time_qos_background: u64,
    pub ri_cpu_time_qos_utility: u64,
    pub ri_cpu_time_qos_legacy: u64,
    pub ri_cpu_time_qos_user_initiated: u64,
    pub ri_cpu_time_qos_user_interactive: u64,
    pub ri_billed_system_time: u64,
    pub ri_serviced_system_time: u64,
    pub ri_logical_writes: u64,
    pub ri_lifetime_max_phys_footprint: u64,
    pub ri_instructions: u64,
    pub ri_cycles: u64,
    pub ri_billed_energy: u64,
    pub ri_serviced_energy: u64,
    pub ri_interval_max_phys_footprint: u64,
    pub ri_runnable_time: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v4"][::std::mem::size_of::<rusage_info_v4>() - 296usize];
    ["Alignment of rusage_info_v4"][::std::mem::align_of::<rusage_info_v4>() - 8usize];
    ["Offset of field: rusage_info_v4::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v4, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v4::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v4::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v4::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v4, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v4::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v4, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v4::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v4, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v4::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v4, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v4::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v4, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v4::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v4, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v4::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v4, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v4::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v4, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v4::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v4::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v4::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v4::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v4::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v4::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v4, ri_child_elapsed_abstime) - 136usize];
    ["Offset of field: rusage_info_v4::ri_diskio_bytesread"]
        [::std::mem::offset_of!(rusage_info_v4, ri_diskio_bytesread) - 144usize];
    ["Offset of field: rusage_info_v4::ri_diskio_byteswritten"]
        [::std::mem::offset_of!(rusage_info_v4, ri_diskio_byteswritten) - 152usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_default"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_default) - 160usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_maintenance"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_maintenance) - 168usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_background"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_background) - 176usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_utility"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_utility) - 184usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_legacy"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_legacy) - 192usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_user_initiated"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_user_initiated) - 200usize];
    ["Offset of field: rusage_info_v4::ri_cpu_time_qos_user_interactive"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cpu_time_qos_user_interactive) - 208usize];
    ["Offset of field: rusage_info_v4::ri_billed_system_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_billed_system_time) - 216usize];
    ["Offset of field: rusage_info_v4::ri_serviced_system_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_serviced_system_time) - 224usize];
    ["Offset of field: rusage_info_v4::ri_logical_writes"]
        [::std::mem::offset_of!(rusage_info_v4, ri_logical_writes) - 232usize];
    ["Offset of field: rusage_info_v4::ri_lifetime_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v4, ri_lifetime_max_phys_footprint) - 240usize];
    ["Offset of field: rusage_info_v4::ri_instructions"]
        [::std::mem::offset_of!(rusage_info_v4, ri_instructions) - 248usize];
    ["Offset of field: rusage_info_v4::ri_cycles"]
        [::std::mem::offset_of!(rusage_info_v4, ri_cycles) - 256usize];
    ["Offset of field: rusage_info_v4::ri_billed_energy"]
        [::std::mem::offset_of!(rusage_info_v4, ri_billed_energy) - 264usize];
    ["Offset of field: rusage_info_v4::ri_serviced_energy"]
        [::std::mem::offset_of!(rusage_info_v4, ri_serviced_energy) - 272usize];
    ["Offset of field: rusage_info_v4::ri_interval_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v4, ri_interval_max_phys_footprint) - 280usize];
    ["Offset of field: rusage_info_v4::ri_runnable_time"]
        [::std::mem::offset_of!(rusage_info_v4, ri_runnable_time) - 288usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v5 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
    pub ri_diskio_bytesread: u64,
    pub ri_diskio_byteswritten: u64,
    pub ri_cpu_time_qos_default: u64,
    pub ri_cpu_time_qos_maintenance: u64,
    pub ri_cpu_time_qos_background: u64,
    pub ri_cpu_time_qos_utility: u64,
    pub ri_cpu_time_qos_legacy: u64,
    pub ri_cpu_time_qos_user_initiated: u64,
    pub ri_cpu_time_qos_user_interactive: u64,
    pub ri_billed_system_time: u64,
    pub ri_serviced_system_time: u64,
    pub ri_logical_writes: u64,
    pub ri_lifetime_max_phys_footprint: u64,
    pub ri_instructions: u64,
    pub ri_cycles: u64,
    pub ri_billed_energy: u64,
    pub ri_serviced_energy: u64,
    pub ri_interval_max_phys_footprint: u64,
    pub ri_runnable_time: u64,
    pub ri_flags: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v5"][::std::mem::size_of::<rusage_info_v5>() - 304usize];
    ["Alignment of rusage_info_v5"][::std::mem::align_of::<rusage_info_v5>() - 8usize];
    ["Offset of field: rusage_info_v5::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v5, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v5::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v5::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v5::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v5, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v5::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v5, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v5::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v5, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v5::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v5, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v5::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v5, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v5::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v5, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v5::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v5, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v5::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v5, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v5::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v5::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v5::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v5::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v5::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v5::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v5, ri_child_elapsed_abstime) - 136usize];
    ["Offset of field: rusage_info_v5::ri_diskio_bytesread"]
        [::std::mem::offset_of!(rusage_info_v5, ri_diskio_bytesread) - 144usize];
    ["Offset of field: rusage_info_v5::ri_diskio_byteswritten"]
        [::std::mem::offset_of!(rusage_info_v5, ri_diskio_byteswritten) - 152usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_default"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_default) - 160usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_maintenance"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_maintenance) - 168usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_background"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_background) - 176usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_utility"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_utility) - 184usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_legacy"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_legacy) - 192usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_user_initiated"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_user_initiated) - 200usize];
    ["Offset of field: rusage_info_v5::ri_cpu_time_qos_user_interactive"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cpu_time_qos_user_interactive) - 208usize];
    ["Offset of field: rusage_info_v5::ri_billed_system_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_billed_system_time) - 216usize];
    ["Offset of field: rusage_info_v5::ri_serviced_system_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_serviced_system_time) - 224usize];
    ["Offset of field: rusage_info_v5::ri_logical_writes"]
        [::std::mem::offset_of!(rusage_info_v5, ri_logical_writes) - 232usize];
    ["Offset of field: rusage_info_v5::ri_lifetime_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v5, ri_lifetime_max_phys_footprint) - 240usize];
    ["Offset of field: rusage_info_v5::ri_instructions"]
        [::std::mem::offset_of!(rusage_info_v5, ri_instructions) - 248usize];
    ["Offset of field: rusage_info_v5::ri_cycles"]
        [::std::mem::offset_of!(rusage_info_v5, ri_cycles) - 256usize];
    ["Offset of field: rusage_info_v5::ri_billed_energy"]
        [::std::mem::offset_of!(rusage_info_v5, ri_billed_energy) - 264usize];
    ["Offset of field: rusage_info_v5::ri_serviced_energy"]
        [::std::mem::offset_of!(rusage_info_v5, ri_serviced_energy) - 272usize];
    ["Offset of field: rusage_info_v5::ri_interval_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v5, ri_interval_max_phys_footprint) - 280usize];
    ["Offset of field: rusage_info_v5::ri_runnable_time"]
        [::std::mem::offset_of!(rusage_info_v5, ri_runnable_time) - 288usize];
    ["Offset of field: rusage_info_v5::ri_flags"]
        [::std::mem::offset_of!(rusage_info_v5, ri_flags) - 296usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rusage_info_v6 {
    pub ri_uuid: [u8; 16usize],
    pub ri_user_time: u64,
    pub ri_system_time: u64,
    pub ri_pkg_idle_wkups: u64,
    pub ri_interrupt_wkups: u64,
    pub ri_pageins: u64,
    pub ri_wired_size: u64,
    pub ri_resident_size: u64,
    pub ri_phys_footprint: u64,
    pub ri_proc_start_abstime: u64,
    pub ri_proc_exit_abstime: u64,
    pub ri_child_user_time: u64,
    pub ri_child_system_time: u64,
    pub ri_child_pkg_idle_wkups: u64,
    pub ri_child_interrupt_wkups: u64,
    pub ri_child_pageins: u64,
    pub ri_child_elapsed_abstime: u64,
    pub ri_diskio_bytesread: u64,
    pub ri_diskio_byteswritten: u64,
    pub ri_cpu_time_qos_default: u64,
    pub ri_cpu_time_qos_maintenance: u64,
    pub ri_cpu_time_qos_background: u64,
    pub ri_cpu_time_qos_utility: u64,
    pub ri_cpu_time_qos_legacy: u64,
    pub ri_cpu_time_qos_user_initiated: u64,
    pub ri_cpu_time_qos_user_interactive: u64,
    pub ri_billed_system_time: u64,
    pub ri_serviced_system_time: u64,
    pub ri_logical_writes: u64,
    pub ri_lifetime_max_phys_footprint: u64,
    pub ri_instructions: u64,
    pub ri_cycles: u64,
    pub ri_billed_energy: u64,
    pub ri_serviced_energy: u64,
    pub ri_interval_max_phys_footprint: u64,
    pub ri_runnable_time: u64,
    pub ri_flags: u64,
    pub ri_user_ptime: u64,
    pub ri_system_ptime: u64,
    pub ri_pinstructions: u64,
    pub ri_pcycles: u64,
    pub ri_energy_nj: u64,
    pub ri_penergy_nj: u64,
    pub ri_secure_time_in_system: u64,
    pub ri_secure_ptime_in_system: u64,
    pub ri_neural_footprint: u64,
    pub ri_lifetime_max_neural_footprint: u64,
    pub ri_interval_max_neural_footprint: u64,
    pub ri_reserved: [u64; 9usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage_info_v6"][::std::mem::size_of::<rusage_info_v6>() - 464usize];
    ["Alignment of rusage_info_v6"][::std::mem::align_of::<rusage_info_v6>() - 8usize];
    ["Offset of field: rusage_info_v6::ri_uuid"]
        [::std::mem::offset_of!(rusage_info_v6, ri_uuid) - 0usize];
    ["Offset of field: rusage_info_v6::ri_user_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_user_time) - 16usize];
    ["Offset of field: rusage_info_v6::ri_system_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_system_time) - 24usize];
    ["Offset of field: rusage_info_v6::ri_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v6, ri_pkg_idle_wkups) - 32usize];
    ["Offset of field: rusage_info_v6::ri_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v6, ri_interrupt_wkups) - 40usize];
    ["Offset of field: rusage_info_v6::ri_pageins"]
        [::std::mem::offset_of!(rusage_info_v6, ri_pageins) - 48usize];
    ["Offset of field: rusage_info_v6::ri_wired_size"]
        [::std::mem::offset_of!(rusage_info_v6, ri_wired_size) - 56usize];
    ["Offset of field: rusage_info_v6::ri_resident_size"]
        [::std::mem::offset_of!(rusage_info_v6, ri_resident_size) - 64usize];
    ["Offset of field: rusage_info_v6::ri_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_phys_footprint) - 72usize];
    ["Offset of field: rusage_info_v6::ri_proc_start_abstime"]
        [::std::mem::offset_of!(rusage_info_v6, ri_proc_start_abstime) - 80usize];
    ["Offset of field: rusage_info_v6::ri_proc_exit_abstime"]
        [::std::mem::offset_of!(rusage_info_v6, ri_proc_exit_abstime) - 88usize];
    ["Offset of field: rusage_info_v6::ri_child_user_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_user_time) - 96usize];
    ["Offset of field: rusage_info_v6::ri_child_system_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_system_time) - 104usize];
    ["Offset of field: rusage_info_v6::ri_child_pkg_idle_wkups"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_pkg_idle_wkups) - 112usize];
    ["Offset of field: rusage_info_v6::ri_child_interrupt_wkups"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_interrupt_wkups) - 120usize];
    ["Offset of field: rusage_info_v6::ri_child_pageins"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_pageins) - 128usize];
    ["Offset of field: rusage_info_v6::ri_child_elapsed_abstime"]
        [::std::mem::offset_of!(rusage_info_v6, ri_child_elapsed_abstime) - 136usize];
    ["Offset of field: rusage_info_v6::ri_diskio_bytesread"]
        [::std::mem::offset_of!(rusage_info_v6, ri_diskio_bytesread) - 144usize];
    ["Offset of field: rusage_info_v6::ri_diskio_byteswritten"]
        [::std::mem::offset_of!(rusage_info_v6, ri_diskio_byteswritten) - 152usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_default"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_default) - 160usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_maintenance"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_maintenance) - 168usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_background"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_background) - 176usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_utility"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_utility) - 184usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_legacy"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_legacy) - 192usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_user_initiated"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_user_initiated) - 200usize];
    ["Offset of field: rusage_info_v6::ri_cpu_time_qos_user_interactive"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cpu_time_qos_user_interactive) - 208usize];
    ["Offset of field: rusage_info_v6::ri_billed_system_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_billed_system_time) - 216usize];
    ["Offset of field: rusage_info_v6::ri_serviced_system_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_serviced_system_time) - 224usize];
    ["Offset of field: rusage_info_v6::ri_logical_writes"]
        [::std::mem::offset_of!(rusage_info_v6, ri_logical_writes) - 232usize];
    ["Offset of field: rusage_info_v6::ri_lifetime_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_lifetime_max_phys_footprint) - 240usize];
    ["Offset of field: rusage_info_v6::ri_instructions"]
        [::std::mem::offset_of!(rusage_info_v6, ri_instructions) - 248usize];
    ["Offset of field: rusage_info_v6::ri_cycles"]
        [::std::mem::offset_of!(rusage_info_v6, ri_cycles) - 256usize];
    ["Offset of field: rusage_info_v6::ri_billed_energy"]
        [::std::mem::offset_of!(rusage_info_v6, ri_billed_energy) - 264usize];
    ["Offset of field: rusage_info_v6::ri_serviced_energy"]
        [::std::mem::offset_of!(rusage_info_v6, ri_serviced_energy) - 272usize];
    ["Offset of field: rusage_info_v6::ri_interval_max_phys_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_interval_max_phys_footprint) - 280usize];
    ["Offset of field: rusage_info_v6::ri_runnable_time"]
        [::std::mem::offset_of!(rusage_info_v6, ri_runnable_time) - 288usize];
    ["Offset of field: rusage_info_v6::ri_flags"]
        [::std::mem::offset_of!(rusage_info_v6, ri_flags) - 296usize];
    ["Offset of field: rusage_info_v6::ri_user_ptime"]
        [::std::mem::offset_of!(rusage_info_v6, ri_user_ptime) - 304usize];
    ["Offset of field: rusage_info_v6::ri_system_ptime"]
        [::std::mem::offset_of!(rusage_info_v6, ri_system_ptime) - 312usize];
    ["Offset of field: rusage_info_v6::ri_pinstructions"]
        [::std::mem::offset_of!(rusage_info_v6, ri_pinstructions) - 320usize];
    ["Offset of field: rusage_info_v6::ri_pcycles"]
        [::std::mem::offset_of!(rusage_info_v6, ri_pcycles) - 328usize];
    ["Offset of field: rusage_info_v6::ri_energy_nj"]
        [::std::mem::offset_of!(rusage_info_v6, ri_energy_nj) - 336usize];
    ["Offset of field: rusage_info_v6::ri_penergy_nj"]
        [::std::mem::offset_of!(rusage_info_v6, ri_penergy_nj) - 344usize];
    ["Offset of field: rusage_info_v6::ri_secure_time_in_system"]
        [::std::mem::offset_of!(rusage_info_v6, ri_secure_time_in_system) - 352usize];
    ["Offset of field: rusage_info_v6::ri_secure_ptime_in_system"]
        [::std::mem::offset_of!(rusage_info_v6, ri_secure_ptime_in_system) - 360usize];
    ["Offset of field: rusage_info_v6::ri_neural_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_neural_footprint) - 368usize];
    ["Offset of field: rusage_info_v6::ri_lifetime_max_neural_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_lifetime_max_neural_footprint) - 376usize];
    ["Offset of field: rusage_info_v6::ri_interval_max_neural_footprint"]
        [::std::mem::offset_of!(rusage_info_v6, ri_interval_max_neural_footprint) - 384usize];
    ["Offset of field: rusage_info_v6::ri_reserved"]
        [::std::mem::offset_of!(rusage_info_v6, ri_reserved) - 392usize];
};
pub type rusage_info_current = rusage_info_v6;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rlimit {
    pub rlim_cur: rlim_t,
    pub rlim_max: rlim_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rlimit"][::std::mem::size_of::<rlimit>() - 16usize];
    ["Alignment of rlimit"][::std::mem::align_of::<rlimit>() - 8usize];
    ["Offset of field: rlimit::rlim_cur"][::std::mem::offset_of!(rlimit, rlim_cur) - 0usize];
    ["Offset of field: rlimit::rlim_max"][::std::mem::offset_of!(rlimit, rlim_max) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct proc_rlimit_control_wakeupmon {
    pub wm_flags: u32,
    pub wm_rate: i32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of proc_rlimit_control_wakeupmon"]
        [::std::mem::size_of::<proc_rlimit_control_wakeupmon>() - 8usize];
    ["Alignment of proc_rlimit_control_wakeupmon"]
        [::std::mem::align_of::<proc_rlimit_control_wakeupmon>() - 4usize];
    ["Offset of field: proc_rlimit_control_wakeupmon::wm_flags"]
        [::std::mem::offset_of!(proc_rlimit_control_wakeupmon, wm_flags) - 0usize];
    ["Offset of field: proc_rlimit_control_wakeupmon::wm_rate"]
        [::std::mem::offset_of!(proc_rlimit_control_wakeupmon, wm_rate) - 4usize];
};
unsafe extern "C" {
    pub fn getpriority(arg1: ::std::os::raw::c_int, arg2: id_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getiopolicy_np(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getrlimit(arg1: ::std::os::raw::c_int, arg2: *mut rlimit) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getrusage(arg1: ::std::os::raw::c_int, arg2: *mut rusage) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setpriority(
        arg1: ::std::os::raw::c_int,
        arg2: id_t,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setiopolicy_np(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setrlimit(arg1: ::std::os::raw::c_int, arg2: *const rlimit) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union wait {
    pub w_status: ::std::os::raw::c_int,
    pub w_T: wait__bindgen_ty_1,
    pub w_S: wait__bindgen_ty_2,
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct wait__bindgen_ty_1 {
    pub _bitfield_align_1: [u16; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 4usize]>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of wait__bindgen_ty_1"][::std::mem::size_of::<wait__bindgen_ty_1>() - 4usize];
    ["Alignment of wait__bindgen_ty_1"][::std::mem::align_of::<wait__bindgen_ty_1>() - 4usize];
};
impl wait__bindgen_ty_1 {
    #[inline]
    pub fn w_Termsig(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 7u8) as u32) }
    }
    #[inline]
    pub fn set_w_Termsig(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 7u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Termsig_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                0usize,
                7u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Termsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                0usize,
                7u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn w_Coredump(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_w_Coredump(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Coredump_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                7usize,
                1u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Coredump_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                7usize,
                1u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn w_Retcode(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_w_Retcode(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Retcode_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                8usize,
                8u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Retcode_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                8usize,
                8u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(16usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(16usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                16usize,
                16u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                16usize,
                16u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        w_Termsig: ::std::os::raw::c_uint,
        w_Coredump: ::std::os::raw::c_uint,
        w_Retcode: ::std::os::raw::c_uint,
        w_Filler: ::std::os::raw::c_uint,
    ) -> __BindgenBitfieldUnit<[u8; 4usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 4usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 7u8, {
            let w_Termsig: u32 = unsafe { ::std::mem::transmute(w_Termsig) };
            w_Termsig as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let w_Coredump: u32 = unsafe { ::std::mem::transmute(w_Coredump) };
            w_Coredump as u64
        });
        __bindgen_bitfield_unit.set(8usize, 8u8, {
            let w_Retcode: u32 = unsafe { ::std::mem::transmute(w_Retcode) };
            w_Retcode as u64
        });
        __bindgen_bitfield_unit.set(16usize, 16u8, {
            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };
            w_Filler as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct wait__bindgen_ty_2 {
    pub _bitfield_align_1: [u16; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 4usize]>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of wait__bindgen_ty_2"][::std::mem::size_of::<wait__bindgen_ty_2>() - 4usize];
    ["Alignment of wait__bindgen_ty_2"][::std::mem::align_of::<wait__bindgen_ty_2>() - 4usize];
};
impl wait__bindgen_ty_2 {
    #[inline]
    pub fn w_Stopval(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_w_Stopval(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Stopval_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                0usize,
                8u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Stopval_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                0usize,
                8u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn w_Stopsig(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_w_Stopsig(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Stopsig_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                8usize,
                8u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Stopsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                8usize,
                8u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(16usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_1.set(16usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {
        unsafe {
            ::std::mem::transmute(<__BindgenBitfieldUnit<[u8; 4usize]>>::raw_get(
                ::std::ptr::addr_of!((*this)._bitfield_1),
                16usize,
                16u8,
            ) as u32)
        }
    }
    #[inline]
    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            <__BindgenBitfieldUnit<[u8; 4usize]>>::raw_set(
                ::std::ptr::addr_of_mut!((*this)._bitfield_1),
                16usize,
                16u8,
                val as u64,
            )
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        w_Stopval: ::std::os::raw::c_uint,
        w_Stopsig: ::std::os::raw::c_uint,
        w_Filler: ::std::os::raw::c_uint,
    ) -> __BindgenBitfieldUnit<[u8; 4usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 4usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 8u8, {
            let w_Stopval: u32 = unsafe { ::std::mem::transmute(w_Stopval) };
            w_Stopval as u64
        });
        __bindgen_bitfield_unit.set(8usize, 8u8, {
            let w_Stopsig: u32 = unsafe { ::std::mem::transmute(w_Stopsig) };
            w_Stopsig as u64
        });
        __bindgen_bitfield_unit.set(16usize, 16u8, {
            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };
            w_Filler as u64
        });
        __bindgen_bitfield_unit
    }
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of wait"][::std::mem::size_of::<wait>() - 4usize];
    ["Alignment of wait"][::std::mem::align_of::<wait>() - 4usize];
    ["Offset of field: wait::w_status"][::std::mem::offset_of!(wait, w_status) - 0usize];
    ["Offset of field: wait::w_T"][::std::mem::offset_of!(wait, w_T) - 0usize];
    ["Offset of field: wait::w_S"][::std::mem::offset_of!(wait, w_S) - 0usize];
};
unsafe extern "C" {
    pub fn wait(arg1: *mut ::std::os::raw::c_int) -> pid_t;
}
unsafe extern "C" {
    pub fn waitpid(
        arg1: pid_t,
        arg2: *mut ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> pid_t;
}
unsafe extern "C" {
    pub fn waitid(
        arg1: idtype_t,
        arg2: id_t,
        arg3: *mut siginfo_t,
        arg4: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn wait3(
        arg1: *mut ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
        arg3: *mut rusage,
    ) -> pid_t;
}
unsafe extern "C" {
    pub fn wait4(
        arg1: pid_t,
        arg2: *mut ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *mut rusage,
    ) -> pid_t;
}
unsafe extern "C" {
    pub fn alloca(__size: ::std::os::raw::c_ulong) -> *mut ::std::os::raw::c_void;
}
pub type ct_rune_t = __darwin_ct_rune_t;
pub type rune_t = __darwin_rune_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct div_t {
    pub quot: ::std::os::raw::c_int,
    pub rem: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of div_t"][::std::mem::size_of::<div_t>() - 8usize];
    ["Alignment of div_t"][::std::mem::align_of::<div_t>() - 4usize];
    ["Offset of field: div_t::quot"][::std::mem::offset_of!(div_t, quot) - 0usize];
    ["Offset of field: div_t::rem"][::std::mem::offset_of!(div_t, rem) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ldiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ldiv_t"][::std::mem::size_of::<ldiv_t>() - 16usize];
    ["Alignment of ldiv_t"][::std::mem::align_of::<ldiv_t>() - 8usize];
    ["Offset of field: ldiv_t::quot"][::std::mem::offset_of!(ldiv_t, quot) - 0usize];
    ["Offset of field: ldiv_t::rem"][::std::mem::offset_of!(ldiv_t, rem) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lldiv_t {
    pub quot: ::std::os::raw::c_longlong,
    pub rem: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of lldiv_t"][::std::mem::size_of::<lldiv_t>() - 16usize];
    ["Alignment of lldiv_t"][::std::mem::align_of::<lldiv_t>() - 8usize];
    ["Offset of field: lldiv_t::quot"][::std::mem::offset_of!(lldiv_t, quot) - 0usize];
    ["Offset of field: lldiv_t::rem"][::std::mem::offset_of!(lldiv_t, rem) - 8usize];
};
unsafe extern "C" {
    pub static mut __mb_cur_max: ::std::os::raw::c_int;
}
pub type malloc_type_id_t = ::std::os::raw::c_ulonglong;
unsafe extern "C" {
    pub fn malloc_type_malloc(
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_calloc(
        count: usize,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_free(ptr: *mut ::std::os::raw::c_void, type_id: malloc_type_id_t);
}
unsafe extern "C" {
    pub fn malloc_type_realloc(
        ptr: *mut ::std::os::raw::c_void,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_valloc(
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_aligned_alloc(
        alignment: usize,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_posix_memalign(
        memptr: *mut *mut ::std::os::raw::c_void,
        alignment: usize,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _malloc_zone_t {
    _unused: [u8; 0],
}
pub type malloc_zone_t = _malloc_zone_t;
unsafe extern "C" {
    pub fn malloc_type_zone_malloc(
        zone: *mut malloc_zone_t,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_zone_calloc(
        zone: *mut malloc_zone_t,
        count: usize,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_zone_free(
        zone: *mut malloc_zone_t,
        ptr: *mut ::std::os::raw::c_void,
        type_id: malloc_type_id_t,
    );
}
unsafe extern "C" {
    pub fn malloc_type_zone_realloc(
        zone: *mut malloc_zone_t,
        ptr: *mut ::std::os::raw::c_void,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_zone_valloc(
        zone: *mut malloc_zone_t,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc_type_zone_memalign(
        zone: *mut malloc_zone_t,
        alignment: usize,
        size: usize,
        type_id: malloc_type_id_t,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn malloc(__size: ::std::os::raw::c_ulong) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn calloc(
        __count: ::std::os::raw::c_ulong,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn free(arg1: *mut ::std::os::raw::c_void);
}
unsafe extern "C" {
    pub fn realloc(
        __ptr: *mut ::std::os::raw::c_void,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn reallocf(
        __ptr: *mut ::std::os::raw::c_void,
        __size: usize,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn valloc(__size: usize) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn aligned_alloc(
        __alignment: ::std::os::raw::c_ulong,
        __size: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn posix_memalign(
        __memptr: *mut *mut ::std::os::raw::c_void,
        __alignment: usize,
        __size: usize,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn abort() -> !;
}
unsafe extern "C" {
    pub fn abs(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn atexit(arg1: ::std::option::Option<unsafe extern "C" fn()>) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn at_quick_exit(
        arg1: ::std::option::Option<unsafe extern "C" fn()>,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn atof(arg1: *const ::std::os::raw::c_char) -> f64;
}
unsafe extern "C" {
    pub fn atoi(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn atol(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn atoll(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn bsearch(
        __key: *const ::std::os::raw::c_void,
        __base: *const ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn div(arg1: ::std::os::raw::c_int, arg2: ::std::os::raw::c_int) -> div_t;
}
unsafe extern "C" {
    pub fn exit(arg1: ::std::os::raw::c_int) -> !;
}
unsafe extern "C" {
    pub fn getenv(arg1: *const ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn labs(arg1: ::std::os::raw::c_long) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn ldiv(arg1: ::std::os::raw::c_long, arg2: ::std::os::raw::c_long) -> ldiv_t;
}
unsafe extern "C" {
    pub fn llabs(arg1: ::std::os::raw::c_longlong) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn lldiv(arg1: ::std::os::raw::c_longlong, arg2: ::std::os::raw::c_longlong) -> lldiv_t;
}
unsafe extern "C" {
    pub fn mblen(__s: *const ::std::os::raw::c_char, __n: usize) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn mbstowcs(arg1: *mut wchar_t, arg2: *const ::std::os::raw::c_char, __n: usize) -> usize;
}
unsafe extern "C" {
    pub fn mbtowc(
        arg1: *mut wchar_t,
        arg2: *const ::std::os::raw::c_char,
        __n: usize,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn qsort(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    );
}
unsafe extern "C" {
    pub fn quick_exit(arg1: ::std::os::raw::c_int) -> !;
}
unsafe extern "C" {
    pub fn rand() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn srand(arg1: ::std::os::raw::c_uint);
}
unsafe extern "C" {
    pub fn strtod(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn strtof(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> f32;
}
unsafe extern "C" {
    pub fn strtol(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn strtold(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn strtoll(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn strtoul(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulong;
}
unsafe extern "C" {
    pub fn strtoull(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulonglong;
}
unsafe extern "C" {
    pub fn system(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn wcstombs(arg1: *mut ::std::os::raw::c_char, arg2: *const wchar_t, __n: usize) -> usize;
}
unsafe extern "C" {
    pub fn wctomb(arg1: *mut ::std::os::raw::c_char, arg2: wchar_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _Exit(arg1: ::std::os::raw::c_int) -> !;
}
unsafe extern "C" {
    pub fn a64l(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn drand48() -> f64;
}
unsafe extern "C" {
    pub fn ecvt(
        arg1: f64,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn erand48(arg1: *mut ::std::os::raw::c_ushort) -> f64;
}
unsafe extern "C" {
    pub fn fcvt(
        arg1: f64,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn gcvt(
        arg1: f64,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn getsubopt(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: *const *mut ::std::os::raw::c_char,
        arg3: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn grantpt(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn initstate(
        arg1: ::std::os::raw::c_uint,
        arg2: *mut ::std::os::raw::c_char,
        __size: usize,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn jrand48(arg1: *mut ::std::os::raw::c_ushort) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn l64a(arg1: ::std::os::raw::c_long) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn lcong48(arg1: *mut ::std::os::raw::c_ushort);
}
unsafe extern "C" {
    pub fn lrand48() -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn mktemp(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn mkstemp(arg1: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn mrand48() -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn nrand48(arg1: *mut ::std::os::raw::c_ushort) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn posix_openpt(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ptsname(arg1: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn ptsname_r(
        fildes: ::std::os::raw::c_int,
        buffer: *mut ::std::os::raw::c_char,
        buflen: usize,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putenv(arg1: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn random() -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn rand_r(arg1: *mut ::std::os::raw::c_uint) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    #[link_name = "\u{1}_realpath$DARWIN_EXTSN"]
    pub fn realpath(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn seed48(arg1: *mut ::std::os::raw::c_ushort) -> *mut ::std::os::raw::c_ushort;
}
unsafe extern "C" {
    pub fn setenv(
        __name: *const ::std::os::raw::c_char,
        __value: *const ::std::os::raw::c_char,
        __overwrite: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setkey(arg1: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn setstate(arg1: *const ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn srand48(arg1: ::std::os::raw::c_long);
}
unsafe extern "C" {
    pub fn srandom(arg1: ::std::os::raw::c_uint);
}
unsafe extern "C" {
    pub fn unlockpt(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn unsetenv(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
pub type dev_t = __darwin_dev_t;
pub type mode_t = __darwin_mode_t;
unsafe extern "C" {
    pub fn arc4random() -> u32;
}
unsafe extern "C" {
    pub fn arc4random_addrandom(
        arg1: *mut ::std::os::raw::c_uchar,
        __datlen: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn arc4random_buf(__buf: *mut ::std::os::raw::c_void, __nbytes: usize);
}
unsafe extern "C" {
    pub fn arc4random_stir();
}
unsafe extern "C" {
    pub fn arc4random_uniform(__upper_bound: u32) -> u32;
}
unsafe extern "C" {
    pub fn atexit_b(arg1: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn bsearch_b(
        __key: *const ::std::os::raw::c_void,
        __base: *const ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: *mut ::std::os::raw::c_void,
    ) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn cgetcap(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn cgetclose() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetent(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
        arg3: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetfirst(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetmatch(
        arg1: *const ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetnext(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetnum(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetset(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetstr(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn cgetustr(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn daemon(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn devname(arg1: dev_t, arg2: mode_t) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn devname_r(
        arg1: dev_t,
        arg2: mode_t,
        buf: *mut ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn getbsize(
        arg1: *mut ::std::os::raw::c_int,
        arg2: *mut ::std::os::raw::c_long,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn getloadavg(arg1: *mut f64, __nelem: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getprogname() -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn setprogname(arg1: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn heapsort(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn heapsort_b(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn mergesort(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn mergesort_b(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn psort(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *const ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    );
}
unsafe extern "C" {
    pub fn psort_b(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn psort_r(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        arg1: *mut ::std::os::raw::c_void,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
                arg3: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    );
}
unsafe extern "C" {
    pub fn qsort_b(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        __compar: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn qsort_r(
        __base: *mut ::std::os::raw::c_void,
        __nel: usize,
        __width: usize,
        arg1: *mut ::std::os::raw::c_void,
        __compar: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut ::std::os::raw::c_void,
                arg2: *const ::std::os::raw::c_void,
                arg3: *const ::std::os::raw::c_void,
            ) -> ::std::os::raw::c_int,
        >,
    );
}
unsafe extern "C" {
    pub fn radixsort(
        __base: *mut *const ::std::os::raw::c_uchar,
        __nel: ::std::os::raw::c_int,
        __table: *const ::std::os::raw::c_uchar,
        __endbyte: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn rpmatch(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn sradixsort(
        __base: *mut *const ::std::os::raw::c_uchar,
        __nel: ::std::os::raw::c_int,
        __table: *const ::std::os::raw::c_uchar,
        __endbyte: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn sranddev();
}
unsafe extern "C" {
    pub fn srandomdev();
}
unsafe extern "C" {
    pub fn strtonum(
        __numstr: *const ::std::os::raw::c_char,
        __minval: ::std::os::raw::c_longlong,
        __maxval: ::std::os::raw::c_longlong,
        __errstrp: *mut *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn strtoq(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn strtouq(
        __str: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulonglong;
}
unsafe extern "C" {
    pub static mut suboptarg: *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn imaxabs(j: intmax_t) -> intmax_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct imaxdiv_t {
    pub quot: intmax_t,
    pub rem: intmax_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of imaxdiv_t"][::std::mem::size_of::<imaxdiv_t>() - 16usize];
    ["Alignment of imaxdiv_t"][::std::mem::align_of::<imaxdiv_t>() - 8usize];
    ["Offset of field: imaxdiv_t::quot"][::std::mem::offset_of!(imaxdiv_t, quot) - 0usize];
    ["Offset of field: imaxdiv_t::rem"][::std::mem::offset_of!(imaxdiv_t, rem) - 8usize];
};
unsafe extern "C" {
    pub fn imaxdiv(__numer: intmax_t, __denom: intmax_t) -> imaxdiv_t;
}
unsafe extern "C" {
    pub fn strtoimax(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> intmax_t;
}
unsafe extern "C" {
    pub fn strtoumax(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> uintmax_t;
}
unsafe extern "C" {
    pub fn wcstoimax(
        __nptr: *const wchar_t,
        __endptr: *mut *mut wchar_t,
        __base: ::std::os::raw::c_int,
    ) -> intmax_t;
}
unsafe extern "C" {
    pub fn wcstoumax(
        __nptr: *const wchar_t,
        __endptr: *mut *mut wchar_t,
        __base: ::std::os::raw::c_int,
    ) -> uintmax_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _lapack_complex_float {
    pub real: f32,
    pub imag: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _lapack_complex_float"][::std::mem::size_of::<_lapack_complex_float>() - 8usize];
    ["Alignment of _lapack_complex_float"]
        [::std::mem::align_of::<_lapack_complex_float>() - 4usize];
    ["Offset of field: _lapack_complex_float::real"]
        [::std::mem::offset_of!(_lapack_complex_float, real) - 0usize];
    ["Offset of field: _lapack_complex_float::imag"]
        [::std::mem::offset_of!(_lapack_complex_float, imag) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _lapack_complex_double {
    pub real: f64,
    pub imag: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _lapack_complex_double"][::std::mem::size_of::<_lapack_complex_double>() - 16usize];
    ["Alignment of _lapack_complex_double"]
        [::std::mem::align_of::<_lapack_complex_double>() - 8usize];
    ["Offset of field: _lapack_complex_double::real"]
        [::std::mem::offset_of!(_lapack_complex_double, real) - 0usize];
    ["Offset of field: _lapack_complex_double::imag"]
        [::std::mem::offset_of!(_lapack_complex_double, imag) - 8usize];
};
unsafe extern "C" {
    pub fn lapack_make_complex_float(re: f32, im: f32) -> _lapack_complex_float;
}
unsafe extern "C" {
    pub fn lapack_make_complex_double(re: f64, im: f64) -> _lapack_complex_double;
}
pub type __gnuc_va_list = __builtin_va_list;
pub type va_list = __builtin_va_list;
pub type lapack_float_return = f32;
pub type LAPACK_S_SELECT2 =
    ::std::option::Option<unsafe extern "C" fn(arg1: *const f32, arg2: *const f32) -> i32>;
pub type LAPACK_S_SELECT3 = ::std::option::Option<
    unsafe extern "C" fn(arg1: *const f32, arg2: *const f32, arg3: *const f32) -> i32,
>;
pub type LAPACK_D_SELECT2 =
    ::std::option::Option<unsafe extern "C" fn(arg1: *const f64, arg2: *const f64) -> i32>;
pub type LAPACK_D_SELECT3 = ::std::option::Option<
    unsafe extern "C" fn(arg1: *const f64, arg2: *const f64, arg3: *const f64) -> i32,
>;
pub type LAPACK_C_SELECT1 =
    ::std::option::Option<unsafe extern "C" fn(arg1: *const _lapack_complex_float) -> i32>;
pub type LAPACK_C_SELECT2 = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const _lapack_complex_float,
        arg2: *const _lapack_complex_float,
    ) -> i32,
>;
pub type LAPACK_Z_SELECT1 =
    ::std::option::Option<unsafe extern "C" fn(arg1: *const _lapack_complex_double) -> i32>;
pub type LAPACK_Z_SELECT2 = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const _lapack_complex_double,
        arg2: *const _lapack_complex_double,
    ) -> i32,
>;
unsafe extern "C" {
    pub fn lsame_(
        ca: *const ::std::os::raw::c_char,
        cb: *const ::std::os::raw::c_char,
        lca: i32,
        lcb: i32,
        arg1: usize,
        arg2: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn cbbcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        theta: *mut f32,
        phi: *mut f32,
        U1: *mut _lapack_complex_float,
        ldu1: *const i32,
        U2: *mut _lapack_complex_float,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_float,
        ldv1t: *const i32,
        V2T: *mut _lapack_complex_float,
        ldv2t: *const i32,
        B11D: *mut f32,
        B11E: *mut f32,
        B12D: *mut f32,
        B12E: *mut f32,
        B21D: *mut f32,
        B21E: *mut f32,
        B22D: *mut f32,
        B22E: *mut f32,
        rwork: *mut f32,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn dbbcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        theta: *mut f64,
        phi: *mut f64,
        U1: *mut f64,
        ldu1: *const i32,
        U2: *mut f64,
        ldu2: *const i32,
        V1T: *mut f64,
        ldv1t: *const i32,
        V2T: *mut f64,
        ldv2t: *const i32,
        B11D: *mut f64,
        B11E: *mut f64,
        B12D: *mut f64,
        B12E: *mut f64,
        b21d: *mut f64,
        b21e: *mut f64,
        b22d: *mut f64,
        b22e: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn sbbcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        theta: *mut f32,
        phi: *mut f32,
        U1: *mut f32,
        ldu1: *const i32,
        U2: *mut f32,
        ldu2: *const i32,
        V1T: *mut f32,
        ldv1t: *const i32,
        V2T: *mut f32,
        ldv2t: *const i32,
        B11D: *mut f32,
        B11E: *mut f32,
        B12D: *mut f32,
        B12E: *mut f32,
        B21D: *mut f32,
        B21E: *mut f32,
        B22D: *mut f32,
        B22E: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn zbbcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        theta: *mut f64,
        phi: *mut f64,
        U1: *mut _lapack_complex_double,
        ldu1: *const i32,
        U2: *mut _lapack_complex_double,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_double,
        ldv1t: *const i32,
        V2T: *mut _lapack_complex_double,
        ldv2t: *const i32,
        B11D: *mut f64,
        B11E: *mut f64,
        B12D: *mut f64,
        B12E: *mut f64,
        B21D: *mut f64,
        B21E: *mut f64,
        B22D: *mut f64,
        B22E: *mut f64,
        rwork: *mut f64,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn dbdsdc_(
        uplo: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        VT: *mut f64,
        ldvt: *const i32,
        Q: *mut f64,
        IQ: *mut i32,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sbdsdc_(
        uplo: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        VT: *mut f32,
        ldvt: *const i32,
        Q: *mut f32,
        IQ: *mut i32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ncvt: *const i32,
        nru: *const i32,
        ncc: *const i32,
        D: *mut f32,
        E: *mut f32,
        VT: *mut _lapack_complex_float,
        ldvt: *const i32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ncvt: *const i32,
        nru: *const i32,
        ncc: *const i32,
        D: *mut f64,
        E: *mut f64,
        VT: *mut f64,
        ldvt: *const i32,
        U: *mut f64,
        ldu: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ncvt: *const i32,
        nru: *const i32,
        ncc: *const i32,
        D: *mut f32,
        E: *mut f32,
        VT: *mut f32,
        ldvt: *const i32,
        U: *mut f32,
        ldu: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ncvt: *const i32,
        nru: *const i32,
        ncc: *const i32,
        D: *mut f64,
        E: *mut f64,
        VT: *mut _lapack_complex_double,
        ldvt: *const i32,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dbdsvdx_(
        uplo: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f64,
        E: *const f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sbdsvdx_(
        uplo: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f32,
        E: *const f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ddisna_(
        job: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        D: *const f64,
        SEP: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sdisna_(
        job: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        D: *const f32,
        SEP: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgbbrd_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ncc: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        D: *mut f32,
        E: *mut f32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        PT: *mut _lapack_complex_float,
        ldpt: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgbbrd_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ncc: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        D: *mut f64,
        E: *mut f64,
        Q: *mut f64,
        ldq: *const i32,
        PT: *mut f64,
        ldpt: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgbbrd_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ncc: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        D: *mut f32,
        E: *mut f32,
        Q: *mut f32,
        ldq: *const i32,
        PT: *mut f32,
        ldpt: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgbbrd_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ncc: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        D: *mut f64,
        E: *mut f64,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        PT: *mut _lapack_complex_double,
        ldpt: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgbcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgbcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f64,
        ldab: *const i32,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgbcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f32,
        ldab: *const i32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgbcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgbequ_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgbequ_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f64,
        ldab: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgbequ_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f32,
        ldab: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgbequ_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgbequb_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgbequb_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f64,
        ldab: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgbequb_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f32,
        ldab: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgbequb_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgbrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        AFB: *const _lapack_complex_float,
        ldafb: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgbrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        AFB: *const f64,
        ldafb: *const i32,
        ipiv: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgbrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        AFB: *const f32,
        ldafb: *const i32,
        ipiv: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgbrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        AFB: *const _lapack_complex_double,
        ldafb: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgbrfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        AFB: *const _lapack_complex_float,
        ldafb: *const i32,
        ipiv: *const i32,
        R: *const f32,
        C: *const f32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgbrfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        AFB: *const f64,
        ldafb: *const i32,
        ipiv: *const i32,
        R: *const f64,
        C: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgbrfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        AFB: *const f32,
        ldafb: *const i32,
        ipiv: *const i32,
        R: *const f32,
        C: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgbrfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        AFB: *const _lapack_complex_double,
        ldafb: *const i32,
        ipiv: *const i32,
        R: *const f64,
        C: *const f64,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgbsv_(
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgbsv_(
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgbsv_(
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgbsv_(
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgbsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        AFB: *mut _lapack_complex_float,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgbsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        AFB: *mut f64,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgbsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        AFB: *mut f32,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgbsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        AFB: *mut _lapack_complex_double,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgbsvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        AFB: *mut _lapack_complex_float,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgbsvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        AFB: *mut f64,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgbsvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        AFB: *mut f32,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgbsvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        AFB: *mut _lapack_complex_double,
        ldafb: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgbtrf_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgbtrf_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgbtrf_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgbtrf_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgbtrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgbtrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgbtrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgbtrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        scale: *const f32,
        m: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        scale: *const f64,
        m: *const i32,
        V: *mut f64,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        scale: *const f32,
        m: *const i32,
        V: *mut f32,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        scale: *const f64,
        m: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgebrd_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut _lapack_complex_float,
        taup: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgebrd_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgebrd_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut f32,
        taup: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgebrd_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut _lapack_complex_double,
        taup: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgeequ_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeequ_(
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeequ_(
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeequ_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeequb_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeequb_(
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeequb_(
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        R: *mut f32,
        C: *mut f32,
        rowcnd: *mut f32,
        colcnd: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeequb_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        R: *mut f64,
        C: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_C_SELECT1,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        sdim: *mut i32,
        W: *mut _lapack_complex_float,
        VS: *mut _lapack_complex_float,
        ldvs: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_D_SELECT2,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        sdim: *mut i32,
        WR: *mut f64,
        WI: *mut f64,
        VS: *mut f64,
        ldvs: *const i32,
        work: *mut f64,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_S_SELECT2,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        sdim: *mut i32,
        WR: *mut f32,
        WI: *mut f32,
        VS: *mut f32,
        ldvs: *const i32,
        work: *mut f32,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_Z_SELECT1,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        sdim: *mut i32,
        W: *mut _lapack_complex_double,
        VS: *mut _lapack_complex_double,
        ldvs: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgeesx_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_C_SELECT1,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        sdim: *mut i32,
        W: *mut _lapack_complex_float,
        VS: *mut _lapack_complex_float,
        ldvs: *const i32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgeesx_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_D_SELECT2,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        sdim: *mut i32,
        WR: *mut f64,
        WI: *mut f64,
        VS: *mut f64,
        ldvs: *const i32,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgeesx_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_S_SELECT2,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        sdim: *mut i32,
        WR: *mut f32,
        WI: *mut f32,
        VS: *mut f32,
        ldvs: *const i32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgeesx_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: LAPACK_Z_SELECT1,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        sdim: *mut i32,
        W: *mut _lapack_complex_double,
        VS: *mut _lapack_complex_double,
        ldvs: *const i32,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        WR: *mut f64,
        WI: *mut f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        WR: *mut f32,
        WI: *mut f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgeevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f32,
        abnrm: *mut f32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dgeevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        WR: *mut f64,
        WI: *mut f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f64,
        abnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn sgeevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        WR: *mut f32,
        WI: *mut f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f32,
        abnrm: *mut f32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn zgeevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        scale: *mut f64,
        abnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn cgehrd_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgehrd_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgehrd_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgehrd_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgejsv_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        SVA: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        cwork: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn dgejsv_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        SVA: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        V: *mut f64,
        ldv: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn sgejsv_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        SVA: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        V: *mut f32,
        ldv: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn zgejsv_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        SVA: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        cwork: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn cgelq_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        tsize: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelq_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        tsize: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelq_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        tsize: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelq_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        tsize: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgelq2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelq2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelq2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelq2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgelqf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelqf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelqf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelqf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgels_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgels_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgels_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgels_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgelsd_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        S: *mut f32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelsd_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        S: *mut f64,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelsd_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        S: *mut f32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelsd_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        S: *mut f64,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgelss_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        S: *mut f32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelss_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        S: *mut f64,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelss_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        S: *mut f32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelss_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        S: *mut f64,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgelsy_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        JPVT: *mut i32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgelsy_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        JPVT: *mut i32,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgelsy_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        JPVT: *mut i32,
        rcond: *const f32,
        rank: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgelsy_(
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        JPVT: *mut i32,
        rcond: *const f64,
        rank: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgemlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        T: *const _lapack_complex_float,
        tsize: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgemlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        T: *const f64,
        tsize: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgemlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        T: *const f32,
        tsize: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgemlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        T: *const _lapack_complex_double,
        tsize: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgemqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        T: *const _lapack_complex_float,
        tsize: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgemqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        T: *const f64,
        tsize: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgemqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        T: *const f32,
        tsize: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgemqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        T: *const _lapack_complex_double,
        tsize: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgemqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        nb: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgemqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        nb: *const i32,
        V: *const f64,
        ldv: *const i32,
        T: *const f64,
        ldt: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgemqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        nb: *const i32,
        V: *const f32,
        ldv: *const i32,
        T: *const f32,
        ldt: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgemqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        nb: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgeql2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeql2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeql2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeql2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqlf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqlf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqlf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqlf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqpf_(
        m: *mut i32,
        n: *mut i32,
        a: *mut f32,
        lda: *mut i32,
        jpvt: *mut i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqpf_(
        m: *mut i32,
        n: *mut i32,
        a: *mut f64,
        lda: *mut i32,
        jpvt: *mut i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqpf_(
        m: *mut i32,
        n: *mut i32,
        a: *mut _lapack_complex_float,
        lda: *mut i32,
        jpvt: *mut i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqpf_(
        m: *mut i32,
        n: *mut i32,
        a: *mut _lapack_complex_double,
        lda: *mut i32,
        jpvt: *mut i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqp3_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        JPVT: *mut i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqp3_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        JPVT: *mut i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqp3_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        JPVT: *mut i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqp3_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        JPVT: *mut i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqr_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        tsize: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqr_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        tsize: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqr_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        tsize: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqr_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        tsize: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqr2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqr2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqr2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqr2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqrf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqrf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqrf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqrf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqrfp_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqrfp_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqrfp_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqrfp_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqrt_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqrt_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        ldt: *const i32,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqrt_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        ldt: *const i32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqrt_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqrt2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqrt2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqrt2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqrt2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgeqrt3_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgeqrt3_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgeqrt3_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgeqrt3_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgerfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgerfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgerfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgerfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgerfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        R: *const f32,
        C: *const f32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgerfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        ipiv: *const i32,
        R: *const f64,
        C: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgerfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        ipiv: *const i32,
        R: *const f32,
        C: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgerfsx_(
        trans: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        R: *const f64,
        C: *const f64,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgerq2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgerq2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgerq2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgerq2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgerqf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgerqf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgerqf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgerqf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        VT: *mut _lapack_complex_float,
        ldvt: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        S: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        VT: *mut f64,
        ldvt: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        S: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        VT: *mut f32,
        ldvt: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        VT: *mut _lapack_complex_double,
        ldvt: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgedmd_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        x: *mut _lapack_complex_float,
        ldx: *const i32,
        y: *mut _lapack_complex_float,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f32,
        k: *mut i32,
        eigs: *mut _lapack_complex_float,
        z: *mut _lapack_complex_float,
        ldz: *const i32,
        res: *mut f32,
        b: *mut _lapack_complex_float,
        ldb: *const i32,
        w: *mut _lapack_complex_float,
        ldw: *const i32,
        s: *mut _lapack_complex_float,
        lds: *const i32,
        zwork: *mut _lapack_complex_float,
        lzwork: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dgedmd_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        x: *mut f64,
        ldx: *const i32,
        y: *mut f64,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f64,
        k: *mut i32,
        reig: *mut f64,
        imeig: *mut f64,
        z: *mut f64,
        ldz: *const i32,
        res: *mut f64,
        b: *mut f64,
        ldb: *const i32,
        w: *mut f64,
        ldw: *const i32,
        s: *mut f64,
        lds: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn sgedmd_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        x: *mut f32,
        ldx: *const i32,
        y: *mut f32,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f32,
        k: *mut i32,
        reig: *mut f32,
        imeig: *mut f32,
        z: *mut f32,
        ldz: *const i32,
        res: *mut f32,
        b: *mut f32,
        ldb: *const i32,
        w: *mut f32,
        ldw: *const i32,
        s: *mut f32,
        lds: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn zgedmd_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        x: *mut _lapack_complex_double,
        ldx: *const i32,
        y: *mut _lapack_complex_double,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f64,
        k: *mut i32,
        eigs: *mut _lapack_complex_double,
        z: *mut _lapack_complex_double,
        ldz: *const i32,
        res: *mut f64,
        b: *mut _lapack_complex_double,
        ldb: *const i32,
        w: *mut _lapack_complex_double,
        ldw: *const i32,
        s: *mut _lapack_complex_double,
        lds: *const i32,
        zwork: *mut _lapack_complex_double,
        lzwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn cgedmdq_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        f: *mut _lapack_complex_float,
        ldf: *const i32,
        x: *mut _lapack_complex_float,
        ldx: *const i32,
        y: *mut _lapack_complex_float,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f32,
        k: *const i32,
        eigs: *mut _lapack_complex_float,
        z: *mut _lapack_complex_float,
        ldz: *const i32,
        res: *mut f32,
        b: *mut _lapack_complex_float,
        ldb: *const i32,
        v: *mut _lapack_complex_float,
        ldv: *const i32,
        s: *mut _lapack_complex_float,
        lds: *const i32,
        zwork: *mut _lapack_complex_float,
        lzwork: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn dgedmdq_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        f: *mut f64,
        ldf: *const i32,
        x: *mut f64,
        ldx: *const i32,
        y: *mut f64,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f64,
        k: *mut i32,
        reig: *mut f64,
        imeig: *mut f64,
        z: *mut f64,
        ldz: *const i32,
        res: *mut f64,
        b: *mut f64,
        ldb: *const i32,
        v: *mut f64,
        ldv: *const i32,
        s: *mut f64,
        lds: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn sgedmdq_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        f: *mut f32,
        ldf: *const i32,
        x: *mut f32,
        ldx: *const i32,
        y: *mut f32,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f32,
        k: *const i32,
        reig: *mut f32,
        imeig: *mut f32,
        z: *mut f32,
        ldz: *const i32,
        res: *mut f32,
        b: *mut f32,
        ldb: *const i32,
        v: *mut f32,
        ldv: *const i32,
        s: *mut f32,
        lds: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn zgedmdq_(
        jobs: *const ::std::os::raw::c_char,
        jobz: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        jobt: *const ::std::os::raw::c_char,
        jobf: *const ::std::os::raw::c_char,
        whtsvd: *const i32,
        m: *const i32,
        n: *const i32,
        f: *mut _lapack_complex_double,
        ldf: *const i32,
        x: *mut _lapack_complex_double,
        ldx: *const i32,
        y: *mut _lapack_complex_double,
        ldy: *const i32,
        nrnk: *const i32,
        tol: *const f64,
        k: *const i32,
        eigs: *mut _lapack_complex_double,
        z: *mut _lapack_complex_double,
        ldz: *const i32,
        res: *mut f64,
        b: *mut _lapack_complex_double,
        ldb: *const i32,
        v: *mut _lapack_complex_double,
        ldv: *const i32,
        s: *mut _lapack_complex_double,
        lds: *const i32,
        zwork: *mut _lapack_complex_double,
        lzwork: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn cgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn sgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dsgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        work: *mut f64,
        swork: *mut f32,
        iter: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zcgesv_(
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        work: *mut _lapack_complex_double,
        swork: *mut _lapack_complex_float,
        rwork: *mut f64,
        iter: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        VT: *mut _lapack_complex_float,
        ldvt: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        S: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        VT: *mut f64,
        ldvt: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        S: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        VT: *mut f32,
        ldvt: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        VT: *mut _lapack_complex_double,
        ldvt: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgesvdq_(
        joba: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        numrank: *mut i32,
        iwork: *mut i32,
        liwork: *const i32,
        cwork: *mut _lapack_complex_float,
        lcwork: *mut i32,
        rwork: *mut f32,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvdq_(
        joba: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        S: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        V: *mut f64,
        ldv: *const i32,
        numrank: *mut i32,
        iwork: *mut i32,
        liwork: *const i32,
        work: *mut f64,
        lwork: *mut i32,
        rwork: *mut f64,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvdq_(
        joba: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        S: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        V: *mut f32,
        ldv: *const i32,
        numrank: *mut i32,
        iwork: *mut i32,
        liwork: *const i32,
        work: *mut f32,
        lwork: *mut i32,
        rwork: *mut f32,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvdq_(
        joba: *const ::std::os::raw::c_char,
        jobp: *const ::std::os::raw::c_char,
        jobr: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        numrank: *mut i32,
        iwork: *mut i32,
        liwork: *const i32,
        cwork: *mut _lapack_complex_double,
        lcwork: *mut i32,
        rwork: *mut f64,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn cgesvdx_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        VT: *mut _lapack_complex_float,
        ldvt: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvdx_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        VT: *mut f64,
        ldvt: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvdx_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        VT: *mut f32,
        ldvt: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvdx_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        ns: *mut i32,
        S: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        VT: *mut _lapack_complex_double,
        ldvt: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgesvj_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        SVA: *mut f32,
        mv: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        cwork: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvj_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        SVA: *mut f64,
        mv: *const i32,
        V: *mut f64,
        ldv: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvj_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        SVA: *mut f32,
        mv: *const i32,
        V: *mut f32,
        ldv: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvj_(
        joba: *const ::std::os::raw::c_char,
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        SVA: *mut f64,
        mv: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        cwork: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgesvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgesvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgesvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgesvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f32,
        C: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgesvxx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        R: *mut f64,
        C: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgetf2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dgetf2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn sgetf2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zgetf2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn cgetrf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dgetrf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn sgetrf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zgetrf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn cgetrf2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgetrf2_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgetrf2_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgetrf2_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgetri_(
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgetri_(
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgetri_(
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgetri_(
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn sgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn cgetsls_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgetsls_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgetsls_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgetsls_(
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgetsqrhrt_(
        m: *const i32,
        n: *const i32,
        mb1: *const i32,
        nb1: *const i32,
        nb2: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgetsqrhrt_(
        m: *const i32,
        n: *const i32,
        mb1: *const i32,
        nb1: *const i32,
        nb2: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        ldt: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgetsqrhrt_(
        m: *const i32,
        n: *const i32,
        mb1: *const i32,
        nb1: *const i32,
        nb2: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        ldt: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgetsqrhrt_(
        m: *const i32,
        n: *const i32,
        mb1: *const i32,
        nb1: *const i32,
        nb2: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cggbak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        lscale: *const f32,
        rscale: *const f32,
        m: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dggbak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        lscale: *const f64,
        rscale: *const f64,
        m: *const i32,
        V: *mut f64,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sggbak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        lscale: *const f32,
        rscale: *const f32,
        m: *const i32,
        V: *mut f32,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zggbak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        lscale: *const f64,
        rscale: *const f64,
        m: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cggbal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f32,
        rscale: *mut f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dggbal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f64,
        rscale: *mut f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sggbal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f32,
        rscale: *mut f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zggbal_(
        job: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f64,
        rscale: *mut f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgges_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_C_SELECT2,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VSL: *mut _lapack_complex_float,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_float,
        ldvsr: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgges_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_D_SELECT3,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VSL: *mut f64,
        ldvsl: *const i32,
        VSR: *mut f64,
        ldvsr: *const i32,
        work: *mut f64,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgges_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_S_SELECT3,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VSL: *mut f32,
        ldvsl: *const i32,
        VSR: *mut f32,
        ldvsr: *const i32,
        work: *mut f32,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgges_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_Z_SELECT2,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VSL: *mut _lapack_complex_double,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_double,
        ldvsr: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgges3_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_C_SELECT2,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VSL: *mut _lapack_complex_float,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_float,
        ldvsr: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dgges3_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_D_SELECT3,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VSL: *mut f64,
        ldvsl: *const i32,
        VSR: *mut f64,
        ldvsr: *const i32,
        work: *mut f64,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sgges3_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_S_SELECT3,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VSL: *mut f32,
        ldvsl: *const i32,
        VSR: *mut f32,
        ldvsr: *const i32,
        work: *mut f32,
        lwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zgges3_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_Z_SELECT2,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VSL: *mut _lapack_complex_double,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_double,
        ldvsr: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cggesx_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_C_SELECT2,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VSL: *mut _lapack_complex_float,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_float,
        ldvsr: *const i32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dggesx_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_D_SELECT3,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VSL: *mut f64,
        ldvsl: *const i32,
        VSR: *mut f64,
        ldvsr: *const i32,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn sggesx_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_S_SELECT3,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        sdim: *mut i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VSL: *mut f32,
        ldvsl: *const i32,
        VSR: *mut f32,
        ldvsr: *const i32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn zggesx_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        selctg: LAPACK_Z_SELECT2,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        sdim: *mut i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VSL: *mut _lapack_complex_double,
        ldvsl: *const i32,
        VSR: *mut _lapack_complex_double,
        ldvsr: *const i32,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        liwork: *const i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn cggev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dggev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sggev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zggev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cggev3_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dggev3_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sggev3_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zggev3_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cggevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f32,
        rscale: *mut f32,
        abnrm: *mut f32,
        bbnrm: *mut f32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dggevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f64,
        rscale: *mut f64,
        abnrm: *mut f64,
        bbnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn sggevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f32,
        rscale: *mut f32,
        abnrm: *mut f32,
        bbnrm: *mut f32,
        rconde: *mut f32,
        rcondv: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn zggevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        ilo: *mut i32,
        ihi: *mut i32,
        lscale: *mut f64,
        rscale: *mut f64,
        abnrm: *mut f64,
        bbnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        BWORK: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn cggglm_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        D: *mut _lapack_complex_float,
        X: *mut _lapack_complex_float,
        Y: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dggglm_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        D: *mut f64,
        X: *mut f64,
        Y: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sggglm_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        D: *mut f32,
        X: *mut f32,
        Y: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zggglm_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        D: *mut _lapack_complex_double,
        X: *mut _lapack_complex_double,
        Y: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgghd3_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgghd3_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgghd3_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgghd3_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgghrd_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgghrd_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgghrd_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgghrd_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgglse_(
        m: *const i32,
        n: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        D: *mut _lapack_complex_float,
        X: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgglse_(
        m: *const i32,
        n: *const i32,
        p: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        C: *mut f64,
        D: *mut f64,
        X: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgglse_(
        m: *const i32,
        n: *const i32,
        p: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        C: *mut f32,
        D: *mut f32,
        X: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgglse_(
        m: *const i32,
        n: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        D: *mut _lapack_complex_double,
        X: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cggqrf_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        taua: *mut _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        taub: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dggqrf_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut f64,
        lda: *const i32,
        taua: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        taub: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sggqrf_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut f32,
        lda: *const i32,
        taua: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        taub: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zggqrf_(
        n: *const i32,
        m: *const i32,
        p: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        taua: *mut _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        taub: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cggrqf_(
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        taua: *mut _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        taub: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dggrqf_(
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        taua: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        taub: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sggrqf_(
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        taua: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        taub: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zggrqf_(
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        taua: *mut _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        taub: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cggsvd_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        a: *mut _lapack_complex_float,
        lda: *const i32,
        b: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut f32,
        beta: *mut f32,
        u: *mut _lapack_complex_float,
        ldu: *const i32,
        v: *mut _lapack_complex_float,
        ldv: *const i32,
        q: *mut _lapack_complex_float,
        ldq: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sggsvd_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        a: *mut f32,
        lda: *const i32,
        b: *mut f32,
        ldb: *const i32,
        alpha: *mut f32,
        beta: *mut f32,
        u: *mut f32,
        ldu: *const i32,
        v: *mut f32,
        ldv: *const i32,
        q: *mut f32,
        ldq: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dggsvd_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        a: *mut f64,
        lda: *const i32,
        b: *mut f64,
        ldb: *const i32,
        alpha: *mut f64,
        beta: *mut f64,
        u: *mut f64,
        ldu: *const i32,
        v: *mut f64,
        ldv: *const i32,
        q: *mut f64,
        ldq: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zggsvd_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        a: *mut _lapack_complex_double,
        lda: *const i32,
        b: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut f64,
        beta: *mut f64,
        u: *mut _lapack_complex_double,
        ldu: *const i32,
        v: *mut _lapack_complex_double,
        ldv: *const i32,
        q: *mut _lapack_complex_double,
        ldq: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cggsvd3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut f32,
        beta: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dggsvd3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        alpha: *mut f64,
        beta: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        V: *mut f64,
        ldv: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sggsvd3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        alpha: *mut f32,
        beta: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        V: *mut f32,
        ldv: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zggsvd3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        p: *const i32,
        k: *mut i32,
        l: *mut i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut f64,
        beta: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sggsvp_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        a: *mut f32,
        lda: *const i32,
        b: *mut f32,
        ldb: *const i32,
        tola: *mut f32,
        tolb: *mut f32,
        k: *mut i32,
        l: *mut i32,
        u: *mut f32,
        ldu: *const i32,
        v: *mut f32,
        ldv: *const i32,
        q: *mut f32,
        ldq: *const i32,
        iwork: *mut i32,
        tau: *mut f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dggsvp_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        a: *mut f64,
        lda: *const i32,
        b: *mut f64,
        ldb: *const i32,
        tola: *mut f64,
        tolb: *mut f64,
        k: *mut i32,
        l: *mut i32,
        u: *mut f64,
        ldu: *const i32,
        v: *mut f64,
        ldv: *const i32,
        q: *mut f64,
        ldq: *const i32,
        iwork: *mut i32,
        tau: *mut f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cggsvp_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        a: *mut _lapack_complex_float,
        lda: *const i32,
        b: *mut _lapack_complex_float,
        ldb: *const i32,
        tola: *mut f32,
        tolb: *mut f32,
        k: *mut i32,
        l: *mut i32,
        u: *mut _lapack_complex_float,
        ldu: *const i32,
        v: *mut _lapack_complex_float,
        ldv: *const i32,
        q: *mut _lapack_complex_float,
        ldq: *const i32,
        iwork: *mut i32,
        rwork: *mut f32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zggsvp_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        a: *mut _lapack_complex_double,
        lda: *const i32,
        b: *mut _lapack_complex_double,
        ldb: *const i32,
        tola: *mut f64,
        tolb: *mut f64,
        k: *mut i32,
        l: *mut i32,
        u: *mut _lapack_complex_double,
        ldu: *const i32,
        v: *mut _lapack_complex_double,
        ldv: *const i32,
        q: *mut _lapack_complex_double,
        ldq: *const i32,
        iwork: *mut i32,
        rwork: *mut f64,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cggsvp3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        tola: *const f32,
        tolb: *const f32,
        k: *mut i32,
        l: *mut i32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        iwork: *mut i32,
        rwork: *mut f32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dggsvp3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        tola: *const f64,
        tolb: *const f64,
        k: *mut i32,
        l: *mut i32,
        U: *mut f64,
        ldu: *const i32,
        V: *mut f64,
        ldv: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        iwork: *mut i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sggsvp3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        tola: *const f32,
        tolb: *const f32,
        k: *mut i32,
        l: *mut i32,
        U: *mut f32,
        ldu: *const i32,
        V: *mut f32,
        ldv: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        iwork: *mut i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zggsvp3_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        tola: *const f64,
        tolb: *const f64,
        k: *mut i32,
        l: *mut i32,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        iwork: *mut i32,
        rwork: *mut f64,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cgtcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const _lapack_complex_float,
        D: *const _lapack_complex_float,
        DU: *const _lapack_complex_float,
        DU2: *const _lapack_complex_float,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgtcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const f64,
        D: *const f64,
        DU: *const f64,
        DU2: *const f64,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgtcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const f32,
        D: *const f32,
        DU: *const f32,
        DU2: *const f32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgtcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const _lapack_complex_double,
        D: *const _lapack_complex_double,
        DU: *const _lapack_complex_double,
        DU2: *const _lapack_complex_double,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgtrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_float,
        D: *const _lapack_complex_float,
        DU: *const _lapack_complex_float,
        DLF: *const _lapack_complex_float,
        DF: *const _lapack_complex_float,
        DUF: *const _lapack_complex_float,
        DU2: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgtrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f64,
        D: *const f64,
        DU: *const f64,
        DLF: *const f64,
        DF: *const f64,
        DUF: *const f64,
        DU2: *const f64,
        ipiv: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgtrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f32,
        D: *const f32,
        DU: *const f32,
        DLF: *const f32,
        DF: *const f32,
        DUF: *const f32,
        DU2: *const f32,
        ipiv: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgtrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_double,
        D: *const _lapack_complex_double,
        DU: *const _lapack_complex_double,
        DLF: *const _lapack_complex_double,
        DF: *const _lapack_complex_double,
        DUF: *const _lapack_complex_double,
        DU2: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cgtsv_(
        n: *const i32,
        nrhs: *const i32,
        DL: *mut _lapack_complex_float,
        D: *mut _lapack_complex_float,
        DU: *mut _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgtsv_(
        n: *const i32,
        nrhs: *const i32,
        DL: *mut f64,
        D: *mut f64,
        DU: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgtsv_(
        n: *const i32,
        nrhs: *const i32,
        DL: *mut f32,
        D: *mut f32,
        DU: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgtsv_(
        n: *const i32,
        nrhs: *const i32,
        DL: *mut _lapack_complex_double,
        D: *mut _lapack_complex_double,
        DU: *mut _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgtsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_float,
        D: *const _lapack_complex_float,
        DU: *const _lapack_complex_float,
        DLF: *mut _lapack_complex_float,
        DF: *mut _lapack_complex_float,
        DUF: *mut _lapack_complex_float,
        DU2: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dgtsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f64,
        D: *const f64,
        DU: *const f64,
        DLF: *mut f64,
        DF: *mut f64,
        DUF: *mut f64,
        DU2: *mut f64,
        ipiv: *mut i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sgtsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f32,
        D: *const f32,
        DU: *const f32,
        DLF: *mut f32,
        DF: *mut f32,
        DUF: *mut f32,
        DU2: *mut f32,
        ipiv: *mut i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zgtsvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_double,
        D: *const _lapack_complex_double,
        DU: *const _lapack_complex_double,
        DLF: *mut _lapack_complex_double,
        DF: *mut _lapack_complex_double,
        DUF: *mut _lapack_complex_double,
        DU2: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cgttrf_(
        n: *const i32,
        DL: *mut _lapack_complex_float,
        D: *mut _lapack_complex_float,
        DU: *mut _lapack_complex_float,
        DU2: *mut _lapack_complex_float,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dgttrf_(
        n: *const i32,
        DL: *mut f64,
        D: *mut f64,
        DU: *mut f64,
        DU2: *mut f64,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sgttrf_(
        n: *const i32,
        DL: *mut f32,
        D: *mut f32,
        DU: *mut f32,
        DU2: *mut f32,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zgttrf_(
        n: *const i32,
        DL: *mut _lapack_complex_double,
        D: *mut _lapack_complex_double,
        DU: *mut _lapack_complex_double,
        DU2: *mut _lapack_complex_double,
        ipiv: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cgttrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_float,
        D: *const _lapack_complex_float,
        DU: *const _lapack_complex_float,
        DU2: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dgttrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f64,
        D: *const f64,
        DU: *const f64,
        DU2: *const f64,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sgttrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const f32,
        D: *const f32,
        DU: *const f32,
        DU2: *const f32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zgttrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        DL: *const _lapack_complex_double,
        D: *const _lapack_complex_double,
        DU: *const _lapack_complex_double,
        DU2: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chbev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhbevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chbevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhbevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chbgst_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        BB: *const _lapack_complex_float,
        ldbb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbgst_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        BB: *const _lapack_complex_double,
        ldbb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbgv_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        BB: *mut _lapack_complex_float,
        ldbb: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbgv_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        BB: *mut _lapack_complex_double,
        ldbb: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbgvd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        BB: *mut _lapack_complex_float,
        ldbb: *const i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbgvd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        BB: *mut _lapack_complex_double,
        ldbb: *const i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chbgvx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        BB: *mut _lapack_complex_float,
        ldbb: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhbgvx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        BB: *mut _lapack_complex_double,
        ldbb: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chbtrd_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        D: *mut f32,
        E: *mut f32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhbtrd_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        D: *mut f64,
        E: *mut f64,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn checon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhecon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn checon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhecon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cheequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zheequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cheev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zheev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cheev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zheev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cheevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zheevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cheevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zheevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cheevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zheevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cheevr_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zheevr_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cheevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zheevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cheevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zheevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chegst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhegst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chegv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhegv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chegv_2stage_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhegv_2stage_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chegvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        W: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhegvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        W: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chegvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhegvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cherfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zherfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cherfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zherfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f64,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chesv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhesv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chesv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhesv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chesv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhesv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chesv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhesv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chesv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhesv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chesvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhesvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chesvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhesvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cheswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zheswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrd_2stage_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tau: *mut _lapack_complex_float,
        HOUS2: *mut _lapack_complex_float,
        lhous2: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrd_2stage_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tau: *mut _lapack_complex_double,
        HOUS2: *mut _lapack_complex_double,
        lhous2: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chetrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *mut _lapack_complex_float,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *mut _lapack_complex_double,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chetrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhetrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chfrk_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        alpha: *const f32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        beta: *const f32,
        C: *mut _lapack_complex_float,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhfrk_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        alpha: *const f64,
        A: *const _lapack_complex_double,
        lda: *const i32,
        beta: *const f64,
        C: *mut _lapack_complex_double,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chgeqz_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut _lapack_complex_float,
        ldh: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dhgeqz_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut f64,
        ldh: *const i32,
        T: *mut f64,
        ldt: *const i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        Q: *mut f64,
        ldq: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn shgeqz_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut f32,
        ldh: *const i32,
        T: *mut f32,
        ldt: *const i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        Q: *mut f32,
        ldq: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhgeqz_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut _lapack_complex_double,
        ldh: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chpcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhpcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chpev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhpev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chpevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhpevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chpevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhpevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chpgst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        BP: *const _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhpgst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        BP: *const _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chpgv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        BP: *mut _lapack_complex_float,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhpgv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        BP: *mut _lapack_complex_double,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chpgvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        BP: *mut _lapack_complex_float,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhpgvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        BP: *mut _lapack_complex_double,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chpgvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        BP: *mut _lapack_complex_float,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhpgvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        BP: *mut _lapack_complex_double,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        AFP: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        AFP: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chpsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhpsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chpsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        AFP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhpsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        AFP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn chptrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        D: *mut f32,
        E: *mut f32,
        tau: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhptrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        D: *mut f64,
        E: *mut f64,
        tau: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zhptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn chsein_(
        side: *const ::std::os::raw::c_char,
        eigsrc: *const ::std::os::raw::c_char,
        initv: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        H: *const _lapack_complex_float,
        ldh: *const i32,
        W: *mut _lapack_complex_float,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        IFAILL: *mut i32,
        IFAILR: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dhsein_(
        side: *const ::std::os::raw::c_char,
        eigsrc: *const ::std::os::raw::c_char,
        initv: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        H: *const f64,
        ldh: *const i32,
        WR: *mut f64,
        WI: *const f64,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        IFAILL: *mut i32,
        IFAILR: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn shsein_(
        side: *const ::std::os::raw::c_char,
        eigsrc: *const ::std::os::raw::c_char,
        initv: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        H: *const f32,
        ldh: *const i32,
        WR: *mut f32,
        WI: *const f32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        IFAILL: *mut i32,
        IFAILR: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zhsein_(
        side: *const ::std::os::raw::c_char,
        eigsrc: *const ::std::os::raw::c_char,
        initv: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        H: *const _lapack_complex_double,
        ldh: *const i32,
        W: *mut _lapack_complex_double,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        IFAILL: *mut i32,
        IFAILR: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn chseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut _lapack_complex_float,
        ldh: *const i32,
        W: *mut _lapack_complex_float,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dhseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut f64,
        ldh: *const i32,
        WR: *mut f64,
        WI: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn shseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut f32,
        ldh: *const i32,
        WR: *mut f32,
        WI: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zhseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        H: *mut _lapack_complex_double,
        ldh: *const i32,
        W: *mut _lapack_complex_double,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn clacgv_(n: *const i32, X: *mut _lapack_complex_float, incx: *const i32);
}
unsafe extern "C" {
    pub fn zlacgv_(n: *const i32, X: *mut _lapack_complex_double, incx: *const i32);
}
unsafe extern "C" {
    pub fn clacn2_(
        n: *const i32,
        V: *mut _lapack_complex_float,
        X: *mut _lapack_complex_float,
        est: *mut f32,
        kase: *mut i32,
        ISAVE: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlacn2_(
        n: *const i32,
        V: *mut f64,
        X: *mut f64,
        ISGN: *mut i32,
        est: *mut f64,
        kase: *mut i32,
        ISAVE: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slacn2_(
        n: *const i32,
        V: *mut f32,
        X: *mut f32,
        ISGN: *mut i32,
        est: *mut f32,
        kase: *mut i32,
        ISAVE: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlacn2_(
        n: *const i32,
        V: *mut _lapack_complex_double,
        X: *mut _lapack_complex_double,
        est: *mut f64,
        kase: *mut i32,
        ISAVE: *mut i32,
    );
}
unsafe extern "C" {
    pub fn clacp2_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlacp2_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn clacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn clacrm_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        rwork: *mut f32,
    );
}
unsafe extern "C" {
    pub fn zlacrm_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        rwork: *mut f64,
    );
}
unsafe extern "C" {
    pub fn zlag2c_(
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        SA: *mut _lapack_complex_float,
        ldsa: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slag2d_(
        m: *const i32,
        n: *const i32,
        SA: *const f32,
        ldsa: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlag2s_(
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        SA: *mut f32,
        ldsa: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn clag2z_(
        m: *const i32,
        n: *const i32,
        SA: *const _lapack_complex_float,
        ldsa: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn clagge_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        D: *const f32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlagge_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        D: *const f64,
        A: *mut f64,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slagge_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        D: *const f32,
        A: *mut f32,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlagge_(
        m: *const i32,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        D: *const f64,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn claghe_(
        n: *const i32,
        k: *const i32,
        D: *const f32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlaghe_(
        n: *const i32,
        k: *const i32,
        D: *const f64,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn clagsy_(
        n: *const i32,
        k: *const i32,
        D: *const f32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlagsy_(
        n: *const i32,
        k: *const i32,
        D: *const f64,
        A: *mut f64,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slagsy_(
        n: *const i32,
        k: *const i32,
        D: *const f32,
        A: *mut f32,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlagsy_(
        n: *const i32,
        k: *const i32,
        D: *const f64,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        iseed: *mut i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlamch_(cmach: *const ::std::os::raw::c_char, arg1: usize) -> f64;
}
unsafe extern "C" {
    pub fn slamch_(cmach: *const ::std::os::raw::c_char, arg1: usize) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn clangb_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlangb_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f64,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slangb_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const f32,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlangb_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        kl: *const i32,
        ku: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clange_(
        norm: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlange_(
        norm: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slange_(
        norm: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlange_(
        norm: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clangt_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const _lapack_complex_float,
        D: *const _lapack_complex_float,
        DU: *const _lapack_complex_float,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlangt_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const f64,
        D: *const f64,
        DU: *const f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slangt_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const f32,
        D: *const f32,
        DU: *const f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlangt_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        DL: *const _lapack_complex_double,
        D: *const _lapack_complex_double,
        DU: *const _lapack_complex_double,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clanhb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlanhb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clanhe_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlanhe_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clanhp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlanhp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clanht_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f32,
        E: *const _lapack_complex_float,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlanht_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f64,
        E: *const _lapack_complex_double,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clansb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlansb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const f64,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slansb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const f32,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlansb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn dlanst_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f64,
        E: *const f64,
        arg1: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slanst_(
        norm: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *const f32,
        E: *const f32,
        arg1: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn clansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clantb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlantb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const f64,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slantb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const f32,
        ldab: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlantb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn slantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        work: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn zlantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
}
unsafe extern "C" {
    pub fn clapmr_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlapmr_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut f64,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slapmr_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut f32,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlapmr_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn clapmt_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlapmt_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut f64,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn slapmt_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut f32,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zlapmt_(
        forwrd: *const i32,
        m: *const i32,
        n: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        K: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dlapy2_(x: *const f64, y: *const f64) -> f64;
}
unsafe extern "C" {
    pub fn slapy2_(x: *const f32, y: *const f32) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn dlapy3_(x: *const f64, y: *const f64, z: *const f64) -> f64;
}
unsafe extern "C" {
    pub fn slapy3_(x: *const f32, y: *const f32, z: *const f32) -> lapack_float_return;
}
unsafe extern "C" {
    pub fn clarcm_(
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        rwork: *mut f32,
    );
}
unsafe extern "C" {
    pub fn zlarcm_(
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        rwork: *mut f64,
    );
}
unsafe extern "C" {
    pub fn clarf_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const _lapack_complex_float,
        incv: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlarf_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const f64,
        incv: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slarf_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const f32,
        incv: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlarf_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const _lapack_complex_double,
        incv: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn clarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dlarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        V: *const f64,
        ldv: *const i32,
        T: *const f64,
        ldt: *const i32,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn slarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        V: *const f32,
        ldv: *const i32,
        T: *const f32,
        ldt: *const i32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn zlarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn clarfg_(
        n: *const i32,
        alpha: *mut _lapack_complex_float,
        X: *mut _lapack_complex_float,
        incx: *const i32,
        tau: *mut _lapack_complex_float,
    );
}
unsafe extern "C" {
    pub fn dlarfg_(n: *const i32, alpha: *mut f64, X: *mut f64, incx: *const i32, tau: *mut f64);
}
unsafe extern "C" {
    pub fn slarfg_(n: *const i32, alpha: *mut f32, X: *mut f32, incx: *const i32, tau: *mut f32);
}
unsafe extern "C" {
    pub fn zlarfg_(
        n: *const i32,
        alpha: *mut _lapack_complex_double,
        X: *mut _lapack_complex_double,
        incx: *const i32,
        tau: *mut _lapack_complex_double,
    );
}
unsafe extern "C" {
    pub fn clarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        tau: *const _lapack_complex_float,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dlarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        V: *const f64,
        ldv: *const i32,
        tau: *const f64,
        T: *mut f64,
        ldt: *const i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn slarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        V: *const f32,
        ldv: *const i32,
        tau: *const f32,
        T: *mut f32,
        ldt: *const i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zlarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        tau: *const _lapack_complex_double,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn clarfx_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const _lapack_complex_float,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlarfx_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const f64,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slarfx_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const f32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlarfx_(
        side: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        V: *const _lapack_complex_double,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn clarnv_(
        idist: *const i32,
        iseed: *mut i32,
        n: *const i32,
        X: *mut _lapack_complex_float,
    );
}
unsafe extern "C" {
    pub fn dlarnv_(idist: *const i32, iseed: *mut i32, n: *const i32, X: *mut f64);
}
unsafe extern "C" {
    pub fn slarnv_(idist: *const i32, iseed: *mut i32, n: *const i32, X: *mut f32);
}
unsafe extern "C" {
    pub fn zlarnv_(
        idist: *const i32,
        iseed: *mut i32,
        n: *const i32,
        X: *mut _lapack_complex_double,
    );
}
unsafe extern "C" {
    pub fn dlartgp_(f: *const f64, g: *const f64, cs: *mut f64, sn: *mut f64, r: *mut f64);
}
unsafe extern "C" {
    pub fn slartgp_(f: *const f32, g: *const f32, cs: *mut f32, sn: *mut f32, r: *mut f32);
}
unsafe extern "C" {
    pub fn dlartgs_(x: *const f64, y: *const f64, sigma: *const f64, cs: *mut f64, sn: *mut f64);
}
unsafe extern "C" {
    pub fn slartgs_(x: *const f32, y: *const f32, sigma: *const f32, cs: *mut f32, sn: *mut f32);
}
unsafe extern "C" {
    pub fn clascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *const i32,
        ku: *const i32,
        cfrom: *const f32,
        cto: *const f32,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *const i32,
        ku: *const i32,
        cfrom: *const f64,
        cto: *const f64,
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *const i32,
        ku: *const i32,
        cfrom: *const f32,
        cto: *const f32,
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *const i32,
        ku: *const i32,
        cfrom: *const f64,
        cto: *const f64,
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn claset_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const _lapack_complex_float,
        beta: *const _lapack_complex_float,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlaset_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const f64,
        beta: *const f64,
        A: *mut f64,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slaset_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const f32,
        beta: *const f32,
        A: *mut f32,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zlaset_(
        uplo: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const _lapack_complex_double,
        beta: *const _lapack_complex_double,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dlasrt_(
        id: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn slasrt_(
        id: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn classq_(
        n: *const i32,
        X: *const _lapack_complex_float,
        incx: *const i32,
        scale: *mut f32,
        sumsq: *mut f32,
    );
}
unsafe extern "C" {
    pub fn dlassq_(
        n: *const i32,
        X: *const f64,
        incx: *const i32,
        scale: *mut f64,
        sumsq: *mut f64,
    );
}
unsafe extern "C" {
    pub fn slassq_(
        n: *const i32,
        X: *const f32,
        incx: *const i32,
        scale: *mut f32,
        sumsq: *mut f32,
    );
}
unsafe extern "C" {
    pub fn zlassq_(
        n: *const i32,
        X: *const _lapack_complex_double,
        incx: *const i32,
        scale: *mut f64,
        sumsq: *mut f64,
    );
}
unsafe extern "C" {
    pub fn claswp_(
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        k1: *const i32,
        k2: *const i32,
        ipiv: *const i32,
        incx: *const i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dlaswp_(
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        k1: *const i32,
        k2: *const i32,
        ipiv: *const i32,
        incx: *const i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn slaswp_(
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        k1: *const i32,
        k2: *const i32,
        ipiv: *const i32,
        incx: *const i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zlaswp_(
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        k1: *const i32,
        k2: *const i32,
        ipiv: *const i32,
        incx: *const i32,
    ) -> i32;
}
unsafe extern "C" {
    pub fn clatms_(
        m: *const i32,
        n: *const i32,
        dist: *const ::std::os::raw::c_char,
        iseed: *mut i32,
        sym: *const ::std::os::raw::c_char,
        D: *mut f32,
        mode: *const i32,
        cond: *const f32,
        dmax: *const f32,
        kl: *const i32,
        ku: *const i32,
        pack: *const ::std::os::raw::c_char,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dlatms_(
        m: *const i32,
        n: *const i32,
        dist: *const ::std::os::raw::c_char,
        iseed: *mut i32,
        sym: *const ::std::os::raw::c_char,
        D: *mut f64,
        mode: *const i32,
        cond: *const f64,
        dmax: *const f64,
        kl: *const i32,
        ku: *const i32,
        pack: *const ::std::os::raw::c_char,
        A: *mut f64,
        lda: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn slatms_(
        m: *const i32,
        n: *const i32,
        dist: *const ::std::os::raw::c_char,
        iseed: *mut i32,
        sym: *const ::std::os::raw::c_char,
        D: *mut f32,
        mode: *const i32,
        cond: *const f32,
        dmax: *const f32,
        kl: *const i32,
        ku: *const i32,
        pack: *const ::std::os::raw::c_char,
        A: *mut f32,
        lda: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zlatms_(
        m: *const i32,
        n: *const i32,
        dist: *const ::std::os::raw::c_char,
        iseed: *mut i32,
        sym: *const ::std::os::raw::c_char,
        D: *mut f64,
        mode: *const i32,
        cond: *const f64,
        dmax: *const f64,
        kl: *const i32,
        ku: *const i32,
        pack: *const ::std::os::raw::c_char,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn clauum_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dlauum_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn slauum_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zlauum_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn ilaver_(vers_major: *mut i32, vers_minor: *mut i32, vers_patch: *mut i32) -> i32;
}
unsafe extern "C" {
    pub fn dopgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        tau: *const f64,
        Q: *mut f64,
        ldq: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sopgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        tau: *const f32,
        Q: *mut f32,
        ldq: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dopmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        AP: *const f64,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sopmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        AP: *const f32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dorbdb_(
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f64,
        ldx11: *const i32,
        X12: *mut f64,
        ldx12: *const i32,
        X21: *mut f64,
        ldx21: *const i32,
        X22: *mut f64,
        ldx22: *const i32,
        theta: *mut f64,
        phi: *mut f64,
        TAUP1: *mut f64,
        TAUP2: *mut f64,
        TAUQ1: *mut f64,
        TAUQ2: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sorbdb_(
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f32,
        ldx11: *const i32,
        X12: *mut f32,
        ldx12: *const i32,
        X21: *mut f32,
        ldx21: *const i32,
        X22: *mut f32,
        ldx22: *const i32,
        theta: *mut f32,
        phi: *mut f32,
        TAUP1: *mut f32,
        TAUP2: *mut f32,
        TAUQ1: *mut f32,
        TAUQ2: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dorcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f64,
        ldx11: *const i32,
        X12: *mut f64,
        ldx12: *const i32,
        X21: *mut f64,
        ldx21: *const i32,
        X22: *mut f64,
        ldx22: *const i32,
        theta: *mut f64,
        U1: *mut f64,
        ldu1: *const i32,
        U2: *mut f64,
        ldu2: *const i32,
        V1T: *mut f64,
        ldv1t: *const i32,
        V2T: *mut f64,
        ldv2t: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn sorcsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f32,
        ldx11: *const i32,
        X12: *mut f32,
        ldx12: *const i32,
        X21: *mut f32,
        ldx21: *const i32,
        X22: *mut f32,
        ldx22: *const i32,
        theta: *mut f32,
        U1: *mut f32,
        ldu1: *const i32,
        U2: *mut f32,
        ldu2: *const i32,
        V1T: *mut f32,
        ldv1t: *const i32,
        V2T: *mut f32,
        ldv2t: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn dorcsd2by1_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f64,
        ldx11: *const i32,
        X21: *mut f64,
        ldx21: *const i32,
        theta: *mut f64,
        U1: *mut f64,
        ldu1: *const i32,
        U2: *mut f64,
        ldu2: *const i32,
        V1T: *mut f64,
        ldv1t: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sorcsd2by1_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut f32,
        ldx11: *const i32,
        X21: *mut f32,
        ldx21: *const i32,
        theta: *mut f32,
        U1: *mut f32,
        ldu1: *const i32,
        U2: *mut f32,
        ldu2: *const i32,
        V1T: *mut f32,
        ldv1t: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dorgbr_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sorgbr_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dorghr_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorghr_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorglq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorglq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorgql_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorgql_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorgqr_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorgqr_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorgrq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorgrq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *const f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sorgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *const f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dorgtsqr_row_(
        m: *const i32,
        n: *const i32,
        mb: *const i32,
        nb: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *const f64,
        ldt: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorgtsqr_row_(
        m: *const i32,
        n: *const i32,
        mb: *const i32,
        nb: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *const f32,
        ldt: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dorhr_col_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut f64,
        lda: *const i32,
        T: *mut f64,
        ldt: *const i32,
        D: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sorhr_col_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut f32,
        lda: *const i32,
        T: *mut f32,
        ldt: *const i32,
        D: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dormbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sormbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dormhr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormhr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormql_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormql_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormrq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormrq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormrz_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sormrz_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dormtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        tau: *const f64,
        C: *mut f64,
        ldc: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sormtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        tau: *const f32,
        C: *mut f32,
        ldc: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cpbcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f64,
        ldab: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f32,
        ldab: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f64,
        ldab: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f32,
        ldab: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        AFB: *const _lapack_complex_float,
        ldafb: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        AFB: *const f64,
        ldafb: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        AFB: *const f32,
        ldafb: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        AFB: *const _lapack_complex_double,
        ldafb: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbstf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbstf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbstf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbstf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        AFB: *mut _lapack_complex_float,
        ldafb: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dpbsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        AFB: *mut f64,
        ldafb: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn spbsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        AFB: *mut f32,
        ldafb: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zpbsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        AFB: *mut _lapack_complex_double,
        ldafb: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cpbtrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_float,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbtrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbtrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbtrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut _lapack_complex_double,
        ldab: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpbtrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpbtrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spbtrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpbtrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpftrf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dpftrf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn spftrf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zpftrf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cpftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dpftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn spftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zpftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cpftrs_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dpftrs_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn spftrs_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zpftrs_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cpocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpoequ_(
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dpoequ_(
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn spoequ_(
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zpoequ_(
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cpoequb_(
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dpoequb_(
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn spoequb_(
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zpoequb_(
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cporfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dporfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sporfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zporfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cporfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        S: *const f32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dporfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        S: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sporfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        S: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zporfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        S: *const f64,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        work: *mut f64,
        swork: *mut f32,
        iter: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zcposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        work: *mut _lapack_complex_double,
        swork: *mut _lapack_complex_float,
        rwork: *mut f64,
        iter: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cposvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dposvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sposvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zposvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cposvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dposvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sposvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zposvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cpotf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpotf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spotf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpotf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dpotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn spotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn zpotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn cpotrf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpotrf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spotrf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpotrf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cppequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dppequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sppequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zppequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        AFP: *const _lapack_complex_float,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        AFP: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        AFP: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        AFP: *const _lapack_complex_double,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cppsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dppsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sppsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zppsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cppsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_float,
        AFP: *mut _lapack_complex_float,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dppsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f64,
        AFP: *mut f64,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sppsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f32,
        AFP: *mut f32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zppsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_double,
        AFP: *mut _lapack_complex_double,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cpptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        piv: *mut i32,
        rank: *mut i32,
        tol: *const f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        piv: *mut i32,
        rank: *mut i32,
        tol: *const f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        piv: *mut i32,
        rank: *mut i32,
        tol: *const f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        piv: *mut i32,
        rank: *mut i32,
        tol: *const f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cptcon_(
        n: *const i32,
        D: *const f32,
        E: *const _lapack_complex_float,
        anorm: *const f32,
        rcond: *mut f32,
        rwork: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dptcon_(
        n: *const i32,
        D: *const f64,
        E: *const f64,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sptcon_(
        n: *const i32,
        D: *const f32,
        E: *const f32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zptcon_(
        n: *const i32,
        D: *const f64,
        E: *const _lapack_complex_double,
        anorm: *const f64,
        rcond: *mut f64,
        rwork: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cpteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn spteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zpteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cptrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const _lapack_complex_float,
        DF: *const f32,
        EF: *const _lapack_complex_float,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dptrfs_(
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const f64,
        DF: *const f64,
        EF: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sptrfs_(
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const f32,
        DF: *const f32,
        EF: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zptrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const _lapack_complex_double,
        DF: *const f64,
        EF: *const _lapack_complex_double,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cptsv_(
        n: *const i32,
        nrhs: *const i32,
        D: *mut f32,
        E: *mut _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dptsv_(
        n: *const i32,
        nrhs: *const i32,
        D: *mut f64,
        E: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sptsv_(
        n: *const i32,
        nrhs: *const i32,
        D: *mut f32,
        E: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zptsv_(
        n: *const i32,
        nrhs: *const i32,
        D: *mut f64,
        E: *mut _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cptsvx_(
        fact: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const _lapack_complex_float,
        DF: *mut f32,
        EF: *mut _lapack_complex_float,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dptsvx_(
        fact: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const f64,
        DF: *mut f64,
        EF: *mut f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sptsvx_(
        fact: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const f32,
        DF: *mut f32,
        EF: *mut f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zptsvx_(
        fact: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const _lapack_complex_double,
        DF: *mut f64,
        EF: *mut _lapack_complex_double,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cpttrf_(n: *const i32, D: *mut f32, E: *mut _lapack_complex_float, info: *mut i32);
}
unsafe extern "C" {
    pub fn dpttrf_(n: *const i32, D: *mut f64, E: *mut f64, info: *mut i32);
}
unsafe extern "C" {
    pub fn spttrf_(n: *const i32, D: *mut f32, E: *mut f32, info: *mut i32);
}
unsafe extern "C" {
    pub fn zpttrf_(n: *const i32, D: *mut f64, E: *mut _lapack_complex_double, info: *mut i32);
}
unsafe extern "C" {
    pub fn cpttrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dpttrs_(
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn spttrs_(
        n: *const i32,
        nrhs: *const i32,
        D: *const f32,
        E: *const f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zpttrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        D: *const f64,
        E: *const _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsbev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssbevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsbevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssbevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsbgst_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        BB: *const f64,
        ldbb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbgst_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        BB: *const f32,
        ldbb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbgv_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        BB: *mut f64,
        ldbb: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbgv_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        BB: *mut f32,
        ldbb: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbgvd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        BB: *mut f64,
        ldbb: *const i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbgvd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        BB: *mut f32,
        ldbb: *const i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsbgvx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        BB: *mut f64,
        ldbb: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssbgvx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ka: *const i32,
        kb: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        BB: *mut f32,
        ldbb: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsbtrd_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f64,
        ldab: *const i32,
        D: *mut f64,
        E: *mut f64,
        Q: *mut f64,
        ldq: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssbtrd_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *mut f32,
        ldab: *const i32,
        D: *mut f32,
        E: *mut f32,
        Q: *mut f32,
        ldq: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsfrk_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        alpha: *const f64,
        A: *const f64,
        lda: *const i32,
        beta: *const f64,
        C: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssfrk_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const i32,
        k: *const i32,
        alpha: *const f32,
        A: *const f32,
        lda: *const i32,
        beta: *const f32,
        C: *mut f32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dspev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sspev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dspevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sspevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dspevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sspevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dspgst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        BP: *const f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sspgst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        BP: *const f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dspgv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        BP: *mut f64,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sspgv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        BP: *mut f32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dspgvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        BP: *mut f64,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sspgvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        BP: *mut f32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dspgvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        BP: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn sspgvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        BP: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn csprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        AFP: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        AFP: *const f64,
        ipiv: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        AFP: *const f32,
        ipiv: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        AFP: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cspsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dspsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f64,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sspsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut f32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zspsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cspsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        AFP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dspsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        AFP: *mut f64,
        ipiv: *mut i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sspsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        AFP: *mut f32,
        ipiv: *mut i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zspsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        AFP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsptrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        D: *mut f64,
        E: *mut f64,
        tau: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssptrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        D: *mut f32,
        E: *mut f32,
        tau: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        ipiv: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        ipiv: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dstebz_(
        range: *const ::std::os::raw::c_char,
        order: *const ::std::os::raw::c_char,
        n: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        D: *const f64,
        E: *const f64,
        m: *mut i32,
        nsplit: *mut i32,
        W: *mut f64,
        IBLOCK: *mut i32,
        ISPLIT: *mut i32,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sstebz_(
        range: *const ::std::os::raw::c_char,
        order: *const ::std::os::raw::c_char,
        n: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        D: *const f32,
        E: *const f32,
        m: *mut i32,
        nsplit: *mut i32,
        W: *mut f32,
        IBLOCK: *mut i32,
        ISPLIT: *mut i32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cstedc_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dstedc_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sstedc_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zstedc_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cstegr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dstegr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sstegr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zstegr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cstein_(
        n: *const i32,
        D: *const f32,
        E: *const f32,
        m: *const i32,
        W: *const f32,
        IBLOCK: *const i32,
        ISPLIT: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dstein_(
        n: *const i32,
        D: *const f64,
        E: *const f64,
        m: *const i32,
        W: *const f64,
        IBLOCK: *const i32,
        ISPLIT: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn sstein_(
        n: *const i32,
        D: *const f32,
        E: *const f32,
        m: *const i32,
        W: *const f32,
        IBLOCK: *const i32,
        ISPLIT: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zstein_(
        n: *const i32,
        D: *const f64,
        E: *const f64,
        m: *const i32,
        W: *const f64,
        IBLOCK: *const i32,
        ISPLIT: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cstemr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        nzc: *const i32,
        ISUPPZ: *mut i32,
        tryrac: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dstemr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        nzc: *const i32,
        ISUPPZ: *mut i32,
        tryrac: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sstemr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        nzc: *const i32,
        ISUPPZ: *mut i32,
        tryrac: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zstemr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        m: *mut i32,
        W: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        nzc: *const i32,
        ISUPPZ: *mut i32,
        tryrac: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsterf_(n: *const i32, D: *mut f64, E: *mut f64, info: *mut i32);
}
unsafe extern "C" {
    pub fn ssterf_(n: *const i32, D: *mut f32, E: *mut f32, info: *mut i32);
}
unsafe extern "C" {
    pub fn dstev_(
        jobz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sstev_(
        jobz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dstevd_(
        jobz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn sstevd_(
        jobz: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dstevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sstevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dstevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f64,
        E: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn sstevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const i32,
        D: *mut f32,
        E: *mut f32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csycon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsycon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        E: *const f64,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssycon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        E: *const f32,
        ipiv: *const i32,
        anorm: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsycon_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csyconv_(
        uplo: *const ::std::os::raw::c_char,
        way: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        E: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyconv_(
        uplo: *const ::std::os::raw::c_char,
        way: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *const i32,
        E: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyconv_(
        uplo: *const ::std::os::raw::c_char,
        way: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *const i32,
        E: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zsyconv_(
        uplo: *const ::std::os::raw::c_char,
        way: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        E: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csyequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsyequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssyequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        S: *mut f32,
        scond: *mut f32,
        amax: *mut f32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsyequb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        S: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsyev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyev_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevd_2stage_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevr_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevr_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        ISUPPZ: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsyevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssyevx_2stage_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsygst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssygst_(
        itype: *const i32,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsygv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssygv_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsygv_2stage_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssygv_2stage_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsygvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        W: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssygvd_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        W: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsygvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        vl: *const f64,
        vu: *const f64,
        il: *const i32,
        iu: *const i32,
        abstol: *const f64,
        m: *mut i32,
        W: *mut f64,
        Z: *mut f64,
        ldz: *const i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssygvx_(
        itype: *const i32,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        vl: *const f32,
        vu: *const f32,
        il: *const i32,
        iu: *const i32,
        abstol: *const f32,
        m: *mut i32,
        W: *mut f32,
        Z: *mut f32,
        ldz: *const i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        IFAIL: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn csyr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        alpha: *const _lapack_complex_float,
        X: *const _lapack_complex_float,
        incx: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsyr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        alpha: *const _lapack_complex_double,
        X: *const _lapack_complex_double,
        incx: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csyrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsyrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssyrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsyrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csyrfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *const _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsyrfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *const f64,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssyrfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *const f32,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zsyrfsx_(
        uplo: *const ::std::os::raw::c_char,
        equed: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *const _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *const i32,
        S: *const f64,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csysv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsysv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssysv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsysv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csysv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsysv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssysv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsysv_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csysv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsysv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        TB: *mut f64,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssysv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        TB: *mut f32,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsysv_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csysv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *mut _lapack_complex_float,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsysv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        E: *mut f64,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssysv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        E: *mut f32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsysv_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *mut _lapack_complex_double,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csysv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsysv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssysv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsysv_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csysvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dsysvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssysvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zsysvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csysvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        AF: *mut _lapack_complex_float,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        X: *mut _lapack_complex_float,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dsysvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f64,
        lda: *const i32,
        AF: *mut f64,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut f64,
        ldb: *const i32,
        X: *mut f64,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ssysvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut f32,
        lda: *const i32,
        AF: *mut f32,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f32,
        B: *mut f32,
        ldb: *const i32,
        X: *mut f32,
        ldx: *const i32,
        rcond: *mut f32,
        rpvgrw: *mut f32,
        berr: *mut f32,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f32,
        err_bnds_comp: *mut f32,
        nparams: *const i32,
        params: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zsysvxx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        AF: *mut _lapack_complex_double,
        ldaf: *const i32,
        ipiv: *mut i32,
        equed: *mut ::std::os::raw::c_char,
        S: *mut f64,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        X: *mut _lapack_complex_double,
        ldx: *const i32,
        rcond: *mut f64,
        rpvgrw: *mut f64,
        berr: *mut f64,
        n_err_bnds: *const i32,
        err_bnds_norm: *mut f64,
        err_bnds_comp: *mut f64,
        nparams: *const i32,
        params: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn csyswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsyswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssyswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsyswapr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        i1: *const i32,
        i2: *const i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrd_2stage_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        D: *mut f64,
        E: *mut f64,
        tau: *mut f64,
        HOUS2: *mut f64,
        lhous2: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrd_2stage_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        D: *mut f32,
        E: *mut f32,
        tau: *mut f32,
        HOUS2: *mut f32,
        lhous2: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn csytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrf_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        TB: *mut f64,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        TB: *mut f32,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrf_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *mut i32,
        ipiv2: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *mut _lapack_complex_float,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        E: *mut f64,
        ipiv: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        E: *mut f32,
        ipiv: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrf_rk_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *mut _lapack_complex_double,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrf_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytri2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f64,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut f32,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytri2x_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        nb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        E: *const f64,
        ipiv: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        E: *const f32,
        ipiv: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytri_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        E: *const _lapack_complex_float,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        E: *const f64,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        E: *const f32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs_3_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        E: *const _lapack_complex_double,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs_aa_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        TB: *mut _lapack_complex_float,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        TB: *mut f64,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        TB: *mut f32,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs_aa_2stage_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        TB: *mut _lapack_complex_double,
        ltb: *const i32,
        ipiv: *const i32,
        ipiv2: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn csytrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dsytrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ssytrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zsytrs_rook_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ipiv: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ctbcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtbcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f64,
        ldab: *const i32,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stbcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const f32,
        ldab: *const i32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztbcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctbrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *const _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtbrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *const f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stbrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *const f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztbrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *const _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctbtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_float,
        ldab: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtbtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f64,
        ldab: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stbtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const f32,
        ldab: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztbtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        kd: *const i32,
        nrhs: *const i32,
        AB: *const _lapack_complex_double,
        ldab: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctfsm_(
        transr: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const _lapack_complex_float,
        A: *const _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn dtfsm_(
        transr: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const f64,
        A: *const f64,
        B: *mut f64,
        ldb: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn stfsm_(
        transr: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const f32,
        A: *const f32,
        B: *mut f32,
        ldb: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn ztfsm_(
        transr: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        alpha: *const _lapack_complex_double,
        A: *const _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
    );
}
unsafe extern "C" {
    pub fn ctftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztftri_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctfttp_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const _lapack_complex_float,
        AP: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtfttp_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const f64,
        AP: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stfttp_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const f32,
        AP: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztfttp_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const _lapack_complex_double,
        AP: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctfttr_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const _lapack_complex_float,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtfttr_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const f64,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stfttr_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const f32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztfttr_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        ARF: *const _lapack_complex_double,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctgevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        S: *const _lapack_complex_float,
        lds: *const i32,
        P: *const _lapack_complex_float,
        ldp: *const i32,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtgevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        S: *const f64,
        lds: *const i32,
        P: *const f64,
        ldp: *const i32,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stgevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        S: *const f32,
        lds: *const i32,
        P: *const f32,
        ldp: *const i32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztgevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        S: *const _lapack_complex_double,
        lds: *const i32,
        P: *const _lapack_complex_double,
        ldp: *const i32,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctgexc_(
        wantq: *const i32,
        wantz: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        ifst: *const i32,
        ilst: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtgexc_(
        wantq: *const i32,
        wantz: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        ifst: *mut i32,
        ilst: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stgexc_(
        wantq: *const i32,
        wantz: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        ifst: *mut i32,
        ilst: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztgexc_(
        wantq: *const i32,
        wantz: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        ifst: *const i32,
        ilst: *mut i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctgsen_(
        ijob: *const i32,
        wantq: *const i32,
        wantz: *const i32,
        select: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        alpha: *mut _lapack_complex_float,
        beta: *mut _lapack_complex_float,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        Z: *mut _lapack_complex_float,
        ldz: *const i32,
        m: *mut i32,
        pl: *mut f32,
        pr: *mut f32,
        DIF: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtgsen_(
        ijob: *const i32,
        wantq: *const i32,
        wantz: *const i32,
        select: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        Q: *mut f64,
        ldq: *const i32,
        Z: *mut f64,
        ldz: *const i32,
        m: *mut i32,
        pl: *mut f64,
        pr: *mut f64,
        DIF: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stgsen_(
        ijob: *const i32,
        wantq: *const i32,
        wantz: *const i32,
        select: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        alphar: *mut f32,
        alphai: *mut f32,
        beta: *mut f32,
        Q: *mut f32,
        ldq: *const i32,
        Z: *mut f32,
        ldz: *const i32,
        m: *mut i32,
        pl: *mut f32,
        pr: *mut f32,
        DIF: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztgsen_(
        ijob: *const i32,
        wantq: *const i32,
        wantz: *const i32,
        select: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        alpha: *mut _lapack_complex_double,
        beta: *mut _lapack_complex_double,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        Z: *mut _lapack_complex_double,
        ldz: *const i32,
        m: *mut i32,
        pl: *mut f64,
        pr: *mut f64,
        DIF: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctgsja_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        tola: *const f32,
        tolb: *const f32,
        alpha: *mut f32,
        beta: *mut f32,
        U: *mut _lapack_complex_float,
        ldu: *const i32,
        V: *mut _lapack_complex_float,
        ldv: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        work: *mut _lapack_complex_float,
        ncycle: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtgsja_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        tola: *const f64,
        tolb: *const f64,
        alpha: *mut f64,
        beta: *mut f64,
        U: *mut f64,
        ldu: *const i32,
        V: *mut f64,
        ldv: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        work: *mut f64,
        ncycle: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stgsja_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        tola: *const f32,
        tolb: *const f32,
        alpha: *mut f32,
        beta: *mut f32,
        U: *mut f32,
        ldu: *const i32,
        V: *mut f32,
        ldv: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        work: *mut f32,
        ncycle: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztgsja_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        tola: *const f64,
        tolb: *const f64,
        alpha: *mut f64,
        beta: *mut f64,
        U: *mut _lapack_complex_double,
        ldu: *const i32,
        V: *mut _lapack_complex_double,
        ldv: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        work: *mut _lapack_complex_double,
        ncycle: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctgsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        VL: *const _lapack_complex_float,
        ldvl: *const i32,
        VR: *const _lapack_complex_float,
        ldvr: *const i32,
        S: *mut f32,
        DIF: *mut f32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtgsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        VL: *const f64,
        ldvl: *const i32,
        VR: *const f64,
        ldvr: *const i32,
        S: *mut f64,
        DIF: *mut f64,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stgsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        VL: *const f32,
        ldvl: *const i32,
        VR: *const f32,
        ldvr: *const i32,
        S: *mut f32,
        DIF: *mut f32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztgsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        VL: *const _lapack_complex_double,
        ldvl: *const i32,
        VR: *const _lapack_complex_double,
        ldvr: *const i32,
        S: *mut f64,
        DIF: *mut f64,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctgsyl_(
        trans: *const ::std::os::raw::c_char,
        ijob: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        D: *const _lapack_complex_float,
        ldd: *const i32,
        E: *const _lapack_complex_float,
        lde: *const i32,
        F: *mut _lapack_complex_float,
        ldf: *const i32,
        dif: *mut f32,
        scale: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dtgsyl_(
        trans: *const ::std::os::raw::c_char,
        ijob: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        C: *mut f64,
        ldc: *const i32,
        D: *const f64,
        ldd: *const i32,
        E: *const f64,
        lde: *const i32,
        F: *mut f64,
        ldf: *const i32,
        dif: *mut f64,
        scale: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn stgsyl_(
        trans: *const ::std::os::raw::c_char,
        ijob: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        C: *mut f32,
        ldc: *const i32,
        D: *const f32,
        ldd: *const i32,
        E: *const f32,
        lde: *const i32,
        F: *mut f32,
        ldf: *const i32,
        dif: *mut f32,
        scale: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ztgsyl_(
        trans: *const ::std::os::raw::c_char,
        ijob: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        D: *const _lapack_complex_double,
        ldd: *const i32,
        E: *const _lapack_complex_double,
        lde: *const i32,
        F: *mut _lapack_complex_double,
        ldf: *const i32,
        dif: *mut f64,
        scale: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ctpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctplqt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        mb: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtplqt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        mb: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        T: *mut f64,
        ldt: *const i32,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stplqt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        mb: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        T: *mut f32,
        ldt: *const i32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztplqt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        mb: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctplqt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtplqt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        T: *mut f64,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stplqt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        T: *mut f32,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztplqt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctpmlqt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        mb: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtpmlqt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        mb: *const i32,
        V: *const f64,
        ldv: *const i32,
        T: *const f64,
        ldt: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stpmlqt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        mb: *const i32,
        V: *const f32,
        ldv: *const i32,
        T: *const f32,
        ldt: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztpmlqt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        mb: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctpmqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        nb: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtpmqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        nb: *const i32,
        V: *const f64,
        ldv: *const i32,
        T: *const f64,
        ldt: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stpmqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        nb: *const i32,
        V: *const f32,
        ldv: *const i32,
        T: *const f32,
        ldt: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztpmqrt_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        nb: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctpqrt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtpqrt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        nb: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        T: *mut f64,
        ldt: *const i32,
        work: *mut f64,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stpqrt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        nb: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        T: *mut f32,
        ldt: *const i32,
        work: *mut f32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztpqrt_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctpqrt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtpqrt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        T: *mut f64,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stpqrt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        T: *mut f32,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztpqrt2_(
        m: *const i32,
        n: *const i32,
        l: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ctprfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        V: *const _lapack_complex_float,
        ldv: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        work: *mut _lapack_complex_float,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn dtprfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        V: *const f64,
        ldv: *const i32,
        T: *const f64,
        ldt: *const i32,
        A: *mut f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        work: *mut f64,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn stprfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        V: *const f32,
        ldv: *const i32,
        T: *const f32,
        ldt: *const i32,
        A: *mut f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        work: *mut f32,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn ztprfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        V: *const _lapack_complex_double,
        ldv: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        work: *mut _lapack_complex_double,
        ldwork: *const i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
}
unsafe extern "C" {
    pub fn ctprfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *const _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtprfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        B: *const f64,
        ldb: *const i32,
        X: *const f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stprfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        B: *const f32,
        ldb: *const i32,
        X: *const f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztprfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *const _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_float,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f64,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn stptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const f32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        AP: *const _lapack_complex_double,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctpttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        ARF: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtpttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        ARF: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn stpttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        ARF: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztpttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        ARF: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctpttr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dtpttr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f64,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn stpttr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const f32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ztpttr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ctrcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        rcond: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtrcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn strcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        rcond: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztrcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        rcond: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctrevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        T: *const f64,
        ldt: *const i32,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        T: *const f32,
        ldt: *const i32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrevc3_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        VL: *mut _lapack_complex_float,
        ldvl: *const i32,
        VR: *mut _lapack_complex_float,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrevc3_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        T: *const f64,
        ldt: *const i32,
        VL: *mut f64,
        ldvl: *const i32,
        VR: *mut f64,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strevc3_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut i32,
        n: *const i32,
        T: *const f32,
        ldt: *const i32,
        VL: *mut f32,
        ldvl: *const i32,
        VR: *mut f32,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrevc3_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        VL: *mut _lapack_complex_double,
        ldvl: *const i32,
        VR: *mut _lapack_complex_double,
        ldvr: *const i32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrexc_(
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        ifst: *const i32,
        ilst: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dtrexc_(
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        T: *mut f64,
        ldt: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        ifst: *mut i32,
        ilst: *mut i32,
        work: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn strexc_(
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        T: *mut f32,
        ldt: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        ifst: *mut i32,
        ilst: *mut i32,
        work: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ztrexc_(
        compq: *const ::std::os::raw::c_char,
        n: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        ifst: *const i32,
        ilst: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ctrrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        X: *const _lapack_complex_float,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut _lapack_complex_float,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtrrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        X: *const f64,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn strrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        X: *const f32,
        ldx: *const i32,
        ferr: *mut f32,
        berr: *mut f32,
        work: *mut f32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztrrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        X: *const _lapack_complex_double,
        ldx: *const i32,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut _lapack_complex_double,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctrsen_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        W: *mut _lapack_complex_float,
        m: *mut i32,
        s: *mut f32,
        sep: *mut f32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrsen_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut f64,
        ldt: *const i32,
        Q: *mut f64,
        ldq: *const i32,
        WR: *mut f64,
        WI: *mut f64,
        m: *mut i32,
        s: *mut f64,
        sep: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strsen_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut f32,
        ldt: *const i32,
        Q: *mut f32,
        ldq: *const i32,
        WR: *mut f32,
        WI: *mut f32,
        m: *mut i32,
        s: *mut f32,
        sep: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        iwork: *mut i32,
        liwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrsen_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        W: *mut _lapack_complex_double,
        m: *mut i32,
        s: *mut f64,
        sep: *mut f64,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        VL: *const _lapack_complex_float,
        ldvl: *const i32,
        VR: *const _lapack_complex_float,
        ldvr: *const i32,
        S: *mut f32,
        SEP: *mut f32,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_float,
        ldwork: *const i32,
        rwork: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *const f64,
        ldt: *const i32,
        VL: *const f64,
        ldvl: *const i32,
        VR: *const f64,
        ldvr: *const i32,
        S: *mut f64,
        SEP: *mut f64,
        mm: *const i32,
        m: *mut i32,
        work: *mut f64,
        ldwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *const f32,
        ldt: *const i32,
        VL: *const f32,
        ldvl: *const i32,
        VR: *const f32,
        ldvr: *const i32,
        S: *mut f32,
        SEP: *mut f32,
        mm: *const i32,
        m: *mut i32,
        work: *mut f32,
        ldwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const i32,
        n: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        VL: *const _lapack_complex_double,
        ldvl: *const i32,
        VR: *const _lapack_complex_double,
        ldvr: *const i32,
        S: *mut f64,
        SEP: *mut f64,
        mm: *const i32,
        m: *mut i32,
        work: *mut _lapack_complex_double,
        ldwork: *const i32,
        rwork: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrsyl_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        scale: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrsyl_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        C: *mut f64,
        ldc: *const i32,
        scale: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strsyl_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        C: *mut f32,
        ldc: *const i32,
        scale: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrsyl_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        scale: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrsyl3_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *const _lapack_complex_float,
        ldb: *const i32,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        scale: *mut f32,
        swork: *mut f32,
        ldswork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrsyl3_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *const f64,
        ldb: *const i32,
        C: *mut f64,
        ldc: *const i32,
        scale: *mut f64,
        iwork: *mut i32,
        liwork: *const i32,
        swork: *mut f64,
        ldswork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strsyl3_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *const f32,
        ldb: *const i32,
        C: *mut f32,
        ldc: *const i32,
        scale: *mut f32,
        iwork: *mut i32,
        liwork: *const i32,
        swork: *mut f32,
        ldswork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrsyl3_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const i32,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *const _lapack_complex_double,
        ldb: *const i32,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        scale: *mut f64,
        swork: *mut f64,
        ldswork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn dtrtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn strtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn ztrtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    ) -> i32;
}
unsafe extern "C" {
    pub fn ctrtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        B: *mut _lapack_complex_float,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn dtrtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f64,
        lda: *const i32,
        B: *mut f64,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn strtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const f32,
        lda: *const i32,
        B: *mut f32,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ztrtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const i32,
        nrhs: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        B: *mut _lapack_complex_double,
        ldb: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn ctrttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        ARF: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn dtrttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        ARF: *mut f64,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn strttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        ARF: *mut f32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ztrttf_(
        transr: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        ARF: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn ctrttp_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        AP: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn dtrttp_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f64,
        lda: *const i32,
        AP: *mut f64,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn strttp_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const f32,
        lda: *const i32,
        AP: *mut f32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ztrttp_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        AP: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn ctzrzf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn dtzrzf_(
        m: *const i32,
        n: *const i32,
        A: *mut f64,
        lda: *const i32,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn stzrzf_(
        m: *const i32,
        n: *const i32,
        A: *mut f32,
        lda: *const i32,
        tau: *mut f32,
        work: *mut f32,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn ztzrzf_(
        m: *const i32,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cunbdb_(
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_float,
        ldx11: *const i32,
        X12: *mut _lapack_complex_float,
        ldx12: *const i32,
        X21: *mut _lapack_complex_float,
        ldx21: *const i32,
        X22: *mut _lapack_complex_float,
        ldx22: *const i32,
        theta: *mut f32,
        phi: *mut f32,
        TAUP1: *mut _lapack_complex_float,
        TAUP2: *mut _lapack_complex_float,
        TAUQ1: *mut _lapack_complex_float,
        TAUQ2: *mut _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunbdb_(
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_double,
        ldx11: *const i32,
        X12: *mut _lapack_complex_double,
        ldx12: *const i32,
        X21: *mut _lapack_complex_double,
        ldx21: *const i32,
        X22: *mut _lapack_complex_double,
        ldx22: *const i32,
        theta: *mut f64,
        phi: *mut f64,
        TAUP1: *mut _lapack_complex_double,
        TAUP2: *mut _lapack_complex_double,
        TAUQ1: *mut _lapack_complex_double,
        TAUQ2: *mut _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cuncsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_float,
        ldx11: *const i32,
        X12: *mut _lapack_complex_float,
        ldx12: *const i32,
        X21: *mut _lapack_complex_float,
        ldx21: *const i32,
        X22: *mut _lapack_complex_float,
        ldx22: *const i32,
        theta: *mut f32,
        U1: *mut _lapack_complex_float,
        ldu1: *const i32,
        U2: *mut _lapack_complex_float,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_float,
        ldv1t: *const i32,
        V2T: *mut _lapack_complex_float,
        ldv2t: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn zuncsd_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        jobv2t: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        signs: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_double,
        ldx11: *const i32,
        X12: *mut _lapack_complex_double,
        ldx12: *const i32,
        X21: *mut _lapack_complex_double,
        ldx21: *const i32,
        X22: *mut _lapack_complex_double,
        ldx22: *const i32,
        theta: *mut f64,
        U1: *mut _lapack_complex_double,
        ldu1: *const i32,
        U2: *mut _lapack_complex_double,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_double,
        ldv1t: *const i32,
        V2T: *mut _lapack_complex_double,
        ldv2t: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
        arg5: usize,
        arg6: usize,
    );
}
unsafe extern "C" {
    pub fn cuncsd2by1_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_float,
        ldx11: *const i32,
        X21: *mut _lapack_complex_float,
        ldx21: *const i32,
        theta: *mut f32,
        U1: *mut _lapack_complex_float,
        ldu1: *const i32,
        U2: *mut _lapack_complex_float,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_float,
        ldv1t: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        rwork: *mut f32,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zuncsd2by1_(
        jobu1: *const ::std::os::raw::c_char,
        jobu2: *const ::std::os::raw::c_char,
        jobv1t: *const ::std::os::raw::c_char,
        m: *const i32,
        p: *const i32,
        q: *const i32,
        X11: *mut _lapack_complex_double,
        ldx11: *const i32,
        X21: *mut _lapack_complex_double,
        ldx21: *const i32,
        theta: *mut f64,
        U1: *mut _lapack_complex_double,
        ldu1: *const i32,
        U2: *mut _lapack_complex_double,
        ldu2: *const i32,
        V1T: *mut _lapack_complex_double,
        ldv1t: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        rwork: *mut f64,
        lrwork: *const i32,
        iwork: *mut i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cungbr_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zungbr_(
        vect: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cunghr_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zunghr_(
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cunglq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zunglq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cungql_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zungql_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cungqr_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zungqr_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cungrq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zungrq_(
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cungtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zungtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cungtsqr_row_(
        m: *const i32,
        n: *const i32,
        mb: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *const _lapack_complex_float,
        ldt: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zungtsqr_row_(
        m: *const i32,
        n: *const i32,
        mb: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *const _lapack_complex_double,
        ldt: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cunhr_col_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_float,
        lda: *const i32,
        T: *mut _lapack_complex_float,
        ldt: *const i32,
        D: *mut _lapack_complex_float,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn zunhr_col_(
        m: *const i32,
        n: *const i32,
        nb: *const i32,
        A: *mut _lapack_complex_double,
        lda: *const i32,
        T: *mut _lapack_complex_double,
        ldt: *const i32,
        D: *mut _lapack_complex_double,
        info: *mut i32,
    );
}
unsafe extern "C" {
    pub fn cunmbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zunmbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cunmhr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmhr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        ilo: *const i32,
        ihi: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmql_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmql_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmrq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmrq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmrz_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn zunmrz_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        k: *const i32,
        l: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
    );
}
unsafe extern "C" {
    pub fn cunmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_float,
        lda: *const i32,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zunmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        A: *const _lapack_complex_double,
        lda: *const i32,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        lwork: *const i32,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn cupgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_float,
        tau: *const _lapack_complex_float,
        Q: *mut _lapack_complex_float,
        ldq: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn zupgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const i32,
        AP: *const _lapack_complex_double,
        tau: *const _lapack_complex_double,
        Q: *mut _lapack_complex_double,
        ldq: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
    );
}
unsafe extern "C" {
    pub fn cupmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        AP: *const _lapack_complex_float,
        tau: *const _lapack_complex_float,
        C: *mut _lapack_complex_float,
        ldc: *const i32,
        work: *mut _lapack_complex_float,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
unsafe extern "C" {
    pub fn zupmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const i32,
        n: *const i32,
        AP: *const _lapack_complex_double,
        tau: *const _lapack_complex_double,
        C: *mut _lapack_complex_double,
        ldc: *const i32,
        work: *mut _lapack_complex_double,
        info: *mut i32,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
pub type __uint128_t = u128;
