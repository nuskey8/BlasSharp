/* automatically generated by csbindgen */

#[allow(unused)]
use ::std::os::raw::*;

use super::openblas::*;


#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_set_num_threads(
    num_threads: c_int
)
{
    openblas_set_num_threads(
        num_threads
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_set_num_threads_local(
    num_threads: c_int
) -> c_int
{
    openblas_set_num_threads_local(
        num_threads
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_get_num_threads(

) -> c_int
{
    openblas_get_num_threads(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_get_num_procs(

) -> c_int
{
    openblas_get_num_procs(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_get_config(

) -> *mut c_char
{
    openblas_get_config(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_get_corename(

) -> *mut c_char
{
    openblas_get_corename(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_set_threads_callback_function(
    callback: openblas_threads_callback
)
{
    openblas_set_threads_callback_function(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_openblas_get_parallel(

) -> c_int
{
    openblas_get_parallel(

    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdsdot(
    n: blasint,
    alpha: f32,
    x: *const f32,
    incx: blasint,
    y: *const f32,
    incy: blasint
) -> f32
{
    cblas_sdsdot(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsdot(
    n: blasint,
    x: *const f32,
    incx: blasint,
    y: *const f32,
    incy: blasint
) -> f64
{
    cblas_dsdot(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sdot(
    n: blasint,
    x: *const f32,
    incx: blasint,
    y: *const f32,
    incy: blasint
) -> f32
{
    cblas_sdot(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ddot(
    n: blasint,
    x: *const f64,
    incx: blasint,
    y: *const f64,
    incy: blasint
) -> f64
{
    cblas_ddot(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotu(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint
) -> openblas_complex_float
{
    cblas_cdotu(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotc(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint
) -> openblas_complex_float
{
    cblas_cdotc(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotu(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint
) -> openblas_complex_double
{
    cblas_zdotu(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotc(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint
) -> openblas_complex_double
{
    cblas_zdotc(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotu_sub(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint,
    ret: *mut c_void
)
{
    cblas_cdotu_sub(
        n,
        x,
        incx,
        y,
        incy,
        ret
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cdotc_sub(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint,
    ret: *mut c_void
)
{
    cblas_cdotc_sub(
        n,
        x,
        incx,
        y,
        incy,
        ret
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotu_sub(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint,
    ret: *mut c_void
)
{
    cblas_zdotu_sub(
        n,
        x,
        incx,
        y,
        incy,
        ret
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdotc_sub(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *const c_void,
    incy: blasint,
    ret: *mut c_void
)
{
    cblas_zdotc_sub(
        n,
        x,
        incx,
        y,
        incy,
        ret
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sasum(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> f32
{
    cblas_sasum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dasum(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> f64
{
    cblas_dasum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scasum(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f32
{
    cblas_scasum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dzasum(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f64
{
    cblas_dzasum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssum(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> f32
{
    cblas_ssum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsum(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> f64
{
    cblas_dsum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scsum(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f32
{
    cblas_scsum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dzsum(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f64
{
    cblas_dzsum(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_snrm2(
    N: blasint,
    X: *const f32,
    incX: blasint
) -> f32
{
    cblas_snrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dnrm2(
    N: blasint,
    X: *const f64,
    incX: blasint
) -> f64
{
    cblas_dnrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scnrm2(
    N: blasint,
    X: *const c_void,
    incX: blasint
) -> f32
{
    cblas_scnrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dznrm2(
    N: blasint,
    X: *const c_void,
    incX: blasint
) -> f64
{
    cblas_dznrm2(
        N,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_isamax(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> usize
{
    cblas_isamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idamax(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> usize
{
    cblas_idamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icamax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_icamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izamax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_izamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_isamin(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> usize
{
    cblas_isamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idamin(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> usize
{
    cblas_idamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icamin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_icamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izamin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_izamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_samax(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> f32
{
    cblas_samax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_damax(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> f64
{
    cblas_damax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scamax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f32
{
    cblas_scamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dzamax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f64
{
    cblas_dzamax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_samin(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> f32
{
    cblas_samin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_damin(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> f64
{
    cblas_damin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scamin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f32
{
    cblas_scamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dzamin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> f64
{
    cblas_dzamin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ismax(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> usize
{
    cblas_ismax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idmax(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> usize
{
    cblas_idmax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icmax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_icmax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izmax(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_izmax(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ismin(
    n: blasint,
    x: *const f32,
    incx: blasint
) -> usize
{
    cblas_ismin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_idmin(
    n: blasint,
    x: *const f64,
    incx: blasint
) -> usize
{
    cblas_idmin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_icmin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_icmin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_izmin(
    n: blasint,
    x: *const c_void,
    incx: blasint
) -> usize
{
    cblas_izmin(
        n,
        x,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpy(
    n: blasint,
    alpha: f32,
    x: *const f32,
    incx: blasint,
    y: *mut f32,
    incy: blasint
)
{
    cblas_saxpy(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpy(
    n: blasint,
    alpha: f64,
    x: *const f64,
    incx: blasint,
    y: *mut f64,
    incy: blasint
)
{
    cblas_daxpy(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpy(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_caxpy(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpy(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zaxpy(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpyc(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_caxpyc(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpyc(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zaxpyc(
        n,
        alpha,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_scopy(
    n: blasint,
    x: *const f32,
    incx: blasint,
    y: *mut f32,
    incy: blasint
)
{
    cblas_scopy(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dcopy(
    n: blasint,
    x: *const f64,
    incx: blasint,
    y: *mut f64,
    incy: blasint
)
{
    cblas_dcopy(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ccopy(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_ccopy(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zcopy(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zcopy(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sswap(
    n: blasint,
    x: *mut f32,
    incx: blasint,
    y: *mut f32,
    incy: blasint
)
{
    cblas_sswap(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dswap(
    n: blasint,
    x: *mut f64,
    incx: blasint,
    y: *mut f64,
    incy: blasint
)
{
    cblas_dswap(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cswap(
    n: blasint,
    x: *mut c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_cswap(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zswap(
    n: blasint,
    x: *mut c_void,
    incx: blasint,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zswap(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srot(
    N: blasint,
    X: *mut f32,
    incX: blasint,
    Y: *mut f32,
    incY: blasint,
    c: f32,
    s: f32
)
{
    cblas_srot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drot(
    N: blasint,
    X: *mut f64,
    incX: blasint,
    Y: *mut f64,
    incY: blasint,
    c: f64,
    s: f64
)
{
    cblas_drot(
        N,
        X,
        incX,
        Y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csrot(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incY: blasint,
    c: f32,
    s: f32
)
{
    cblas_csrot(
        n,
        x,
        incx,
        y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdrot(
    n: blasint,
    x: *const c_void,
    incx: blasint,
    y: *mut c_void,
    incY: blasint,
    c: f64,
    s: f64
)
{
    cblas_zdrot(
        n,
        x,
        incx,
        y,
        incY,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotg(
    a: *mut f32,
    b: *mut f32,
    c: *mut f32,
    s: *mut f32
)
{
    cblas_srotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotg(
    a: *mut f64,
    b: *mut f64,
    c: *mut f64,
    s: *mut f64
)
{
    cblas_drotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_crotg(
    a: *mut c_void,
    b: *mut c_void,
    c: *mut f32,
    s: *mut c_void
)
{
    cblas_crotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zrotg(
    a: *mut c_void,
    b: *mut c_void,
    c: *mut f64,
    s: *mut c_void
)
{
    cblas_zrotg(
        a,
        b,
        c,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotm(
    N: blasint,
    X: *mut f32,
    incX: blasint,
    Y: *mut f32,
    incY: blasint,
    P: *const f32
)
{
    cblas_srotm(
        N,
        X,
        incX,
        Y,
        incY,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotm(
    N: blasint,
    X: *mut f64,
    incX: blasint,
    Y: *mut f64,
    incY: blasint,
    P: *const f64
)
{
    cblas_drotm(
        N,
        X,
        incX,
        Y,
        incY,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_srotmg(
    d1: *mut f32,
    d2: *mut f32,
    b1: *mut f32,
    b2: f32,
    P: *mut f32
)
{
    cblas_srotmg(
        d1,
        d2,
        b1,
        b2,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_drotmg(
    d1: *mut f64,
    d2: *mut f64,
    b1: *mut f64,
    b2: f64,
    P: *mut f64
)
{
    cblas_drotmg(
        d1,
        d2,
        b1,
        b2,
        P
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sscal(
    N: blasint,
    alpha: f32,
    X: *mut f32,
    incX: blasint
)
{
    cblas_sscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dscal(
    N: blasint,
    alpha: f64,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cscal(
    N: blasint,
    alpha: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_cscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zscal(
    N: blasint,
    alpha: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_zscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csscal(
    N: blasint,
    alpha: f32,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_csscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zdscal(
    N: blasint,
    alpha: f64,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_zdscal(
        N,
        alpha,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemv(
    order: CBLAS_ORDER,
    trans: CBLAS_TRANSPOSE,
    m: blasint,
    n: blasint,
    alpha: f32,
    a: *const f32,
    lda: blasint,
    x: *const f32,
    incx: blasint,
    beta: f32,
    y: *mut f32,
    incy: blasint
)
{
    cblas_sgemv(
        order,
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemv(
    order: CBLAS_ORDER,
    trans: CBLAS_TRANSPOSE,
    m: blasint,
    n: blasint,
    alpha: f64,
    a: *const f64,
    lda: blasint,
    x: *const f64,
    incx: blasint,
    beta: f64,
    y: *mut f64,
    incy: blasint
)
{
    cblas_dgemv(
        order,
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemv(
    order: CBLAS_ORDER,
    trans: CBLAS_TRANSPOSE,
    m: blasint,
    n: blasint,
    alpha: *const c_void,
    a: *const c_void,
    lda: blasint,
    x: *const c_void,
    incx: blasint,
    beta: *const c_void,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_cgemv(
        order,
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemv(
    order: CBLAS_ORDER,
    trans: CBLAS_TRANSPOSE,
    m: blasint,
    n: blasint,
    alpha: *const c_void,
    a: *const c_void,
    lda: blasint,
    x: *const c_void,
    incx: blasint,
    beta: *const c_void,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zgemv(
        order,
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sger(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: f32,
    X: *const f32,
    incX: blasint,
    Y: *const f32,
    incY: blasint,
    A: *mut f32,
    lda: blasint
)
{
    cblas_sger(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dger(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: f64,
    X: *const f64,
    incX: blasint,
    Y: *const f64,
    incY: blasint,
    A: *mut f64,
    lda: blasint
)
{
    cblas_dger(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgeru(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_cgeru(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgerc(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_cgerc(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgeru(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_zgeru(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgerc(
    order: CBLAS_ORDER,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_zgerc(
        order,
        M,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const f32,
    lda: blasint,
    X: *mut f32,
    incX: blasint
)
{
    cblas_strsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const f64,
    lda: blasint,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtrsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctrsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztrsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const f32,
    lda: blasint,
    X: *mut f32,
    incX: blasint
)
{
    cblas_strmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const f64,
    lda: blasint,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtrmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctrmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztrmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const f32,
    incX: blasint,
    A: *mut f32,
    lda: blasint
)
{
    cblas_ssyr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const f64,
    incX: blasint,
    A: *mut f64,
    lda: blasint
)
{
    cblas_dsyr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const c_void,
    incX: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_cher(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const c_void,
    incX: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_zher(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const f32,
    incX: blasint,
    Y: *const f32,
    incY: blasint,
    A: *mut f32,
    lda: blasint
)
{
    cblas_ssyr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const f64,
    incX: blasint,
    Y: *const f64,
    incY: blasint,
    A: *mut f64,
    lda: blasint
)
{
    cblas_dsyr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_cher2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    A: *mut c_void,
    lda: blasint
)
{
    cblas_zher2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A,
        lda
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgbmv(
    order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    KL: blasint,
    KU: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    X: *const f32,
    incX: blasint,
    beta: f32,
    Y: *mut f32,
    incY: blasint
)
{
    cblas_sgbmv(
        order,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgbmv(
    order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    KL: blasint,
    KU: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    X: *const f64,
    incX: blasint,
    beta: f64,
    Y: *mut f64,
    incY: blasint
)
{
    cblas_dgbmv(
        order,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgbmv(
    order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    KL: blasint,
    KU: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_cgbmv(
        order,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgbmv(
    order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    KL: blasint,
    KU: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_zgbmv(
        order,
        TransA,
        M,
        N,
        KL,
        KU,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    X: *const f32,
    incX: blasint,
    beta: f32,
    Y: *mut f32,
    incY: blasint
)
{
    cblas_ssbmv(
        order,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    K: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    X: *const f64,
    incX: blasint,
    beta: f64,
    Y: *mut f64,
    incY: blasint
)
{
    cblas_dsbmv(
        order,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const f32,
    lda: blasint,
    X: *mut f32,
    incX: blasint
)
{
    cblas_stbmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const f64,
    lda: blasint,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtbmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctbmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztbmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stbsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const f32,
    lda: blasint,
    X: *mut f32,
    incX: blasint
)
{
    cblas_stbsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtbsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const f64,
    lda: blasint,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtbsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctbsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctbsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztbsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    K: blasint,
    A: *const c_void,
    lda: blasint,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztbsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        K,
        A,
        lda,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const f32,
    X: *mut f32,
    incX: blasint
)
{
    cblas_stpmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const f64,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtpmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctpmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztpmv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_stpsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const f32,
    X: *mut f32,
    incX: blasint
)
{
    cblas_stpsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtpsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const f64,
    X: *mut f64,
    incX: blasint
)
{
    cblas_dtpsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctpsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ctpsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztpsv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    N: blasint,
    Ap: *const c_void,
    X: *mut c_void,
    incX: blasint
)
{
    cblas_ztpsv(
        order,
        Uplo,
        TransA,
        Diag,
        N,
        Ap,
        X,
        incX
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssymv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    X: *const f32,
    incX: blasint,
    beta: f32,
    Y: *mut f32,
    incY: blasint
)
{
    cblas_ssymv(
        order,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsymv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    X: *const f64,
    incX: blasint,
    beta: f64,
    Y: *mut f64,
    incY: blasint
)
{
    cblas_dsymv(
        order,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chemv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_chemv(
        order,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhemv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_zhemv(
        order,
        Uplo,
        N,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    Ap: *const f32,
    X: *const f32,
    incX: blasint,
    beta: f32,
    Y: *mut f32,
    incY: blasint
)
{
    cblas_sspmv(
        order,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    Ap: *const f64,
    X: *const f64,
    incX: blasint,
    beta: f64,
    Y: *mut f64,
    incY: blasint
)
{
    cblas_dspmv(
        order,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const f32,
    incX: blasint,
    Ap: *mut f32
)
{
    cblas_sspr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const f64,
    incX: blasint,
    Ap: *mut f64
)
{
    cblas_dspr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const c_void,
    incX: blasint,
    A: *mut c_void
)
{
    cblas_chpr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpr(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const c_void,
    incX: blasint,
    A: *mut c_void
)
{
    cblas_zhpr(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sspr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f32,
    X: *const f32,
    incX: blasint,
    Y: *const f32,
    incY: blasint,
    A: *mut f32
)
{
    cblas_sspr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dspr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: f64,
    X: *const f64,
    incX: blasint,
    Y: *const f64,
    incY: blasint,
    A: *mut f64
)
{
    cblas_dspr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        A
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    Ap: *mut c_void
)
{
    cblas_chpr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpr2(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    X: *const c_void,
    incX: blasint,
    Y: *const c_void,
    incY: blasint,
    Ap: *mut c_void
)
{
    cblas_zhpr2(
        order,
        Uplo,
        N,
        alpha,
        X,
        incX,
        Y,
        incY,
        Ap
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_chbmv(
        order,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhbmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_zhbmv(
        order,
        Uplo,
        N,
        K,
        alpha,
        A,
        lda,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    Ap: *const c_void,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_chpmv(
        order,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhpmv(
    order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    N: blasint,
    alpha: *const c_void,
    Ap: *const c_void,
    X: *const c_void,
    incX: blasint,
    beta: *const c_void,
    Y: *mut c_void,
    incY: blasint
)
{
    cblas_zhpmv(
        order,
        Uplo,
        N,
        alpha,
        Ap,
        X,
        incX,
        beta,
        Y,
        incY
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *const f32,
    ldb: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_sgemm(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *const f64,
    ldb: blasint,
    beta: f64,
    C: *mut f64,
    ldc: blasint
)
{
    cblas_dgemm(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_cgemm(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm3m(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_cgemm3m(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zgemm(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm3m(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zgemm3m(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemmt(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    K: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *const f32,
    ldb: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_sgemmt(
        Order,
        Uplo,
        TransA,
        TransB,
        M,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemmt(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    K: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *const f64,
    ldb: blasint,
    beta: f64,
    C: *mut f64,
    ldc: blasint
)
{
    cblas_dgemmt(
        Order,
        Uplo,
        TransA,
        TransB,
        M,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemmt(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_cgemmt(
        Order,
        Uplo,
        TransA,
        TransB,
        M,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemmt(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zgemmt(
        Order,
        Uplo,
        TransA,
        TransB,
        M,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssymm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *const f32,
    ldb: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_ssymm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsymm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *const f64,
    ldb: blasint,
    beta: f64,
    C: *mut f64,
    ldc: blasint
)
{
    cblas_dsymm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csymm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_csymm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsymm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zsymm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyrk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_ssyrk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyrk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    beta: f64,
    C: *mut f64,
    ldc: blasint
)
{
    cblas_dsyrk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csyrk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_csyrk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsyrk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zsyrk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ssyr2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *const f32,
    ldb: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_ssyr2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dsyr2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *const f64,
    ldb: blasint,
    beta: f64,
    C: *mut f64,
    ldc: blasint
)
{
    cblas_dsyr2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_csyr2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_csyr2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zsyr2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zsyr2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strmm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *mut f32,
    ldb: blasint
)
{
    cblas_strmm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrmm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *mut f64,
    ldb: blasint
)
{
    cblas_dtrmm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrmm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *mut c_void,
    ldb: blasint
)
{
    cblas_ctrmm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrmm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *mut c_void,
    ldb: blasint
)
{
    cblas_ztrmm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_strsm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: f32,
    A: *const f32,
    lda: blasint,
    B: *mut f32,
    ldb: blasint
)
{
    cblas_strsm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dtrsm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: f64,
    A: *const f64,
    lda: blasint,
    B: *mut f64,
    ldb: blasint
)
{
    cblas_dtrsm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ctrsm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *mut c_void,
    ldb: blasint
)
{
    cblas_ctrsm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_ztrsm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    TransA: CBLAS_TRANSPOSE,
    Diag: CBLAS_DIAG,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *mut c_void,
    ldb: blasint
)
{
    cblas_ztrsm(
        Order,
        Side,
        Uplo,
        TransA,
        Diag,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_chemm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_chemm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zhemm(
    Order: CBLAS_ORDER,
    Side: CBLAS_SIDE,
    Uplo: CBLAS_UPLO,
    M: blasint,
    N: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: *const c_void,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zhemm(
        Order,
        Side,
        Uplo,
        M,
        N,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cherk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const c_void,
    lda: blasint,
    beta: f32,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_cherk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zherk(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: f64,
    A: *const c_void,
    lda: blasint,
    beta: f64,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zherk(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cher2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: f32,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_cher2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zher2k(
    Order: CBLAS_ORDER,
    Uplo: CBLAS_UPLO,
    Trans: CBLAS_TRANSPOSE,
    N: blasint,
    K: blasint,
    alpha: *const c_void,
    A: *const c_void,
    lda: blasint,
    B: *const c_void,
    ldb: blasint,
    beta: f64,
    C: *mut c_void,
    ldc: blasint
)
{
    cblas_zher2k(
        Order,
        Uplo,
        Trans,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_xerbla(
    p: blasint,
    rout: *const c_char,
    form: *const c_char
)
{
    cblas_xerbla(
        p,
        rout,
        form
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_saxpby(
    n: blasint,
    alpha: f32,
    x: *const f32,
    incx: blasint,
    beta: f32,
    y: *mut f32,
    incy: blasint
)
{
    cblas_saxpby(
        n,
        alpha,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_daxpby(
    n: blasint,
    alpha: f64,
    x: *const f64,
    incx: blasint,
    beta: f64,
    y: *mut f64,
    incy: blasint
)
{
    cblas_daxpby(
        n,
        alpha,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_caxpby(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    beta: *const c_void,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_caxpby(
        n,
        alpha,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zaxpby(
    n: blasint,
    alpha: *const c_void,
    x: *const c_void,
    incx: blasint,
    beta: *const c_void,
    y: *mut c_void,
    incy: blasint
)
{
    cblas_zaxpby(
        n,
        alpha,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_somatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: f32,
    a: *const f32,
    clda: blasint,
    b: *mut f32,
    cldb: blasint
)
{
    cblas_somatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        b,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_domatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: f64,
    a: *const f64,
    clda: blasint,
    b: *mut f64,
    cldb: blasint
)
{
    cblas_domatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        b,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_comatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: *const f32,
    a: *const f32,
    clda: blasint,
    b: *mut f32,
    cldb: blasint
)
{
    cblas_comatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        b,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zomatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: *const f64,
    a: *const f64,
    clda: blasint,
    b: *mut f64,
    cldb: blasint
)
{
    cblas_zomatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        b,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_simatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: f32,
    a: *mut f32,
    clda: blasint,
    cldb: blasint
)
{
    cblas_simatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dimatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: f64,
    a: *mut f64,
    clda: blasint,
    cldb: blasint
)
{
    cblas_dimatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cimatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: *const f32,
    a: *mut f32,
    clda: blasint,
    cldb: blasint
)
{
    cblas_cimatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zimatcopy(
    CORDER: CBLAS_ORDER,
    CTRANS: CBLAS_TRANSPOSE,
    crows: blasint,
    ccols: blasint,
    calpha: *const f64,
    a: *mut f64,
    clda: blasint,
    cldb: blasint
)
{
    cblas_zimatcopy(
        CORDER,
        CTRANS,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cldb
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgeadd(
    CORDER: CBLAS_ORDER,
    crows: blasint,
    ccols: blasint,
    calpha: f32,
    a: *const f32,
    clda: blasint,
    cbeta: f32,
    c: *mut f32,
    cldc: blasint
)
{
    cblas_sgeadd(
        CORDER,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cbeta,
        c,
        cldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgeadd(
    CORDER: CBLAS_ORDER,
    crows: blasint,
    ccols: blasint,
    calpha: f64,
    a: *const f64,
    clda: blasint,
    cbeta: f64,
    c: *mut f64,
    cldc: blasint
)
{
    cblas_dgeadd(
        CORDER,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cbeta,
        c,
        cldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgeadd(
    CORDER: CBLAS_ORDER,
    crows: blasint,
    ccols: blasint,
    calpha: *const f32,
    a: *const f32,
    clda: blasint,
    cbeta: *const f32,
    c: *mut f32,
    cldc: blasint
)
{
    cblas_cgeadd(
        CORDER,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cbeta,
        c,
        cldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgeadd(
    CORDER: CBLAS_ORDER,
    crows: blasint,
    ccols: blasint,
    calpha: *const f64,
    a: *const f64,
    clda: blasint,
    cbeta: *const f64,
    c: *mut f64,
    cldc: blasint
)
{
    cblas_zgeadd(
        CORDER,
        crows,
        ccols,
        calpha,
        a,
        clda,
        cbeta,
        c,
        cldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sgemm_batch(
    Order: CBLAS_ORDER,
    TransA_array: *const CBLAS_TRANSPOSE,
    TransB_array: *const CBLAS_TRANSPOSE,
    M_array: *const blasint,
    N_array: *const blasint,
    K_array: *const blasint,
    alpha_array: *const f32,
    A_array: *mut *const f32,
    lda_array: *const blasint,
    B_array: *mut *const f32,
    ldb_array: *const blasint,
    beta_array: *const f32,
    C_array: *mut *mut f32,
    ldc_array: *const blasint,
    group_count: blasint,
    group_size: *const blasint
)
{
    cblas_sgemm_batch(
        Order,
        TransA_array,
        TransB_array,
        M_array,
        N_array,
        K_array,
        alpha_array,
        A_array,
        lda_array,
        B_array,
        ldb_array,
        beta_array,
        C_array,
        ldc_array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dgemm_batch(
    Order: CBLAS_ORDER,
    TransA_array: *const CBLAS_TRANSPOSE,
    TransB_array: *const CBLAS_TRANSPOSE,
    M_array: *const blasint,
    N_array: *const blasint,
    K_array: *const blasint,
    alpha_array: *const f64,
    A_array: *mut *const f64,
    lda_array: *const blasint,
    B_array: *mut *const f64,
    ldb_array: *const blasint,
    beta_array: *const f64,
    C_array: *mut *mut f64,
    ldc_array: *const blasint,
    group_count: blasint,
    group_size: *const blasint
)
{
    cblas_dgemm_batch(
        Order,
        TransA_array,
        TransB_array,
        M_array,
        N_array,
        K_array,
        alpha_array,
        A_array,
        lda_array,
        B_array,
        ldb_array,
        beta_array,
        C_array,
        ldc_array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_cgemm_batch(
    Order: CBLAS_ORDER,
    TransA_array: *const CBLAS_TRANSPOSE,
    TransB_array: *const CBLAS_TRANSPOSE,
    M_array: *const blasint,
    N_array: *const blasint,
    K_array: *const blasint,
    alpha_array: *const c_void,
    A_array: *mut *const c_void,
    lda_array: *const blasint,
    B_array: *mut *const c_void,
    ldb_array: *const blasint,
    beta_array: *const c_void,
    C_array: *mut *mut c_void,
    ldc_array: *const blasint,
    group_count: blasint,
    group_size: *const blasint
)
{
    cblas_cgemm_batch(
        Order,
        TransA_array,
        TransB_array,
        M_array,
        N_array,
        K_array,
        alpha_array,
        A_array,
        lda_array,
        B_array,
        ldb_array,
        beta_array,
        C_array,
        ldc_array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_zgemm_batch(
    Order: CBLAS_ORDER,
    TransA_array: *const CBLAS_TRANSPOSE,
    TransB_array: *const CBLAS_TRANSPOSE,
    M_array: *const blasint,
    N_array: *const blasint,
    K_array: *const blasint,
    alpha_array: *const c_void,
    A_array: *mut *const c_void,
    lda_array: *const blasint,
    B_array: *mut *const c_void,
    ldb_array: *const blasint,
    beta_array: *const c_void,
    C_array: *mut *mut c_void,
    ldc_array: *const blasint,
    group_count: blasint,
    group_size: *const blasint
)
{
    cblas_zgemm_batch(
        Order,
        TransA_array,
        TransB_array,
        M_array,
        N_array,
        K_array,
        alpha_array,
        A_array,
        lda_array,
        B_array,
        ldb_array,
        beta_array,
        C_array,
        ldc_array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbstobf16(
    n: blasint,
    in_: *const f32,
    incin: blasint,
    out: *mut bfloat16,
    incout: blasint
)
{
    cblas_sbstobf16(
        n,
        in_,
        incin,
        out,
        incout
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbdtobf16(
    n: blasint,
    in_: *const f64,
    incin: blasint,
    out: *mut bfloat16,
    incout: blasint
)
{
    cblas_sbdtobf16(
        n,
        in_,
        incin,
        out,
        incout
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbf16tos(
    n: blasint,
    in_: *const bfloat16,
    incin: blasint,
    out: *mut f32,
    incout: blasint
)
{
    cblas_sbf16tos(
        n,
        in_,
        incin,
        out,
        incout
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_dbf16tod(
    n: blasint,
    in_: *const bfloat16,
    incin: blasint,
    out: *mut f64,
    incout: blasint
)
{
    cblas_dbf16tod(
        n,
        in_,
        incin,
        out,
        incout
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbdot(
    n: blasint,
    x: *const bfloat16,
    incx: blasint,
    y: *const bfloat16,
    incy: blasint
) -> f32
{
    cblas_sbdot(
        n,
        x,
        incx,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbgemv(
    order: CBLAS_ORDER,
    trans: CBLAS_TRANSPOSE,
    m: blasint,
    n: blasint,
    alpha: f32,
    a: *const bfloat16,
    lda: blasint,
    x: *const bfloat16,
    incx: blasint,
    beta: f32,
    y: *mut f32,
    incy: blasint
)
{
    cblas_sbgemv(
        order,
        trans,
        m,
        n,
        alpha,
        a,
        lda,
        x,
        incx,
        beta,
        y,
        incy
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbgemm(
    Order: CBLAS_ORDER,
    TransA: CBLAS_TRANSPOSE,
    TransB: CBLAS_TRANSPOSE,
    M: blasint,
    N: blasint,
    K: blasint,
    alpha: f32,
    A: *const bfloat16,
    lda: blasint,
    B: *const bfloat16,
    ldb: blasint,
    beta: f32,
    C: *mut f32,
    ldc: blasint
)
{
    cblas_sbgemm(
        Order,
        TransA,
        TransB,
        M,
        N,
        K,
        alpha,
        A,
        lda,
        B,
        ldb,
        beta,
        C,
        ldc
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cblas_sbgemm_batch(
    Order: CBLAS_ORDER,
    TransA_array: *const CBLAS_TRANSPOSE,
    TransB_array: *const CBLAS_TRANSPOSE,
    M_array: *const blasint,
    N_array: *const blasint,
    K_array: *const blasint,
    alpha_array: *const f32,
    A_array: *mut *const bfloat16,
    lda_array: *const blasint,
    B_array: *mut *const bfloat16,
    ldb_array: *const blasint,
    beta_array: *const f32,
    C_array: *mut *mut f32,
    ldc_array: *const blasint,
    group_count: blasint,
    group_size: *const blasint
)
{
    cblas_sbgemm_batch(
        Order,
        TransA_array,
        TransB_array,
        M_array,
        N_array,
        K_array,
        alpha_array,
        A_array,
        lda_array,
        B_array,
        ldb_array,
        beta_array,
        C_array,
        ldc_array,
        group_count,
        group_size
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_lsame_(
    ca: *const c_char,
    cb: *const c_char,
    lca: i32,
    lcb: i32,
    arg1: usize,
    arg2: usize
) -> i32
{
    lsame_(
        ca,
        cb,
        lca,
        lcb,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    theta: *mut f32,
    phi: *mut f32,
    U1: *mut _lapack_complex_float,
    ldu1: *const i32,
    U2: *mut _lapack_complex_float,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_float,
    ldv1t: *const i32,
    V2T: *mut _lapack_complex_float,
    ldv2t: *const i32,
    B11D: *mut f32,
    B11E: *mut f32,
    B12D: *mut f32,
    B12E: *mut f32,
    B21D: *mut f32,
    B21E: *mut f32,
    B22D: *mut f32,
    B22E: *mut f32,
    rwork: *mut f32,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    cbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        m,
        p,
        q,
        theta,
        phi,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        B11D,
        B11E,
        B12D,
        B12E,
        B21D,
        B21E,
        B22D,
        B22E,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    theta: *mut f64,
    phi: *mut f64,
    U1: *mut f64,
    ldu1: *const i32,
    U2: *mut f64,
    ldu2: *const i32,
    V1T: *mut f64,
    ldv1t: *const i32,
    V2T: *mut f64,
    ldv2t: *const i32,
    B11D: *mut f64,
    B11E: *mut f64,
    B12D: *mut f64,
    B12E: *mut f64,
    b21d: *mut f64,
    b21e: *mut f64,
    b22d: *mut f64,
    b22e: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    dbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        m,
        p,
        q,
        theta,
        phi,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        B11D,
        B11E,
        B12D,
        B12E,
        b21d,
        b21e,
        b22d,
        b22e,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    theta: *mut f32,
    phi: *mut f32,
    U1: *mut f32,
    ldu1: *const i32,
    U2: *mut f32,
    ldu2: *const i32,
    V1T: *mut f32,
    ldv1t: *const i32,
    V2T: *mut f32,
    ldv2t: *const i32,
    B11D: *mut f32,
    B11E: *mut f32,
    B12D: *mut f32,
    B12E: *mut f32,
    B21D: *mut f32,
    B21E: *mut f32,
    B22D: *mut f32,
    B22E: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    sbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        m,
        p,
        q,
        theta,
        phi,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        B11D,
        B11E,
        B12D,
        B12E,
        B21D,
        B21E,
        B22D,
        B22E,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zbbcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    theta: *mut f64,
    phi: *mut f64,
    U1: *mut _lapack_complex_double,
    ldu1: *const i32,
    U2: *mut _lapack_complex_double,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_double,
    ldv1t: *const i32,
    V2T: *mut _lapack_complex_double,
    ldv2t: *const i32,
    B11D: *mut f64,
    B11E: *mut f64,
    B12D: *mut f64,
    B12E: *mut f64,
    B21D: *mut f64,
    B21E: *mut f64,
    B22D: *mut f64,
    B22E: *mut f64,
    rwork: *mut f64,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    zbbcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        m,
        p,
        q,
        theta,
        phi,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        B11D,
        B11E,
        B12D,
        B12E,
        B21D,
        B21E,
        B22D,
        B22E,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsdc_(
    uplo: *const c_char,
    compq: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    VT: *mut f64,
    ldvt: *const i32,
    Q: *mut f64,
    IQ: *mut i32,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dbdsdc_(
        uplo,
        compq,
        n,
        D,
        E,
        U,
        ldu,
        VT,
        ldvt,
        Q,
        IQ,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsdc_(
    uplo: *const c_char,
    compq: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    VT: *mut f32,
    ldvt: *const i32,
    Q: *mut f32,
    IQ: *mut i32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sbdsdc_(
        uplo,
        compq,
        n,
        D,
        E,
        U,
        ldu,
        VT,
        ldvt,
        Q,
        IQ,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cbdsqr_(
    uplo: *const c_char,
    n: *const i32,
    ncvt: *const i32,
    nru: *const i32,
    ncc: *const i32,
    D: *mut f32,
    E: *mut f32,
    VT: *mut _lapack_complex_float,
    ldvt: *const i32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        D,
        E,
        VT,
        ldvt,
        U,
        ldu,
        C,
        ldc,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsqr_(
    uplo: *const c_char,
    n: *const i32,
    ncvt: *const i32,
    nru: *const i32,
    ncc: *const i32,
    D: *mut f64,
    E: *mut f64,
    VT: *mut f64,
    ldvt: *const i32,
    U: *mut f64,
    ldu: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        D,
        E,
        VT,
        ldvt,
        U,
        ldu,
        C,
        ldc,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsqr_(
    uplo: *const c_char,
    n: *const i32,
    ncvt: *const i32,
    nru: *const i32,
    ncc: *const i32,
    D: *mut f32,
    E: *mut f32,
    VT: *mut f32,
    ldvt: *const i32,
    U: *mut f32,
    ldu: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        D,
        E,
        VT,
        ldvt,
        U,
        ldu,
        C,
        ldc,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zbdsqr_(
    uplo: *const c_char,
    n: *const i32,
    ncvt: *const i32,
    nru: *const i32,
    ncc: *const i32,
    D: *mut f64,
    E: *mut f64,
    VT: *mut _lapack_complex_double,
    ldvt: *const i32,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zbdsqr_(
        uplo,
        n,
        ncvt,
        nru,
        ncc,
        D,
        E,
        VT,
        ldvt,
        U,
        ldu,
        C,
        ldc,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dbdsvdx_(
    uplo: *const c_char,
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *const f64,
    E: *const f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dbdsvdx_(
        uplo,
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        Z,
        ldz,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sbdsvdx_(
    uplo: *const c_char,
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *const f32,
    E: *const f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sbdsvdx_(
        uplo,
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        Z,
        ldz,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ddisna_(
    job: *const c_char,
    m: *const i32,
    n: *const i32,
    D: *const f64,
    SEP: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    ddisna_(
        job,
        m,
        n,
        D,
        SEP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sdisna_(
    job: *const c_char,
    m: *const i32,
    n: *const i32,
    D: *const f32,
    SEP: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sdisna_(
        job,
        m,
        n,
        D,
        SEP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbbrd_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    ncc: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    D: *mut f32,
    E: *mut f32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    PT: *mut _lapack_complex_float,
    ldpt: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        PT,
        ldpt,
        C,
        ldc,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbbrd_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    ncc: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    D: *mut f64,
    E: *mut f64,
    Q: *mut f64,
    ldq: *const i32,
    PT: *mut f64,
    ldpt: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        PT,
        ldpt,
        C,
        ldc,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbbrd_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    ncc: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    D: *mut f32,
    E: *mut f32,
    Q: *mut f32,
    ldq: *const i32,
    PT: *mut f32,
    ldpt: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        PT,
        ldpt,
        C,
        ldc,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbbrd_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    ncc: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    D: *mut f64,
    E: *mut f64,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    PT: *mut _lapack_complex_double,
    ldpt: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgbbrd_(
        vect,
        m,
        n,
        ncc,
        kl,
        ku,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        PT,
        ldpt,
        C,
        ldc,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbcon_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgbcon_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbcon_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f64,
    ldab: *const i32,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgbcon_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbcon_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f32,
    ldab: *const i32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgbcon_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbcon_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgbcon_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbequ_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cgbequ_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbequ_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f64,
    ldab: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dgbequ_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbequ_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f32,
    ldab: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    sgbequ_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbequ_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zgbequ_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbequb_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cgbequb_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbequb_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f64,
    ldab: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dgbequb_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbequb_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f32,
    ldab: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    sgbequb_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbequb_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zgbequb_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbrfs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    AFB: *const _lapack_complex_float,
    ldafb: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbrfs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    AFB: *const f64,
    ldafb: *const i32,
    ipiv: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbrfs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    AFB: *const f32,
    ldafb: *const i32,
    ipiv: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbrfs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    AFB: *const _lapack_complex_double,
    ldafb: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgbrfs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    AFB: *const _lapack_complex_float,
    ldafb: *const i32,
    ipiv: *const i32,
    R: *const f32,
    C: *const f32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    AFB: *const f64,
    ldafb: *const i32,
    ipiv: *const i32,
    R: *const f64,
    C: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    AFB: *const f32,
    ldafb: *const i32,
    ipiv: *const i32,
    R: *const f32,
    C: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbrfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    AFB: *const _lapack_complex_double,
    ldafb: *const i32,
    ipiv: *const i32,
    R: *const f64,
    C: *const f64,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgbrfsx_(
        trans,
        equed,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsv_(
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32
)
{
    cgbsv_(
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsv_(
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32
)
{
    dgbsv_(
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsv_(
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32
)
{
    sgbsv_(
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsv_(
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32
)
{
    zgbsv_(
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    AFB: *mut _lapack_complex_float,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    AFB: *mut f64,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    AFB: *mut f32,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    AFB: *mut _lapack_complex_double,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgbsvx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    AFB: *mut _lapack_complex_float,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    AFB: *mut f64,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    AFB: *mut f32,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbsvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    AFB: *mut _lapack_complex_double,
    ldafb: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgbsvxx_(
        fact,
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbtrf_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    cgbtrf_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbtrf_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    dgbtrf_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbtrf_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    sgbtrf_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbtrf_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    zgbtrf_(
        m,
        n,
        kl,
        ku,
        AB,
        ldab,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgbtrs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgbtrs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgbtrs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgbtrs_(
    trans: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zgbtrs_(
        trans,
        n,
        kl,
        ku,
        nrhs,
        AB,
        ldab,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    scale: *const f32,
    m: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    scale: *const f64,
    m: *const i32,
    V: *mut f64,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    scale: *const f32,
    m: *const i32,
    V: *mut f32,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    scale: *const f64,
    m: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgebak_(
        job,
        side,
        n,
        ilo,
        ihi,
        scale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebal_(
    job: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgebal_(
        job,
        n,
        A,
        lda,
        ilo,
        ihi,
        scale,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebal_(
    job: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dgebal_(
        job,
        n,
        A,
        lda,
        ilo,
        ihi,
        scale,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebal_(
    job: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sgebal_(
        job,
        n,
        A,
        lda,
        ilo,
        ihi,
        scale,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebal_(
    job: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgebal_(
        job,
        n,
        A,
        lda,
        ilo,
        ihi,
        scale,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgebrd_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tauq: *mut _lapack_complex_float,
    taup: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgebrd_(
        m,
        n,
        A,
        lda,
        D,
        E,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgebrd_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tauq: *mut f64,
    taup: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgebrd_(
        m,
        n,
        A,
        lda,
        D,
        E,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgebrd_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tauq: *mut f32,
    taup: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgebrd_(
        m,
        n,
        A,
        lda,
        D,
        E,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgebrd_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tauq: *mut _lapack_complex_double,
    taup: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgebrd_(
        m,
        n,
        A,
        lda,
        D,
        E,
        tauq,
        taup,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgecon_(
    norm: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgecon_(
        norm,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgecon_(
    norm: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgecon_(
        norm,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgecon_(
    norm: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgecon_(
        norm,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgecon_(
    norm: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgecon_(
        norm,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeequ_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cgeequ_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeequ_(
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dgeequ_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeequ_(
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    sgeequ_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeequ_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zgeequ_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeequb_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cgeequb_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeequb_(
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dgeequb_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeequb_(
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    R: *mut f32,
    C: *mut f32,
    rowcnd: *mut f32,
    colcnd: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    sgeequb_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeequb_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    R: *mut f64,
    C: *mut f64,
    rowcnd: *mut f64,
    colcnd: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zgeequb_(
        m,
        n,
        A,
        lda,
        R,
        C,
        rowcnd,
        colcnd,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_C_SELECT1,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    sdim: *mut i32,
    W: *mut _lapack_complex_float,
    VS: *mut _lapack_complex_float,
    ldvs: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgees_(
        jobvs,
        sort,
        select,
        n,
        A,
        lda,
        sdim,
        W,
        VS,
        ldvs,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_D_SELECT2,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    sdim: *mut i32,
    WR: *mut f64,
    WI: *mut f64,
    VS: *mut f64,
    ldvs: *const i32,
    work: *mut f64,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgees_(
        jobvs,
        sort,
        select,
        n,
        A,
        lda,
        sdim,
        WR,
        WI,
        VS,
        ldvs,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_S_SELECT2,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    sdim: *mut i32,
    WR: *mut f32,
    WI: *mut f32,
    VS: *mut f32,
    ldvs: *const i32,
    work: *mut f32,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgees_(
        jobvs,
        sort,
        select,
        n,
        A,
        lda,
        sdim,
        WR,
        WI,
        VS,
        ldvs,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgees_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_Z_SELECT1,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    sdim: *mut i32,
    W: *mut _lapack_complex_double,
    VS: *mut _lapack_complex_double,
    ldvs: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgees_(
        jobvs,
        sort,
        select,
        n,
        A,
        lda,
        sdim,
        W,
        VS,
        ldvs,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_C_SELECT1,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    sdim: *mut i32,
    W: *mut _lapack_complex_float,
    VS: *mut _lapack_complex_float,
    ldvs: *const i32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        A,
        lda,
        sdim,
        W,
        VS,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_D_SELECT2,
    sense: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    sdim: *mut i32,
    WR: *mut f64,
    WI: *mut f64,
    VS: *mut f64,
    ldvs: *const i32,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        A,
        lda,
        sdim,
        WR,
        WI,
        VS,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_S_SELECT2,
    sense: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    sdim: *mut i32,
    WR: *mut f32,
    WI: *mut f32,
    VS: *mut f32,
    ldvs: *const i32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        A,
        lda,
        sdim,
        WR,
        WI,
        VS,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeesx_(
    jobvs: *const c_char,
    sort: *const c_char,
    select: LAPACK_Z_SELECT1,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    sdim: *mut i32,
    W: *mut _lapack_complex_double,
    VS: *mut _lapack_complex_double,
    ldvs: *const i32,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgeesx_(
        jobvs,
        sort,
        select,
        sense,
        n,
        A,
        lda,
        sdim,
        W,
        VS,
        ldvs,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgeev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    WR: *mut f64,
    WI: *mut f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgeev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    WR: *mut f32,
    WI: *mut f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgeev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgeev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f32,
    abnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    cgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    WR: *mut f64,
    WI: *mut f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f64,
    abnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    WR: *mut f32,
    WI: *mut f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f32,
    abnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    sgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    scale: *mut f64,
    abnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    zgeevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        scale,
        abnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgehrd_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgehrd_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgehrd_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgehrd_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgehrd_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgehrd_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgehrd_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgehrd_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    SVA: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    cwork: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    cgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        A,
        lda,
        SVA,
        U,
        ldu,
        V,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    SVA: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    V: *mut f64,
    ldv: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    dgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        A,
        lda,
        SVA,
        U,
        ldu,
        V,
        ldv,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    SVA: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    V: *mut f32,
    ldv: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    sgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        A,
        lda,
        SVA,
        U,
        ldu,
        V,
        ldv,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgejsv_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    jobr: *const c_char,
    jobt: *const c_char,
    jobp: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    SVA: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    cwork: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    zgejsv_(
        joba,
        jobu,
        jobv,
        jobr,
        jobt,
        jobp,
        m,
        n,
        A,
        lda,
        SVA,
        U,
        ldu,
        V,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelq_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    tsize: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgelq_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelq_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    tsize: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgelq_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelq_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    tsize: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgelq_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelq_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    tsize: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgelq_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelq2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cgelq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelq2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dgelq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelq2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sgelq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelq2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zgelq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelqf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgelqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelqf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgelqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelqf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgelqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelqf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgelqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgels_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cgels_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgels_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dgels_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgels_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sgels_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgels_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zgels_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelsd_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    S: *mut f32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    info: *mut i32
)
{
    cgelsd_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelsd_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    S: *mut f64,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32
)
{
    dgelsd_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelsd_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    S: *mut f32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32
)
{
    sgelsd_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelsd_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    S: *mut f64,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    info: *mut i32
)
{
    zgelsd_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        iwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelss_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    S: *mut f32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32
)
{
    cgelss_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelss_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    S: *mut f64,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgelss_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelss_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    S: *mut f32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgelss_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelss_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    S: *mut f64,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32
)
{
    zgelss_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        S,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgelsy_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    JPVT: *mut i32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32
)
{
    cgelsy_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        JPVT,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgelsy_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    JPVT: *mut i32,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgelsy_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        JPVT,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgelsy_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    JPVT: *mut i32,
    rcond: *const f32,
    rank: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgelsy_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        JPVT,
        rcond,
        rank,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgelsy_(
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    JPVT: *mut i32,
    rcond: *const f64,
    rank: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32
)
{
    zgelsy_(
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        JPVT,
        rcond,
        rank,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    T: *const _lapack_complex_float,
    tsize: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgemlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    T: *const f64,
    tsize: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgemlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    T: *const f32,
    tsize: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgemlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    T: *const _lapack_complex_double,
    tsize: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgemlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    T: *const _lapack_complex_float,
    tsize: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgemqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    T: *const f64,
    tsize: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgemqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    T: *const f32,
    tsize: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgemqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    T: *const _lapack_complex_double,
    tsize: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgemqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        T,
        tsize,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    nb: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    nb: *const i32,
    V: *const f64,
    ldv: *const i32,
    T: *const f64,
    ldt: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    nb: *const i32,
    V: *const f32,
    ldv: *const i32,
    T: *const f32,
    ldt: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgemqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    nb: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgemqrt_(
        side,
        trans,
        m,
        n,
        k,
        nb,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeql2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cgeql2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeql2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dgeql2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeql2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sgeql2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeql2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zgeql2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqlf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgeqlf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqlf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgeqlf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqlf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgeqlf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqlf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgeqlf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqpf_(
    m: *mut i32,
    n: *mut i32,
    a: *mut f32,
    lda: *mut i32,
    jpvt: *mut i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqpf_(
    m: *mut i32,
    n: *mut i32,
    a: *mut f64,
    lda: *mut i32,
    jpvt: *mut i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqpf_(
    m: *mut i32,
    n: *mut i32,
    a: *mut _lapack_complex_float,
    lda: *mut i32,
    jpvt: *mut i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32
)
{
    cgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqpf_(
    m: *mut i32,
    n: *mut i32,
    a: *mut _lapack_complex_double,
    lda: *mut i32,
    jpvt: *mut i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32
)
{
    zgeqpf_(
        m,
        n,
        a,
        lda,
        jpvt,
        tau,
        work,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqp3_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    JPVT: *mut i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32
)
{
    cgeqp3_(
        m,
        n,
        A,
        lda,
        JPVT,
        tau,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqp3_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    JPVT: *mut i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgeqp3_(
        m,
        n,
        A,
        lda,
        JPVT,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqp3_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    JPVT: *mut i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgeqp3_(
        m,
        n,
        A,
        lda,
        JPVT,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqp3_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    JPVT: *mut i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32
)
{
    zgeqp3_(
        m,
        n,
        A,
        lda,
        JPVT,
        tau,
        work,
        lwork,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqr_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    tsize: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgeqr_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqr_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    tsize: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgeqr_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqr_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    tsize: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgeqr_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqr_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    tsize: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgeqr_(
        m,
        n,
        A,
        lda,
        T,
        tsize,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqr2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cgeqr2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqr2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dgeqr2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqr2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sgeqr2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqr2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zgeqr2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgeqrf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgeqrf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgeqrf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgeqrf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrfp_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgeqrfp_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrfp_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgeqrfp_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrfp_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgeqrfp_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrfp_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgeqrfp_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cgeqrt_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    ldt: *const i32,
    work: *mut f64,
    info: *mut i32
)
{
    dgeqrt_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    ldt: *const i32,
    work: *mut f32,
    info: *mut i32
)
{
    sgeqrt_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zgeqrt_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    info: *mut i32
)
{
    cgeqrt2_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    ldt: *const i32,
    info: *mut i32
)
{
    dgeqrt2_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    ldt: *const i32,
    info: *mut i32
)
{
    sgeqrt2_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    info: *mut i32
)
{
    zgeqrt2_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgeqrt3_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    info: *mut i32
)
{
    cgeqrt3_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgeqrt3_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    ldt: *const i32,
    info: *mut i32
)
{
    dgeqrt3_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgeqrt3_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    ldt: *const i32,
    info: *mut i32
)
{
    sgeqrt3_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgeqrt3_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    info: *mut i32
)
{
    zgeqrt3_(
        m,
        n,
        A,
        lda,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgerfs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgerfs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgerfs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgerfs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    R: *const f32,
    C: *const f32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    ipiv: *const i32,
    R: *const f64,
    C: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    ipiv: *const i32,
    R: *const f32,
    C: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerfsx_(
    trans: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    R: *const f64,
    C: *const f64,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgerfsx_(
        trans,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerq2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cgerq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerq2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dgerq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerq2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sgerq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerq2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zgerq2_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgerqf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgerqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgerqf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgerqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgerqf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgerqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgerqf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgerqf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesdd_(
    jobz: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    VT: *mut _lapack_complex_float,
    ldvt: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    cgesdd_(
        jobz,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesdd_(
    jobz: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    S: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    VT: *mut f64,
    ldvt: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgesdd_(
        jobz,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesdd_(
    jobz: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    S: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    VT: *mut f32,
    ldvt: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgesdd_(
        jobz,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesdd_(
    jobz: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    VT: *mut _lapack_complex_double,
    ldvt: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    zgesdd_(
        jobz,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    x: *mut _lapack_complex_float,
    ldx: *const i32,
    y: *mut _lapack_complex_float,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f32,
    k: *mut i32,
    eigs: *mut _lapack_complex_float,
    z: *mut _lapack_complex_float,
    ldz: *const i32,
    res: *mut f32,
    b: *mut _lapack_complex_float,
    ldb: *const i32,
    w: *mut _lapack_complex_float,
    ldw: *const i32,
    s: *mut _lapack_complex_float,
    lds: *const i32,
    zwork: *mut _lapack_complex_float,
    lzwork: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    cgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        zwork,
        lzwork,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    x: *mut f64,
    ldx: *const i32,
    y: *mut f64,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f64,
    k: *mut i32,
    reig: *mut f64,
    imeig: *mut f64,
    z: *mut f64,
    ldz: *const i32,
    res: *mut f64,
    b: *mut f64,
    ldb: *const i32,
    w: *mut f64,
    ldw: *const i32,
    s: *mut f64,
    lds: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    x: *mut f32,
    ldx: *const i32,
    y: *mut f32,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f32,
    k: *mut i32,
    reig: *mut f32,
    imeig: *mut f32,
    z: *mut f32,
    ldz: *const i32,
    res: *mut f32,
    b: *mut f32,
    ldb: *const i32,
    w: *mut f32,
    ldw: *const i32,
    s: *mut f32,
    lds: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    sgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgedmd_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    x: *mut _lapack_complex_double,
    ldx: *const i32,
    y: *mut _lapack_complex_double,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f64,
    k: *mut i32,
    eigs: *mut _lapack_complex_double,
    z: *mut _lapack_complex_double,
    ldz: *const i32,
    res: *mut f64,
    b: *mut _lapack_complex_double,
    ldb: *const i32,
    w: *mut _lapack_complex_double,
    ldw: *const i32,
    s: *mut _lapack_complex_double,
    lds: *const i32,
    zwork: *mut _lapack_complex_double,
    lzwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    zgedmd_(
        jobs,
        jobz,
        jobr,
        jobf,
        whtsvd,
        m,
        n,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        w,
        ldw,
        s,
        lds,
        zwork,
        lzwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    f: *mut _lapack_complex_float,
    ldf: *const i32,
    x: *mut _lapack_complex_float,
    ldx: *const i32,
    y: *mut _lapack_complex_float,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f32,
    k: *const i32,
    eigs: *mut _lapack_complex_float,
    z: *mut _lapack_complex_float,
    ldz: *const i32,
    res: *mut f32,
    b: *mut _lapack_complex_float,
    ldb: *const i32,
    v: *mut _lapack_complex_float,
    ldv: *const i32,
    s: *mut _lapack_complex_float,
    lds: *const i32,
    zwork: *mut _lapack_complex_float,
    lzwork: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    cgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        zwork,
        lzwork,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    f: *mut f64,
    ldf: *const i32,
    x: *mut f64,
    ldx: *const i32,
    y: *mut f64,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f64,
    k: *mut i32,
    reig: *mut f64,
    imeig: *mut f64,
    z: *mut f64,
    ldz: *const i32,
    res: *mut f64,
    b: *mut f64,
    ldb: *const i32,
    v: *mut f64,
    ldv: *const i32,
    s: *mut f64,
    lds: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    dgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    f: *mut f32,
    ldf: *const i32,
    x: *mut f32,
    ldx: *const i32,
    y: *mut f32,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f32,
    k: *const i32,
    reig: *mut f32,
    imeig: *mut f32,
    z: *mut f32,
    ldz: *const i32,
    res: *mut f32,
    b: *mut f32,
    ldb: *const i32,
    v: *mut f32,
    ldv: *const i32,
    s: *mut f32,
    lds: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    sgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        reig,
        imeig,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgedmdq_(
    jobs: *const c_char,
    jobz: *const c_char,
    jobr: *const c_char,
    jobq: *const c_char,
    jobt: *const c_char,
    jobf: *const c_char,
    whtsvd: *const i32,
    m: *const i32,
    n: *const i32,
    f: *mut _lapack_complex_double,
    ldf: *const i32,
    x: *mut _lapack_complex_double,
    ldx: *const i32,
    y: *mut _lapack_complex_double,
    ldy: *const i32,
    nrnk: *const i32,
    tol: *const f64,
    k: *const i32,
    eigs: *mut _lapack_complex_double,
    z: *mut _lapack_complex_double,
    ldz: *const i32,
    res: *mut f64,
    b: *mut _lapack_complex_double,
    ldb: *const i32,
    v: *mut _lapack_complex_double,
    ldv: *const i32,
    s: *mut _lapack_complex_double,
    lds: *const i32,
    zwork: *mut _lapack_complex_double,
    lzwork: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    zgedmdq_(
        jobs,
        jobz,
        jobr,
        jobq,
        jobt,
        jobf,
        whtsvd,
        m,
        n,
        f,
        ldf,
        x,
        ldx,
        y,
        ldy,
        nrnk,
        tol,
        k,
        eigs,
        z,
        ldz,
        res,
        b,
        ldb,
        v,
        ldv,
        s,
        lds,
        zwork,
        lzwork,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32
) -> i32
{
    cgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32
) -> i32
{
    dgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32
) -> i32
{
    sgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32
) -> i32
{
    zgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    work: *mut f64,
    swork: *mut f32,
    iter: *mut i32,
    info: *mut i32
)
{
    dsgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        work,
        swork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zcgesv_(
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    work: *mut _lapack_complex_double,
    swork: *mut _lapack_complex_float,
    rwork: *mut f64,
    iter: *mut i32,
    info: *mut i32
)
{
    zcgesv_(
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        work,
        swork,
        rwork,
        iter,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    VT: *mut _lapack_complex_float,
    ldvt: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgesvd_(
        jobu,
        jobvt,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    S: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    VT: *mut f64,
    ldvt: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgesvd_(
        jobu,
        jobvt,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    S: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    VT: *mut f32,
    ldvt: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgesvd_(
        jobu,
        jobvt,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvd_(
    jobu: *const c_char,
    jobvt: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    VT: *mut _lapack_complex_double,
    ldvt: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgesvd_(
        jobu,
        jobvt,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    numrank: *mut i32,
    iwork: *mut i32,
    liwork: *const i32,
    cwork: *mut _lapack_complex_float,
    lcwork: *mut i32,
    rwork: *mut f32,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    cgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        V,
        ldv,
        numrank,
        iwork,
        liwork,
        cwork,
        lcwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    S: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    V: *mut f64,
    ldv: *const i32,
    numrank: *mut i32,
    iwork: *mut i32,
    liwork: *const i32,
    work: *mut f64,
    lwork: *mut i32,
    rwork: *mut f64,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    dgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        V,
        ldv,
        numrank,
        iwork,
        liwork,
        work,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    S: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    V: *mut f32,
    ldv: *const i32,
    numrank: *mut i32,
    iwork: *mut i32,
    liwork: *const i32,
    work: *mut f32,
    lwork: *mut i32,
    rwork: *mut f32,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    sgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        V,
        ldv,
        numrank,
        iwork,
        liwork,
        work,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvdq_(
    joba: *const c_char,
    jobp: *const c_char,
    jobr: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    numrank: *mut i32,
    iwork: *mut i32,
    liwork: *const i32,
    cwork: *mut _lapack_complex_double,
    lcwork: *mut i32,
    rwork: *mut f64,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    zgesvdq_(
        joba,
        jobp,
        jobr,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        S,
        U,
        ldu,
        V,
        ldv,
        numrank,
        iwork,
        liwork,
        cwork,
        lcwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    VT: *mut _lapack_complex_float,
    ldvt: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    VT: *mut f64,
    ldvt: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    VT: *mut f32,
    ldvt: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvdx_(
    jobu: *const c_char,
    jobvt: *const c_char,
    range: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    ns: *mut i32,
    S: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    VT: *mut _lapack_complex_double,
    ldvt: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgesvdx_(
        jobu,
        jobvt,
        range,
        m,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        ns,
        S,
        U,
        ldu,
        VT,
        ldvt,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    SVA: *mut f32,
    mv: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    cwork: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        SVA,
        mv,
        V,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    SVA: *mut f64,
    mv: *const i32,
    V: *mut f64,
    ldv: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        SVA,
        mv,
        V,
        ldv,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    SVA: *mut f32,
    mv: *const i32,
    V: *mut f32,
    ldv: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        SVA,
        mv,
        V,
        ldv,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvj_(
    joba: *const c_char,
    jobu: *const c_char,
    jobv: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    SVA: *mut f64,
    mv: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    cwork: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgesvj_(
        joba,
        jobu,
        jobv,
        m,
        n,
        A,
        lda,
        SVA,
        mv,
        V,
        ldv,
        cwork,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgesvx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgesvx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgesvx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgesvx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f32,
    C: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgesvxx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    R: *mut f64,
    C: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgesvxx_(
        fact,
        trans,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        R,
        C,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetf2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    cgetf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetf2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    dgetf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetf2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    sgetf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetf2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    zgetf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    cgetrf_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    dgetrf_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    sgetrf_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
) -> i32
{
    zgetrf_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrf2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    cgetrf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrf2_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    dgetrf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrf2_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    sgetrf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrf2_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    zgetrf2_(
        m,
        n,
        A,
        lda,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetri_(
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgetri_(
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetri_(
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgetri_(
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetri_(
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgetri_(
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetri_(
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgetri_(
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    cgetrs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    dgetrs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    sgetrs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    zgetrs_(
        trans,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetsls_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cgetsls_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetsls_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dgetsls_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetsls_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sgetsls_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetsls_(
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zgetsls_(
        trans,
        m,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgetsqrhrt_(
    m: *const i32,
    n: *const i32,
    mb1: *const i32,
    nb1: *const i32,
    nb2: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgetsqrhrt_(
    m: *const i32,
    n: *const i32,
    mb1: *const i32,
    nb1: *const i32,
    nb2: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    ldt: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgetsqrhrt_(
    m: *const i32,
    n: *const i32,
    mb1: *const i32,
    nb1: *const i32,
    nb2: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    ldt: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgetsqrhrt_(
    m: *const i32,
    n: *const i32,
    mb1: *const i32,
    nb1: *const i32,
    nb2: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgetsqrhrt_(
        m,
        n,
        mb1,
        nb1,
        nb2,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    lscale: *const f32,
    rscale: *const f32,
    m: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    lscale: *const f64,
    rscale: *const f64,
    m: *const i32,
    V: *mut f64,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    lscale: *const f32,
    rscale: *const f32,
    m: *const i32,
    V: *mut f32,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggbak_(
    job: *const c_char,
    side: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    lscale: *const f64,
    rscale: *const f64,
    m: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zggbak_(
        job,
        side,
        n,
        ilo,
        ihi,
        lscale,
        rscale,
        m,
        V,
        ldv,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggbal_(
    job: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f32,
    rscale: *mut f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cggbal_(
        job,
        n,
        A,
        lda,
        B,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggbal_(
    job: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f64,
    rscale: *mut f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dggbal_(
        job,
        n,
        A,
        lda,
        B,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggbal_(
    job: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f32,
    rscale: *mut f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sggbal_(
        job,
        n,
        A,
        lda,
        B,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggbal_(
    job: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f64,
    rscale: *mut f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zggbal_(
        job,
        n,
        A,
        lda,
        B,
        ldb,
        ilo,
        ihi,
        lscale,
        rscale,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_C_SELECT2,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VSL: *mut _lapack_complex_float,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_float,
    ldvsr: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_D_SELECT3,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VSL: *mut f64,
    ldvsl: *const i32,
    VSR: *mut f64,
    ldvsr: *const i32,
    work: *mut f64,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_S_SELECT3,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VSL: *mut f32,
    ldvsl: *const i32,
    VSR: *mut f32,
    ldvsr: *const i32,
    work: *mut f32,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgges_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_Z_SELECT2,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VSL: *mut _lapack_complex_double,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_double,
    ldvsr: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgges_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_C_SELECT2,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VSL: *mut _lapack_complex_float,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_float,
    ldvsr: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_D_SELECT3,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VSL: *mut f64,
    ldvsl: *const i32,
    VSR: *mut f64,
    ldvsr: *const i32,
    work: *mut f64,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_S_SELECT3,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VSL: *mut f32,
    ldvsl: *const i32,
    VSR: *mut f32,
    ldvsr: *const i32,
    work: *mut f32,
    lwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgges3_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_Z_SELECT2,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VSL: *mut _lapack_complex_double,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_double,
    ldvsr: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zgges3_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        work,
        lwork,
        rwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_C_SELECT2,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VSL: *mut _lapack_complex_float,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_float,
    ldvsr: *const i32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    cggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_D_SELECT3,
    sense: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VSL: *mut f64,
    ldvsl: *const i32,
    VSR: *mut f64,
    ldvsr: *const i32,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_S_SELECT3,
    sense: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    sdim: *mut i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VSL: *mut f32,
    ldvsl: *const i32,
    VSR: *mut f32,
    ldvsr: *const i32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    sggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alphar,
        alphai,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggesx_(
    jobvsl: *const c_char,
    jobvsr: *const c_char,
    sort: *const c_char,
    selctg: LAPACK_Z_SELECT2,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    sdim: *mut i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VSL: *mut _lapack_complex_double,
    ldvsl: *const i32,
    VSR: *mut _lapack_complex_double,
    ldvsr: *const i32,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    liwork: *const i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    zggesx_(
        jobvsl,
        jobvsr,
        sort,
        selctg,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        sdim,
        alpha,
        beta,
        VSL,
        ldvsl,
        VSR,
        ldvsr,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        liwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cggev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dggev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sggev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggev_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zggev_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cggev3_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dggev3_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sggev3_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggev3_(
    jobvl: *const c_char,
    jobvr: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zggev3_(
        jobvl,
        jobvr,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f32,
    rscale: *mut f32,
    abnrm: *mut f32,
    bbnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    cggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f64,
    rscale: *mut f64,
    abnrm: *mut f64,
    bbnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f32,
    rscale: *mut f32,
    abnrm: *mut f32,
    bbnrm: *mut f32,
    rconde: *mut f32,
    rcondv: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    sggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        iwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggevx_(
    balanc: *const c_char,
    jobvl: *const c_char,
    jobvr: *const c_char,
    sense: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    ilo: *mut i32,
    ihi: *mut i32,
    lscale: *mut f64,
    rscale: *mut f64,
    abnrm: *mut f64,
    bbnrm: *mut f64,
    rconde: *mut f64,
    rcondv: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    BWORK: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    zggevx_(
        balanc,
        jobvl,
        jobvr,
        sense,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        VL,
        ldvl,
        VR,
        ldvr,
        ilo,
        ihi,
        lscale,
        rscale,
        abnrm,
        bbnrm,
        rconde,
        rcondv,
        work,
        lwork,
        rwork,
        iwork,
        BWORK,
        info,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggglm_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    D: *mut _lapack_complex_float,
    X: *mut _lapack_complex_float,
    Y: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cggglm_(
        n,
        m,
        p,
        A,
        lda,
        B,
        ldb,
        D,
        X,
        Y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggglm_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    D: *mut f64,
    X: *mut f64,
    Y: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dggglm_(
        n,
        m,
        p,
        A,
        lda,
        B,
        ldb,
        D,
        X,
        Y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggglm_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    D: *mut f32,
    X: *mut f32,
    Y: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sggglm_(
        n,
        m,
        p,
        A,
        lda,
        B,
        ldb,
        D,
        X,
        Y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggglm_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    D: *mut _lapack_complex_double,
    X: *mut _lapack_complex_double,
    Y: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zggglm_(
        n,
        m,
        p,
        A,
        lda,
        B,
        ldb,
        D,
        X,
        Y,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgghd3_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgghd3_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgghrd_(
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgghrd_(
        compq,
        compz,
        n,
        ilo,
        ihi,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgglse_(
    m: *const i32,
    n: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    D: *mut _lapack_complex_float,
    X: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cgglse_(
        m,
        n,
        p,
        A,
        lda,
        B,
        ldb,
        C,
        D,
        X,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgglse_(
    m: *const i32,
    n: *const i32,
    p: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    C: *mut f64,
    D: *mut f64,
    X: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dgglse_(
        m,
        n,
        p,
        A,
        lda,
        B,
        ldb,
        C,
        D,
        X,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgglse_(
    m: *const i32,
    n: *const i32,
    p: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    C: *mut f32,
    D: *mut f32,
    X: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sgglse_(
        m,
        n,
        p,
        A,
        lda,
        B,
        ldb,
        C,
        D,
        X,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgglse_(
    m: *const i32,
    n: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    D: *mut _lapack_complex_double,
    X: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zgglse_(
        m,
        n,
        p,
        A,
        lda,
        B,
        ldb,
        C,
        D,
        X,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggqrf_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    taua: *mut _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    taub: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cggqrf_(
        n,
        m,
        p,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggqrf_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut f64,
    lda: *const i32,
    taua: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    taub: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dggqrf_(
        n,
        m,
        p,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggqrf_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut f32,
    lda: *const i32,
    taua: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    taub: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sggqrf_(
        n,
        m,
        p,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggqrf_(
    n: *const i32,
    m: *const i32,
    p: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    taua: *mut _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    taub: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zggqrf_(
        n,
        m,
        p,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggrqf_(
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    taua: *mut _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    taub: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cggrqf_(
        m,
        p,
        n,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggrqf_(
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    taua: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    taub: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dggrqf_(
        m,
        p,
        n,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggrqf_(
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    taua: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    taub: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sggrqf_(
        m,
        p,
        n,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggrqf_(
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    taua: *mut _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    taub: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zggrqf_(
        m,
        p,
        n,
        A,
        lda,
        taua,
        B,
        ldb,
        taub,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    a: *mut _lapack_complex_float,
    lda: *const i32,
    b: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut _lapack_complex_float,
    ldu: *const i32,
    v: *mut _lapack_complex_float,
    ldv: *const i32,
    q: *mut _lapack_complex_float,
    ldq: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    a: *mut f32,
    lda: *const i32,
    b: *mut f32,
    ldb: *const i32,
    alpha: *mut f32,
    beta: *mut f32,
    u: *mut f32,
    ldu: *const i32,
    v: *mut f32,
    ldv: *const i32,
    q: *mut f32,
    ldq: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    a: *mut f64,
    lda: *const i32,
    b: *mut f64,
    ldb: *const i32,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut f64,
    ldu: *const i32,
    v: *mut f64,
    ldv: *const i32,
    q: *mut f64,
    ldq: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvd_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    a: *mut _lapack_complex_double,
    lda: *const i32,
    b: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut f64,
    beta: *mut f64,
    u: *mut _lapack_complex_double,
    ldu: *const i32,
    v: *mut _lapack_complex_double,
    ldv: *const i32,
    q: *mut _lapack_complex_double,
    ldq: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zggsvd_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        a,
        lda,
        b,
        ldb,
        alpha,
        beta,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        work,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut f32,
    beta: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    alpha: *mut f64,
    beta: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    V: *mut f64,
    ldv: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    alpha: *mut f32,
    beta: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    V: *mut f32,
    ldv: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvd3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    n: *const i32,
    p: *const i32,
    k: *mut i32,
    l: *mut i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut f64,
    beta: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zggsvd3_(
        jobu,
        jobv,
        jobq,
        m,
        n,
        p,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        lwork,
        rwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    a: *mut f32,
    lda: *const i32,
    b: *mut f32,
    ldb: *const i32,
    tola: *mut f32,
    tolb: *mut f32,
    k: *mut i32,
    l: *mut i32,
    u: *mut f32,
    ldu: *const i32,
    v: *mut f32,
    ldv: *const i32,
    q: *mut f32,
    ldq: *const i32,
    iwork: *mut i32,
    tau: *mut f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    a: *mut f64,
    lda: *const i32,
    b: *mut f64,
    ldb: *const i32,
    tola: *mut f64,
    tolb: *mut f64,
    k: *mut i32,
    l: *mut i32,
    u: *mut f64,
    ldu: *const i32,
    v: *mut f64,
    ldv: *const i32,
    q: *mut f64,
    ldq: *const i32,
    iwork: *mut i32,
    tau: *mut f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        tau,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    a: *mut _lapack_complex_float,
    lda: *const i32,
    b: *mut _lapack_complex_float,
    ldb: *const i32,
    tola: *mut f32,
    tolb: *mut f32,
    k: *mut i32,
    l: *mut i32,
    u: *mut _lapack_complex_float,
    ldu: *const i32,
    v: *mut _lapack_complex_float,
    ldv: *const i32,
    q: *mut _lapack_complex_float,
    ldq: *const i32,
    iwork: *mut i32,
    rwork: *mut f32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvp_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    a: *mut _lapack_complex_double,
    lda: *const i32,
    b: *mut _lapack_complex_double,
    ldb: *const i32,
    tola: *mut f64,
    tolb: *mut f64,
    k: *mut i32,
    l: *mut i32,
    u: *mut _lapack_complex_double,
    ldu: *const i32,
    v: *mut _lapack_complex_double,
    ldv: *const i32,
    q: *mut _lapack_complex_double,
    ldq: *const i32,
    iwork: *mut i32,
    rwork: *mut f64,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zggsvp_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        a,
        lda,
        b,
        ldb,
        tola,
        tolb,
        k,
        l,
        u,
        ldu,
        v,
        ldv,
        q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    tola: *const f32,
    tolb: *const f32,
    k: *mut i32,
    l: *mut i32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    iwork: *mut i32,
    rwork: *mut f32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        k,
        l,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    tola: *const f64,
    tolb: *const f64,
    k: *mut i32,
    l: *mut i32,
    U: *mut f64,
    ldu: *const i32,
    V: *mut f64,
    ldv: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    iwork: *mut i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        k,
        l,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        iwork,
        tau,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    tola: *const f32,
    tolb: *const f32,
    k: *mut i32,
    l: *mut i32,
    U: *mut f32,
    ldu: *const i32,
    V: *mut f32,
    ldv: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    iwork: *mut i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        k,
        l,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        iwork,
        tau,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zggsvp3_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    tola: *const f64,
    tolb: *const f64,
    k: *mut i32,
    l: *mut i32,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    iwork: *mut i32,
    rwork: *mut f64,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zggsvp3_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        k,
        l,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        iwork,
        rwork,
        tau,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtcon_(
    norm: *const c_char,
    n: *const i32,
    DL: *const _lapack_complex_float,
    D: *const _lapack_complex_float,
    DU: *const _lapack_complex_float,
    DU2: *const _lapack_complex_float,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cgtcon_(
        norm,
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtcon_(
    norm: *const c_char,
    n: *const i32,
    DL: *const f64,
    D: *const f64,
    DU: *const f64,
    DU2: *const f64,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgtcon_(
        norm,
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtcon_(
    norm: *const c_char,
    n: *const i32,
    DL: *const f32,
    D: *const f32,
    DU: *const f32,
    DU2: *const f32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgtcon_(
        norm,
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtcon_(
    norm: *const c_char,
    n: *const i32,
    DL: *const _lapack_complex_double,
    D: *const _lapack_complex_double,
    DU: *const _lapack_complex_double,
    DU2: *const _lapack_complex_double,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zgtcon_(
        norm,
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtrfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_float,
    D: *const _lapack_complex_float,
    DU: *const _lapack_complex_float,
    DLF: *const _lapack_complex_float,
    DF: *const _lapack_complex_float,
    DUF: *const _lapack_complex_float,
    DU2: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cgtrfs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtrfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f64,
    D: *const f64,
    DU: *const f64,
    DLF: *const f64,
    DF: *const f64,
    DUF: *const f64,
    DU2: *const f64,
    ipiv: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dgtrfs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtrfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f32,
    D: *const f32,
    DU: *const f32,
    DLF: *const f32,
    DF: *const f32,
    DUF: *const f32,
    DU2: *const f32,
    ipiv: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sgtrfs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtrfs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_double,
    D: *const _lapack_complex_double,
    DU: *const _lapack_complex_double,
    DLF: *const _lapack_complex_double,
    DF: *const _lapack_complex_double,
    DUF: *const _lapack_complex_double,
    DU2: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zgtrfs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtsv_(
    n: *const i32,
    nrhs: *const i32,
    DL: *mut _lapack_complex_float,
    D: *mut _lapack_complex_float,
    DU: *mut _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32
)
{
    cgtsv_(
        n,
        nrhs,
        DL,
        D,
        DU,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtsv_(
    n: *const i32,
    nrhs: *const i32,
    DL: *mut f64,
    D: *mut f64,
    DU: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32
)
{
    dgtsv_(
        n,
        nrhs,
        DL,
        D,
        DU,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtsv_(
    n: *const i32,
    nrhs: *const i32,
    DL: *mut f32,
    D: *mut f32,
    DU: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32
)
{
    sgtsv_(
        n,
        nrhs,
        DL,
        D,
        DU,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtsv_(
    n: *const i32,
    nrhs: *const i32,
    DL: *mut _lapack_complex_double,
    D: *mut _lapack_complex_double,
    DU: *mut _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32
)
{
    zgtsv_(
        n,
        nrhs,
        DL,
        D,
        DU,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_float,
    D: *const _lapack_complex_float,
    DU: *const _lapack_complex_float,
    DLF: *mut _lapack_complex_float,
    DF: *mut _lapack_complex_float,
    DUF: *mut _lapack_complex_float,
    DU2: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f64,
    D: *const f64,
    DU: *const f64,
    DLF: *mut f64,
    DF: *mut f64,
    DUF: *mut f64,
    DU2: *mut f64,
    ipiv: *mut i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f32,
    D: *const f32,
    DU: *const f32,
    DLF: *mut f32,
    DF: *mut f32,
    DUF: *mut f32,
    DU2: *mut f32,
    ipiv: *mut i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgtsvx_(
    fact: *const c_char,
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_double,
    D: *const _lapack_complex_double,
    DU: *const _lapack_complex_double,
    DLF: *mut _lapack_complex_double,
    DF: *mut _lapack_complex_double,
    DUF: *mut _lapack_complex_double,
    DU2: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zgtsvx_(
        fact,
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DLF,
        DF,
        DUF,
        DU2,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgttrf_(
    n: *const i32,
    DL: *mut _lapack_complex_float,
    D: *mut _lapack_complex_float,
    DU: *mut _lapack_complex_float,
    DU2: *mut _lapack_complex_float,
    ipiv: *mut i32,
    info: *mut i32
)
{
    cgttrf_(
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgttrf_(
    n: *const i32,
    DL: *mut f64,
    D: *mut f64,
    DU: *mut f64,
    DU2: *mut f64,
    ipiv: *mut i32,
    info: *mut i32
)
{
    dgttrf_(
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgttrf_(
    n: *const i32,
    DL: *mut f32,
    D: *mut f32,
    DU: *mut f32,
    DU2: *mut f32,
    ipiv: *mut i32,
    info: *mut i32
)
{
    sgttrf_(
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgttrf_(
    n: *const i32,
    DL: *mut _lapack_complex_double,
    D: *mut _lapack_complex_double,
    DU: *mut _lapack_complex_double,
    DU2: *mut _lapack_complex_double,
    ipiv: *mut i32,
    info: *mut i32
)
{
    zgttrf_(
        n,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cgttrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_float,
    D: *const _lapack_complex_float,
    DU: *const _lapack_complex_float,
    DU2: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cgttrs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dgttrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f64,
    D: *const f64,
    DU: *const f64,
    DU2: *const f64,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dgttrs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sgttrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const f32,
    D: *const f32,
    DU: *const f32,
    DU2: *const f32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sgttrs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zgttrs_(
    trans: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    DL: *const _lapack_complex_double,
    D: *const _lapack_complex_double,
    DU: *const _lapack_complex_double,
    DU2: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zgttrs_(
        trans,
        n,
        nrhs,
        DL,
        D,
        DU,
        DU2,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbev_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbev_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbevd_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbevd_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    BB: *const _lapack_complex_float,
    ldbb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        X,
        ldx,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    BB: *const _lapack_complex_double,
    ldbb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        X,
        ldx,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    BB: *mut _lapack_complex_float,
    ldbb: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    BB: *mut _lapack_complex_double,
    ldbb: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    BB: *mut _lapack_complex_float,
    ldbb: *const i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    BB: *mut _lapack_complex_double,
    ldbb: *const i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    BB: *mut _lapack_complex_float,
    ldbb: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    BB: *mut _lapack_complex_double,
    ldbb: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    D: *mut f32,
    E: *mut f32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chbtrd_(
        vect,
        uplo,
        n,
        kd,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    D: *mut f64,
    E: *mut f64,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhbtrd_(
        vect,
        uplo,
        n,
        kd,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_checon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    checon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhecon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhecon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_checon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    checon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhecon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhecon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cheequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zheequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cheev_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zheev_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cheev_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zheev_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cheevd_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zheevd_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cheevd_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zheevd_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cheevr_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zheevr_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cheevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zheevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cheevx_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zheevx_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cheevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zheevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chegst_(
        itype,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhegst_(
        itype,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chegv_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhegv_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegv_2stage_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chegv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegv_2stage_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhegv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    W: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chegvd_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    W: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhegvd_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chegvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chegvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhegvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhegvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cherfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cherfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zherfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zherfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cherfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cherfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zherfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f64,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zherfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chesv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhesv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chesv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhesv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chesv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhesv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chesv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhesv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chesv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhesv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chesvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhesvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chesvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chesvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhesvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhesvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cheswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    cheswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zheswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    zheswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrd_(
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrd_(
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tau: *mut _lapack_complex_float,
    HOUS2: *mut _lapack_complex_float,
    lhous2: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chetrd_2stage_(
        vect,
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        HOUS2,
        lhous2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tau: *mut _lapack_complex_double,
    HOUS2: *mut _lapack_complex_double,
    lhous2: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhetrd_2stage_(
        vect,
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        HOUS2,
        lhous2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *mut _lapack_complex_float,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *mut _lapack_complex_double,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chetri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhetri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chetrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chetrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chetrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhetrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhetrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const i32,
    k: *const i32,
    alpha: *const f32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    beta: *const f32,
    C: *mut _lapack_complex_float,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        A,
        lda,
        beta,
        C,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const i32,
    k: *const i32,
    alpha: *const f64,
    A: *const _lapack_complex_double,
    lda: *const i32,
    beta: *const f64,
    C: *mut _lapack_complex_double,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        A,
        lda,
        beta,
        C,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut _lapack_complex_float,
    ldh: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        T,
        ldt,
        alpha,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut f64,
    ldh: *const i32,
    T: *mut f64,
    ldt: *const i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    Q: *mut f64,
    ldq: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dhgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        T,
        ldt,
        alphar,
        alphai,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut f32,
    ldh: *const i32,
    T: *mut f32,
    ldt: *const i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    Q: *mut f32,
    ldq: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    shgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        T,
        ldt,
        alphar,
        alphai,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhgeqz_(
    job: *const c_char,
    compq: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut _lapack_complex_double,
    ldh: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhgeqz_(
        job,
        compq,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        T,
        ldt,
        alpha,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chpcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhpcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chpev_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhpev_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chpevd_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhpevd_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chpevx_(
        jobz,
        range,
        uplo,
        n,
        AP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhpevx_(
        jobz,
        range,
        uplo,
        n,
        AP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    BP: *const _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chpgst_(
        itype,
        uplo,
        n,
        AP,
        BP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    BP: *const _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhpgst_(
        itype,
        uplo,
        n,
        AP,
        BP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    BP: *mut _lapack_complex_float,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chpgv_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    BP: *mut _lapack_complex_double,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhpgv_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    BP: *mut _lapack_complex_float,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chpgvd_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    BP: *mut _lapack_complex_double,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhpgvd_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpgvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    BP: *mut _lapack_complex_float,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chpgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        AP,
        BP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpgvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    BP: *mut _lapack_complex_double,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhpgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        AP,
        BP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        rwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    AFP: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    chprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    AFP: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zhprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chpsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhpsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chpsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    AFP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chpsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhpsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    AFP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhpsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrd_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    D: *mut f32,
    E: *mut f32,
    tau: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chptrd_(
        uplo,
        n,
        AP,
        D,
        E,
        tau,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrd_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    D: *mut f64,
    E: *mut f64,
    tau: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhptrd_(
        uplo,
        n,
        AP,
        D,
        E,
        tau,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    chptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    zhptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    chptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zhptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    chptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zhptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *const i32,
    n: *const i32,
    H: *const _lapack_complex_float,
    ldh: *const i32,
    W: *mut _lapack_complex_float,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    IFAILL: *mut i32,
    IFAILR: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    chsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        H,
        ldh,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        IFAILL,
        IFAILR,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *mut i32,
    n: *const i32,
    H: *const f64,
    ldh: *const i32,
    WR: *mut f64,
    WI: *const f64,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    IFAILL: *mut i32,
    IFAILR: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dhsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        H,
        ldh,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        IFAILL,
        IFAILR,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *mut i32,
    n: *const i32,
    H: *const f32,
    ldh: *const i32,
    WR: *mut f32,
    WI: *const f32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    IFAILL: *mut i32,
    IFAILR: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    shsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        H,
        ldh,
        WR,
        WI,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        IFAILL,
        IFAILR,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhsein_(
    side: *const c_char,
    eigsrc: *const c_char,
    initv: *const c_char,
    select: *const i32,
    n: *const i32,
    H: *const _lapack_complex_double,
    ldh: *const i32,
    W: *mut _lapack_complex_double,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    IFAILL: *mut i32,
    IFAILR: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zhsein_(
        side,
        eigsrc,
        initv,
        select,
        n,
        H,
        ldh,
        W,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        IFAILL,
        IFAILR,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_chseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut _lapack_complex_float,
    ldh: *const i32,
    W: *mut _lapack_complex_float,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    chseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        W,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dhseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut f64,
    ldh: *const i32,
    WR: *mut f64,
    WI: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dhseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        WR,
        WI,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_shseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut f32,
    ldh: *const i32,
    WR: *mut f32,
    WI: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    shseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        WR,
        WI,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zhseqr_(
    job: *const c_char,
    compz: *const c_char,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    H: *mut _lapack_complex_double,
    ldh: *const i32,
    W: *mut _lapack_complex_double,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zhseqr_(
        job,
        compz,
        n,
        ilo,
        ihi,
        H,
        ldh,
        W,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacgv_(
    n: *const i32,
    X: *mut _lapack_complex_float,
    incx: *const i32
)
{
    clacgv_(
        n,
        X,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacgv_(
    n: *const i32,
    X: *mut _lapack_complex_double,
    incx: *const i32
)
{
    zlacgv_(
        n,
        X,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacn2_(
    n: *const i32,
    V: *mut _lapack_complex_float,
    X: *mut _lapack_complex_float,
    est: *mut f32,
    kase: *mut i32,
    ISAVE: *mut i32
)
{
    clacn2_(
        n,
        V,
        X,
        est,
        kase,
        ISAVE
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlacn2_(
    n: *const i32,
    V: *mut f64,
    X: *mut f64,
    ISGN: *mut i32,
    est: *mut f64,
    kase: *mut i32,
    ISAVE: *mut i32
)
{
    dlacn2_(
        n,
        V,
        X,
        ISGN,
        est,
        kase,
        ISAVE
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slacn2_(
    n: *const i32,
    V: *mut f32,
    X: *mut f32,
    ISGN: *mut i32,
    est: *mut f32,
    kase: *mut i32,
    ISAVE: *mut i32
)
{
    slacn2_(
        n,
        V,
        X,
        ISGN,
        est,
        kase,
        ISAVE
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacn2_(
    n: *const i32,
    V: *mut _lapack_complex_double,
    X: *mut _lapack_complex_double,
    est: *mut f64,
    kase: *mut i32,
    ISAVE: *mut i32
)
{
    zlacn2_(
        n,
        V,
        X,
        est,
        kase,
        ISAVE
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacp2_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    arg1: usize
)
{
    clacp2_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacp2_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    arg1: usize
)
{
    zlacp2_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacpy_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    arg1: usize
)
{
    clacpy_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlacpy_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    arg1: usize
)
{
    dlacpy_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slacpy_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    arg1: usize
)
{
    slacpy_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacpy_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    arg1: usize
)
{
    zlacpy_(
        uplo,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clacrm_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    rwork: *mut f32
)
{
    clacrm_(
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlacrm_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    rwork: *mut f64
)
{
    zlacrm_(
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlag2c_(
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    SA: *mut _lapack_complex_float,
    ldsa: *const i32,
    info: *mut i32
)
{
    zlag2c_(
        m,
        n,
        A,
        lda,
        SA,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slag2d_(
    m: *const i32,
    n: *const i32,
    SA: *const f32,
    ldsa: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32
)
{
    slag2d_(
        m,
        n,
        SA,
        ldsa,
        A,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlag2s_(
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    SA: *mut f32,
    ldsa: *const i32,
    info: *mut i32
)
{
    dlag2s_(
        m,
        n,
        A,
        lda,
        SA,
        ldsa,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clag2z_(
    m: *const i32,
    n: *const i32,
    SA: *const _lapack_complex_float,
    ldsa: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32
)
{
    clag2z_(
        m,
        n,
        SA,
        ldsa,
        A,
        lda,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clagge_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    D: *const f32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    clagge_(
        m,
        n,
        kl,
        ku,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagge_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    D: *const f64,
    A: *mut f64,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut f64,
    info: *mut i32
)
{
    dlagge_(
        m,
        n,
        kl,
        ku,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagge_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    D: *const f32,
    A: *mut f32,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut f32,
    info: *mut i32
)
{
    slagge_(
        m,
        n,
        kl,
        ku,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlagge_(
    m: *const i32,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    D: *const f64,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zlagge_(
        m,
        n,
        kl,
        ku,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claghe_(
    n: *const i32,
    k: *const i32,
    D: *const f32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    claghe_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaghe_(
    n: *const i32,
    k: *const i32,
    D: *const f64,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zlaghe_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clagsy_(
    n: *const i32,
    k: *const i32,
    D: *const f32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    clagsy_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlagsy_(
    n: *const i32,
    k: *const i32,
    D: *const f64,
    A: *mut f64,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut f64,
    info: *mut i32
)
{
    dlagsy_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slagsy_(
    n: *const i32,
    k: *const i32,
    D: *const f32,
    A: *mut f32,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut f32,
    info: *mut i32
)
{
    slagsy_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlagsy_(
    n: *const i32,
    k: *const i32,
    D: *const f64,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    iseed: *mut i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zlagsy_(
        n,
        k,
        D,
        A,
        lda,
        iseed,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlamch_(
    cmach: *const c_char,
    arg1: usize
) -> f64
{
    dlamch_(
        cmach,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slamch_(
    cmach: *const c_char,
    arg1: usize
) -> lapack_float_return
{
    slamch_(
        cmach,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clangb_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    clangb_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlangb_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f64,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    dlangb_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slangb_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const f32,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    slangb_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlangb_(
    norm: *const c_char,
    n: *const i32,
    kl: *const i32,
    ku: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    zlangb_(
        norm,
        n,
        kl,
        ku,
        AB,
        ldab,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clange_(
    norm: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    clange_(
        norm,
        m,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlange_(
    norm: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    dlange_(
        norm,
        m,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slange_(
    norm: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    slange_(
        norm,
        m,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlange_(
    norm: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    zlange_(
        norm,
        m,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clangt_(
    norm: *const c_char,
    n: *const i32,
    DL: *const _lapack_complex_float,
    D: *const _lapack_complex_float,
    DU: *const _lapack_complex_float,
    arg1: usize
) -> lapack_float_return
{
    clangt_(
        norm,
        n,
        DL,
        D,
        DU,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlangt_(
    norm: *const c_char,
    n: *const i32,
    DL: *const f64,
    D: *const f64,
    DU: *const f64,
    arg1: usize
) -> f64
{
    dlangt_(
        norm,
        n,
        DL,
        D,
        DU,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slangt_(
    norm: *const c_char,
    n: *const i32,
    DL: *const f32,
    D: *const f32,
    DU: *const f32,
    arg1: usize
) -> lapack_float_return
{
    slangt_(
        norm,
        n,
        DL,
        D,
        DU,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlangt_(
    norm: *const c_char,
    n: *const i32,
    DL: *const _lapack_complex_double,
    D: *const _lapack_complex_double,
    DU: *const _lapack_complex_double,
    arg1: usize
) -> f64
{
    zlangt_(
        norm,
        n,
        DL,
        D,
        DU,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clanhb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlanhb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhe_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clanhe_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhe_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlanhe_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clanhp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlanhp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanhs_(
    norm: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    clanhs_(
        norm,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlanhs_(
    norm: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    dlanhs_(
        norm,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slanhs_(
    norm: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    work: *mut f32,
    arg1: usize
) -> lapack_float_return
{
    slanhs_(
        norm,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanhs_(
    norm: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    work: *mut f64,
    arg1: usize
) -> f64
{
    zlanhs_(
        norm,
        n,
        A,
        lda,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clanht_(
    norm: *const c_char,
    n: *const i32,
    D: *const f32,
    E: *const _lapack_complex_float,
    arg1: usize
) -> lapack_float_return
{
    clanht_(
        norm,
        n,
        D,
        E,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlanht_(
    norm: *const c_char,
    n: *const i32,
    D: *const f64,
    E: *const _lapack_complex_double,
    arg1: usize
) -> f64
{
    zlanht_(
        norm,
        n,
        D,
        E,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clansb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const f64,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    dlansb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const f32,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    slansb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansb_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlansb_(
        norm,
        uplo,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clansp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    dlansp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    slansp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansp_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlansp_(
        norm,
        uplo,
        n,
        AP,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlanst_(
    norm: *const c_char,
    n: *const i32,
    D: *const f64,
    E: *const f64,
    arg1: usize
) -> f64
{
    dlanst_(
        norm,
        n,
        D,
        E,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slanst_(
    norm: *const c_char,
    n: *const i32,
    D: *const f32,
    E: *const f32,
    arg1: usize
) -> lapack_float_return
{
    slanst_(
        norm,
        n,
        D,
        E,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    clansy_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    dlansy_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize
) -> lapack_float_return
{
    slansy_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlansy_(
    norm: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize
) -> f64
{
    zlansy_(
        norm,
        uplo,
        n,
        A,
        lda,
        work,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    clantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const f64,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    dlantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const f32,
    ldab: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    slantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantb_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    k: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    zlantb_(
        norm,
        uplo,
        diag,
        n,
        k,
        AB,
        ldab,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    clantp_(
        norm,
        uplo,
        diag,
        n,
        AP,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const f64,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    dlantp_(
        norm,
        uplo,
        diag,
        n,
        AP,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const f32,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    slantp_(
        norm,
        uplo,
        diag,
        n,
        AP,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantp_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    zlantp_(
        norm,
        uplo,
        diag,
        n,
        AP,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    clantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        A,
        lda,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    dlantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        A,
        lda,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    work: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> lapack_float_return
{
    slantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        A,
        lda,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlantr_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    work: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
) -> f64
{
    zlantr_(
        norm,
        uplo,
        diag,
        m,
        n,
        A,
        lda,
        work,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clapmr_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    K: *mut i32
)
{
    clapmr_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapmr_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut f64,
    ldx: *const i32,
    K: *mut i32
)
{
    dlapmr_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapmr_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut f32,
    ldx: *const i32,
    K: *mut i32
)
{
    slapmr_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlapmr_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    K: *mut i32
)
{
    zlapmr_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clapmt_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    K: *mut i32
)
{
    clapmt_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapmt_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut f64,
    ldx: *const i32,
    K: *mut i32
)
{
    dlapmt_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapmt_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut f32,
    ldx: *const i32,
    K: *mut i32
)
{
    slapmt_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlapmt_(
    forwrd: *const i32,
    m: *const i32,
    n: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    K: *mut i32
)
{
    zlapmt_(
        forwrd,
        m,
        n,
        X,
        ldx,
        K
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapy2_(
    x: *const f64,
    y: *const f64
) -> f64
{
    dlapy2_(
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapy2_(
    x: *const f32,
    y: *const f32
) -> lapack_float_return
{
    slapy2_(
        x,
        y
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlapy3_(
    x: *const f64,
    y: *const f64,
    z: *const f64
) -> f64
{
    dlapy3_(
        x,
        y,
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slapy3_(
    x: *const f32,
    y: *const f32,
    z: *const f32
) -> lapack_float_return
{
    slapy3_(
        x,
        y,
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarcm_(
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    rwork: *mut f32
)
{
    clarcm_(
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarcm_(
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    rwork: *mut f64
)
{
    zlarcm_(
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        rwork
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarf_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const _lapack_complex_float,
    incv: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    arg1: usize
)
{
    clarf_(
        side,
        m,
        n,
        V,
        incv,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarf_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const f64,
    incv: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    arg1: usize
)
{
    dlarf_(
        side,
        m,
        n,
        V,
        incv,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarf_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const f32,
    incv: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    arg1: usize
)
{
    slarf_(
        side,
        m,
        n,
        V,
        incv,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarf_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const _lapack_complex_double,
    incv: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    arg1: usize
)
{
    zlarf_(
        side,
        m,
        n,
        V,
        incv,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    clarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    V: *const f64,
    ldv: *const i32,
    T: *const f64,
    ldt: *const i32,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dlarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    V: *const f32,
    ldv: *const i32,
    T: *const f32,
    ldt: *const i32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    slarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    zlarfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        V,
        ldv,
        T,
        ldt,
        C,
        ldc,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfg_(
    n: *const i32,
    alpha: *mut _lapack_complex_float,
    X: *mut _lapack_complex_float,
    incx: *const i32,
    tau: *mut _lapack_complex_float
)
{
    clarfg_(
        n,
        alpha,
        X,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfg_(
    n: *const i32,
    alpha: *mut f64,
    X: *mut f64,
    incx: *const i32,
    tau: *mut f64
)
{
    dlarfg_(
        n,
        alpha,
        X,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfg_(
    n: *const i32,
    alpha: *mut f32,
    X: *mut f32,
    incx: *const i32,
    tau: *mut f32
)
{
    slarfg_(
        n,
        alpha,
        X,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfg_(
    n: *const i32,
    alpha: *mut _lapack_complex_double,
    X: *mut _lapack_complex_double,
    incx: *const i32,
    tau: *mut _lapack_complex_double
)
{
    zlarfg_(
        n,
        alpha,
        X,
        incx,
        tau
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const i32,
    k: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    tau: *const _lapack_complex_float,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    arg1: usize,
    arg2: usize
)
{
    clarft_(
        direct,
        storev,
        n,
        k,
        V,
        ldv,
        tau,
        T,
        ldt,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const i32,
    k: *const i32,
    V: *const f64,
    ldv: *const i32,
    tau: *const f64,
    T: *mut f64,
    ldt: *const i32,
    arg1: usize,
    arg2: usize
)
{
    dlarft_(
        direct,
        storev,
        n,
        k,
        V,
        ldv,
        tau,
        T,
        ldt,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const i32,
    k: *const i32,
    V: *const f32,
    ldv: *const i32,
    tau: *const f32,
    T: *mut f32,
    ldt: *const i32,
    arg1: usize,
    arg2: usize
)
{
    slarft_(
        direct,
        storev,
        n,
        k,
        V,
        ldv,
        tau,
        T,
        ldt,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarft_(
    direct: *const c_char,
    storev: *const c_char,
    n: *const i32,
    k: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    tau: *const _lapack_complex_double,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    arg1: usize,
    arg2: usize
)
{
    zlarft_(
        direct,
        storev,
        n,
        k,
        V,
        ldv,
        tau,
        T,
        ldt,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarfx_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const _lapack_complex_float,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    arg1: usize
)
{
    clarfx_(
        side,
        m,
        n,
        V,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarfx_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const f64,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    arg1: usize
)
{
    dlarfx_(
        side,
        m,
        n,
        V,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarfx_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const f32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    arg1: usize
)
{
    slarfx_(
        side,
        m,
        n,
        V,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarfx_(
    side: *const c_char,
    m: *const i32,
    n: *const i32,
    V: *const _lapack_complex_double,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    arg1: usize
)
{
    zlarfx_(
        side,
        m,
        n,
        V,
        tau,
        C,
        ldc,
        work,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clarnv_(
    idist: *const i32,
    iseed: *mut i32,
    n: *const i32,
    X: *mut _lapack_complex_float
)
{
    clarnv_(
        idist,
        iseed,
        n,
        X
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlarnv_(
    idist: *const i32,
    iseed: *mut i32,
    n: *const i32,
    X: *mut f64
)
{
    dlarnv_(
        idist,
        iseed,
        n,
        X
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slarnv_(
    idist: *const i32,
    iseed: *mut i32,
    n: *const i32,
    X: *mut f32
)
{
    slarnv_(
        idist,
        iseed,
        n,
        X
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlarnv_(
    idist: *const i32,
    iseed: *mut i32,
    n: *const i32,
    X: *mut _lapack_complex_double
)
{
    zlarnv_(
        idist,
        iseed,
        n,
        X
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartgp_(
    f: *const f64,
    g: *const f64,
    cs: *mut f64,
    sn: *mut f64,
    r: *mut f64
)
{
    dlartgp_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartgp_(
    f: *const f32,
    g: *const f32,
    cs: *mut f32,
    sn: *mut f32,
    r: *mut f32
)
{
    slartgp_(
        f,
        g,
        cs,
        sn,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlartgs_(
    x: *const f64,
    y: *const f64,
    sigma: *const f64,
    cs: *mut f64,
    sn: *mut f64
)
{
    dlartgs_(
        x,
        y,
        sigma,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slartgs_(
    x: *const f32,
    y: *const f32,
    sigma: *const f32,
    cs: *mut f32,
    sn: *mut f32
)
{
    slartgs_(
        x,
        y,
        sigma,
        cs,
        sn
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clascl_(
    type_: *const c_char,
    kl: *const i32,
    ku: *const i32,
    cfrom: *const f32,
    cto: *const f32,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    clascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlascl_(
    type_: *const c_char,
    kl: *const i32,
    ku: *const i32,
    cfrom: *const f64,
    cto: *const f64,
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dlascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slascl_(
    type_: *const c_char,
    kl: *const i32,
    ku: *const i32,
    cfrom: *const f32,
    cto: *const f32,
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    slascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlascl_(
    type_: *const c_char,
    kl: *const i32,
    ku: *const i32,
    cfrom: *const f64,
    cto: *const f64,
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zlascl_(
        type_,
        kl,
        ku,
        cfrom,
        cto,
        m,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claset_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const _lapack_complex_float,
    beta: *const _lapack_complex_float,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    arg1: usize
)
{
    claset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaset_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const f64,
    beta: *const f64,
    A: *mut f64,
    lda: *const i32,
    arg1: usize
)
{
    dlaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaset_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const f32,
    beta: *const f32,
    A: *mut f32,
    lda: *const i32,
    arg1: usize
)
{
    slaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaset_(
    uplo: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const _lapack_complex_double,
    beta: *const _lapack_complex_double,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    arg1: usize
)
{
    zlaset_(
        uplo,
        m,
        n,
        alpha,
        beta,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlasrt_(
    id: *const c_char,
    n: *const i32,
    D: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dlasrt_(
        id,
        n,
        D,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slasrt_(
    id: *const c_char,
    n: *const i32,
    D: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    slasrt_(
        id,
        n,
        D,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_classq_(
    n: *const i32,
    X: *const _lapack_complex_float,
    incx: *const i32,
    scale: *mut f32,
    sumsq: *mut f32
)
{
    classq_(
        n,
        X,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlassq_(
    n: *const i32,
    X: *const f64,
    incx: *const i32,
    scale: *mut f64,
    sumsq: *mut f64
)
{
    dlassq_(
        n,
        X,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slassq_(
    n: *const i32,
    X: *const f32,
    incx: *const i32,
    scale: *mut f32,
    sumsq: *mut f32
)
{
    slassq_(
        n,
        X,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlassq_(
    n: *const i32,
    X: *const _lapack_complex_double,
    incx: *const i32,
    scale: *mut f64,
    sumsq: *mut f64
)
{
    zlassq_(
        n,
        X,
        incx,
        scale,
        sumsq
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_claswp_(
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    k1: *const i32,
    k2: *const i32,
    ipiv: *const i32,
    incx: *const i32
) -> i32
{
    claswp_(
        n,
        A,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlaswp_(
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    k1: *const i32,
    k2: *const i32,
    ipiv: *const i32,
    incx: *const i32
) -> i32
{
    dlaswp_(
        n,
        A,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slaswp_(
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    k1: *const i32,
    k2: *const i32,
    ipiv: *const i32,
    incx: *const i32
) -> i32
{
    slaswp_(
        n,
        A,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlaswp_(
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    k1: *const i32,
    k2: *const i32,
    ipiv: *const i32,
    incx: *const i32
) -> i32
{
    zlaswp_(
        n,
        A,
        lda,
        k1,
        k2,
        ipiv,
        incx
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clatms_(
    m: *const i32,
    n: *const i32,
    dist: *const c_char,
    iseed: *mut i32,
    sym: *const c_char,
    D: *mut f32,
    mode: *const i32,
    cond: *const f32,
    dmax: *const f32,
    kl: *const i32,
    ku: *const i32,
    pack: *const c_char,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    clatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        D,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        A,
        lda,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlatms_(
    m: *const i32,
    n: *const i32,
    dist: *const c_char,
    iseed: *mut i32,
    sym: *const c_char,
    D: *mut f64,
    mode: *const i32,
    cond: *const f64,
    dmax: *const f64,
    kl: *const i32,
    ku: *const i32,
    pack: *const c_char,
    A: *mut f64,
    lda: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dlatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        D,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        A,
        lda,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slatms_(
    m: *const i32,
    n: *const i32,
    dist: *const c_char,
    iseed: *mut i32,
    sym: *const c_char,
    D: *mut f32,
    mode: *const i32,
    cond: *const f32,
    dmax: *const f32,
    kl: *const i32,
    ku: *const i32,
    pack: *const c_char,
    A: *mut f32,
    lda: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    slatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        D,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        A,
        lda,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlatms_(
    m: *const i32,
    n: *const i32,
    dist: *const c_char,
    iseed: *mut i32,
    sym: *const c_char,
    D: *mut f64,
    mode: *const i32,
    cond: *const f64,
    dmax: *const f64,
    kl: *const i32,
    ku: *const i32,
    pack: *const c_char,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zlatms_(
        m,
        n,
        dist,
        iseed,
        sym,
        D,
        mode,
        cond,
        dmax,
        kl,
        ku,
        pack,
        A,
        lda,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_clauum_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    clauum_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dlauum_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    dlauum_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_slauum_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    slauum_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zlauum_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    zlauum_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ilaver_(
    vers_major: *mut i32,
    vers_minor: *mut i32,
    vers_patch: *mut i32
) -> i32
{
    ilaver_(
        vers_major,
        vers_minor,
        vers_patch
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dopgtr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    tau: *const f64,
    Q: *mut f64,
    ldq: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dopgtr_(
        uplo,
        n,
        AP,
        tau,
        Q,
        ldq,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sopgtr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    tau: *const f32,
    Q: *mut f32,
    ldq: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sopgtr_(
        uplo,
        n,
        AP,
        tau,
        Q,
        ldq,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dopmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    AP: *const f64,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dopmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        AP,
        tau,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sopmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    AP: *const f32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sopmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        AP,
        tau,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorbdb_(
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f64,
    ldx11: *const i32,
    X12: *mut f64,
    ldx12: *const i32,
    X21: *mut f64,
    ldx21: *const i32,
    X22: *mut f64,
    ldx22: *const i32,
    theta: *mut f64,
    phi: *mut f64,
    TAUP1: *mut f64,
    TAUP2: *mut f64,
    TAUQ1: *mut f64,
    TAUQ2: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dorbdb_(
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        phi,
        TAUP1,
        TAUP2,
        TAUQ1,
        TAUQ2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorbdb_(
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f32,
    ldx11: *const i32,
    X12: *mut f32,
    ldx12: *const i32,
    X21: *mut f32,
    ldx21: *const i32,
    X22: *mut f32,
    ldx22: *const i32,
    theta: *mut f32,
    phi: *mut f32,
    TAUP1: *mut f32,
    TAUP2: *mut f32,
    TAUQ1: *mut f32,
    TAUQ2: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sorbdb_(
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        phi,
        TAUP1,
        TAUP2,
        TAUQ1,
        TAUQ2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f64,
    ldx11: *const i32,
    X12: *mut f64,
    ldx12: *const i32,
    X21: *mut f64,
    ldx21: *const i32,
    X22: *mut f64,
    ldx22: *const i32,
    theta: *mut f64,
    U1: *mut f64,
    ldu1: *const i32,
    U2: *mut f64,
    ldu2: *const i32,
    V1T: *mut f64,
    ldv1t: *const i32,
    V2T: *mut f64,
    ldv2t: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    dorcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorcsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f32,
    ldx11: *const i32,
    X12: *mut f32,
    ldx12: *const i32,
    X21: *mut f32,
    ldx21: *const i32,
    X22: *mut f32,
    ldx22: *const i32,
    theta: *mut f32,
    U1: *mut f32,
    ldu1: *const i32,
    U2: *mut f32,
    ldu2: *const i32,
    V1T: *mut f32,
    ldv1t: *const i32,
    V2T: *mut f32,
    ldv2t: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    sorcsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorcsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f64,
    ldx11: *const i32,
    X21: *mut f64,
    ldx21: *const i32,
    theta: *mut f64,
    U1: *mut f64,
    ldu1: *const i32,
    U2: *mut f64,
    ldu2: *const i32,
    V1T: *mut f64,
    ldv1t: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dorcsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        X11,
        ldx11,
        X21,
        ldx21,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorcsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut f32,
    ldx11: *const i32,
    X21: *mut f32,
    ldx21: *const i32,
    theta: *mut f32,
    U1: *mut f32,
    ldu1: *const i32,
    U2: *mut f32,
    ldu2: *const i32,
    V1T: *mut f32,
    ldv1t: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sorcsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        X11,
        ldx11,
        X21,
        ldx21,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgbr_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dorgbr_(
        vect,
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgbr_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sorgbr_(
        vect,
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorghr_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorghr_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorghr_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorghr_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorglq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorglq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorglq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorglq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgql_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorgql_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgql_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorgql_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgqr_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorgqr_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgqr_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorgqr_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgrq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorgrq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgrq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorgrq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgtr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *const f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dorgtr_(
        uplo,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgtr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *const f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sorgtr_(
        uplo,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorgtsqr_row_(
    m: *const i32,
    n: *const i32,
    mb: *const i32,
    nb: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *const f64,
    ldt: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dorgtsqr_row_(
        m,
        n,
        mb,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorgtsqr_row_(
    m: *const i32,
    n: *const i32,
    mb: *const i32,
    nb: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *const f32,
    ldt: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    sorgtsqr_row_(
        m,
        n,
        mb,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dorhr_col_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut f64,
    lda: *const i32,
    T: *mut f64,
    ldt: *const i32,
    D: *mut f64,
    info: *mut i32
)
{
    dorhr_col_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        D,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sorhr_col_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut f32,
    lda: *const i32,
    T: *mut f32,
    ldt: *const i32,
    D: *mut f32,
    info: *mut i32
)
{
    sorhr_col_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        D,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dormbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sormbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormql_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormql_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormrq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormrq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dormrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sormrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dormtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    tau: *const f64,
    C: *mut f64,
    ldc: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dormtr_(
        side,
        uplo,
        trans,
        m,
        n,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sormtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    tau: *const f32,
    C: *mut f32,
    ldc: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sormtr_(
        side,
        uplo,
        trans,
        m,
        n,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbcon_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpbcon_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbcon_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f64,
    ldab: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbcon_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbcon_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f32,
    ldab: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    spbcon_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbcon_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpbcon_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbequ_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpbequ_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbequ_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f64,
    ldab: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dpbequ_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbequ_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f32,
    ldab: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    spbequ_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbequ_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpbequ_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbrfs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    AFB: *const _lapack_complex_float,
    ldafb: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbrfs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    AFB: *const f64,
    ldafb: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbrfs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    AFB: *const f32,
    ldafb: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    spbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbrfs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    AFB: *const _lapack_complex_double,
    ldafb: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpbrfs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbstf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpbstf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbstf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbstf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbstf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spbstf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbstf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpbstf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbsv_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbsv_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbsv_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spbsv_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbsv_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpbsv_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    AFB: *mut _lapack_complex_float,
    ldafb: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    AFB: *mut f64,
    ldafb: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    AFB: *mut f32,
    ldafb: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    spbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    AFB: *mut _lapack_complex_double,
    ldafb: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zpbsvx_(
        fact,
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        AFB,
        ldafb,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbtrf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_float,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpbtrf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbtrf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbtrf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbtrf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spbtrf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbtrf_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut _lapack_complex_double,
    ldab: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpbtrf_(
        uplo,
        n,
        kd,
        AB,
        ldab,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpbtrs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpbtrs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spbtrs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpbtrs_(
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpbtrs_(
        uplo,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cpftrf_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dpftrf_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    spftrf_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftrf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zpftrf_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cpftri_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dpftri_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    spftri_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftri_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zpftri_(
        transr,
        uplo,
        n,
        A,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        A,
        B,
        ldb,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        A,
        B,
        ldb,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    spftrs_(
        transr,
        uplo,
        n,
        nrhs,
        A,
        B,
        ldb,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpftrs_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zpftrs_(
        transr,
        uplo,
        n,
        nrhs,
        A,
        B,
        ldb,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpocon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpocon_(
        uplo,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpocon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dpocon_(
        uplo,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spocon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    spocon_(
        uplo,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpocon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpocon_(
        uplo,
        n,
        A,
        lda,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpoequ_(
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cpoequ_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpoequ_(
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dpoequ_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spoequ_(
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    spoequ_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpoequ_(
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zpoequ_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpoequb_(
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    cpoequb_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpoequb_(
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    dpoequb_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spoequb_(
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32
)
{
    spoequb_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpoequb_(
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32
)
{
    zpoequb_(
        n,
        A,
        lda,
        S,
        scond,
        amax,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cporfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cporfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dporfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dporfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sporfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sporfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zporfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zporfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    S: *const f32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    S: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    S: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zporfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    S: *const f64,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zporfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    work: *mut f64,
    swork: *mut f32,
    iter: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        work,
        swork,
        iter,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zcposv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    work: *mut _lapack_complex_double,
    swork: *mut _lapack_complex_float,
    rwork: *mut f64,
    iter: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    zcposv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        work,
        swork,
        rwork,
        iter,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cposvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dposvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sposvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zposvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zposvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zposvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpotf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpotf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spotf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpotf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    cpotrf_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    dpotrf_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    spotrf_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
) -> i32
{
    zpotrf_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpotrf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpotrf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spotrf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrf2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpotrf2_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpotri_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpotri_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spotri_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpotri_(
        uplo,
        n,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpotrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpotrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpotrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpotrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spotrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spotrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpotrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpotrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cppcon_(
        uplo,
        n,
        AP,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dppcon_(
        uplo,
        n,
        AP,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sppcon_(
        uplo,
        n,
        AP,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zppcon_(
        uplo,
        n,
        AP,
        anorm,
        rcond,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppequ_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cppequ_(
        uplo,
        n,
        AP,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppequ_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dppequ_(
        uplo,
        n,
        AP,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppequ_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sppequ_(
        uplo,
        n,
        AP,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppequ_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zppequ_(
        uplo,
        n,
        AP,
        S,
        scond,
        amax,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    AFP: *const _lapack_complex_float,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    AFP: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dpprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    AFP: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    spprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    AFP: *const _lapack_complex_double,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cppsv_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dppsv_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sppsv_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zppsv_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_float,
    AFP: *mut _lapack_complex_float,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f64,
    AFP: *mut f64,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f32,
    AFP: *mut f32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zppsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_double,
    AFP: *mut _lapack_complex_double,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zppsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cpptrf_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dpptrf_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    spptrf_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zpptrf_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cpptri_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dpptri_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    spptri_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zpptri_(
        uplo,
        n,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpptrs_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dpptrs_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    spptrs_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpptrs_(
        uplo,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpstrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    piv: *mut i32,
    rank: *mut i32,
    tol: *const f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpstrf_(
        uplo,
        n,
        A,
        lda,
        piv,
        rank,
        tol,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpstrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    piv: *mut i32,
    rank: *mut i32,
    tol: *const f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dpstrf_(
        uplo,
        n,
        A,
        lda,
        piv,
        rank,
        tol,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spstrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    piv: *mut i32,
    rank: *mut i32,
    tol: *const f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    spstrf_(
        uplo,
        n,
        A,
        lda,
        piv,
        rank,
        tol,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpstrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    piv: *mut i32,
    rank: *mut i32,
    tol: *const f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpstrf_(
        uplo,
        n,
        A,
        lda,
        piv,
        rank,
        tol,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptcon_(
    n: *const i32,
    D: *const f32,
    E: *const _lapack_complex_float,
    anorm: *const f32,
    rcond: *mut f32,
    rwork: *mut f32,
    info: *mut i32
)
{
    cptcon_(
        n,
        D,
        E,
        anorm,
        rcond,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptcon_(
    n: *const i32,
    D: *const f64,
    E: *const f64,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dptcon_(
        n,
        D,
        E,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptcon_(
    n: *const i32,
    D: *const f32,
    E: *const f32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sptcon_(
        n,
        D,
        E,
        anorm,
        rcond,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptcon_(
    n: *const i32,
    D: *const f64,
    E: *const _lapack_complex_double,
    anorm: *const f64,
    rcond: *mut f64,
    rwork: *mut f64,
    info: *mut i32
)
{
    zptcon_(
        n,
        D,
        E,
        anorm,
        rcond,
        rwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cpteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dpteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    spteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zpteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const _lapack_complex_float,
    DF: *const f32,
    EF: *const _lapack_complex_float,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cptrfs_(
        uplo,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptrfs_(
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const f64,
    DF: *const f64,
    EF: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    info: *mut i32
)
{
    dptrfs_(
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptrfs_(
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const f32,
    DF: *const f32,
    EF: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    info: *mut i32
)
{
    sptrfs_(
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const _lapack_complex_double,
    DF: *const f64,
    EF: *const _lapack_complex_double,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zptrfs_(
        uplo,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptsv_(
    n: *const i32,
    nrhs: *const i32,
    D: *mut f32,
    E: *mut _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32
)
{
    cptsv_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptsv_(
    n: *const i32,
    nrhs: *const i32,
    D: *mut f64,
    E: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32
)
{
    dptsv_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptsv_(
    n: *const i32,
    nrhs: *const i32,
    D: *mut f32,
    E: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32
)
{
    sptsv_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptsv_(
    n: *const i32,
    nrhs: *const i32,
    D: *mut f64,
    E: *mut _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32
)
{
    zptsv_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cptsvx_(
    fact: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const _lapack_complex_float,
    DF: *mut f32,
    EF: *mut _lapack_complex_float,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    cptsvx_(
        fact,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dptsvx_(
    fact: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const f64,
    DF: *mut f64,
    EF: *mut f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dptsvx_(
        fact,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sptsvx_(
    fact: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const f32,
    DF: *mut f32,
    EF: *mut f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sptsvx_(
        fact,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zptsvx_(
    fact: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const _lapack_complex_double,
    DF: *mut f64,
    EF: *mut _lapack_complex_double,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zptsvx_(
        fact,
        n,
        nrhs,
        D,
        E,
        DF,
        EF,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpttrf_(
    n: *const i32,
    D: *mut f32,
    E: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cpttrf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpttrf_(
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    info: *mut i32
)
{
    dpttrf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spttrf_(
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    info: *mut i32
)
{
    spttrf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpttrf_(
    n: *const i32,
    D: *mut f64,
    E: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zpttrf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cpttrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cpttrs_(
        uplo,
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dpttrs_(
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32
)
{
    dpttrs_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_spttrs_(
    n: *const i32,
    nrhs: *const i32,
    D: *const f32,
    E: *const f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32
)
{
    spttrs_(
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zpttrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    D: *const f64,
    E: *const _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zpttrs_(
        uplo,
        n,
        nrhs,
        D,
        E,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbev_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbev_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbev_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbevd_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbevd_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbevd_2stage_(
        jobz,
        uplo,
        n,
        kd,
        AB,
        ldab,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssbevx_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssbevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        kd,
        AB,
        ldab,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    BB: *const f64,
    ldbb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        X,
        ldx,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgst_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    BB: *const f32,
    ldbb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbgst_(
        vect,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        X,
        ldx,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    BB: *mut f64,
    ldbb: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgv_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    BB: *mut f32,
    ldbb: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbgv_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    BB: *mut f64,
    ldbb: *const i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgvd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    BB: *mut f32,
    ldbb: *const i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbgvd_(
        jobz,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    BB: *mut f64,
    ldbb: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbgvx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ka: *const i32,
    kb: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    BB: *mut f32,
    ldbb: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssbgvx_(
        jobz,
        range,
        uplo,
        n,
        ka,
        kb,
        AB,
        ldab,
        BB,
        ldbb,
        Q,
        ldq,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f64,
    ldab: *const i32,
    D: *mut f64,
    E: *mut f64,
    Q: *mut f64,
    ldq: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsbtrd_(
        vect,
        uplo,
        n,
        kd,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssbtrd_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *mut f32,
    ldab: *const i32,
    D: *mut f32,
    E: *mut f32,
    Q: *mut f32,
    ldq: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssbtrd_(
        vect,
        uplo,
        n,
        kd,
        AB,
        ldab,
        D,
        E,
        Q,
        ldq,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const i32,
    k: *const i32,
    alpha: *const f64,
    A: *const f64,
    lda: *const i32,
    beta: *const f64,
    C: *mut f64,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        A,
        lda,
        beta,
        C,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssfrk_(
    transr: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    n: *const i32,
    k: *const i32,
    alpha: *const f32,
    A: *const f32,
    lda: *const i32,
    beta: *const f32,
    C: *mut f32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssfrk_(
        transr,
        uplo,
        trans,
        n,
        k,
        alpha,
        A,
        lda,
        beta,
        C,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cspcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dspcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    sspcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspcon_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zspcon_(
        uplo,
        n,
        AP,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dspev_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sspev_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dspevd_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sspevd_(
        jobz,
        uplo,
        n,
        AP,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dspevx_(
        jobz,
        range,
        uplo,
        n,
        AP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sspevx_(
        jobz,
        range,
        uplo,
        n,
        AP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    BP: *const f64,
    info: *mut i32,
    arg1: usize
)
{
    dspgst_(
        itype,
        uplo,
        n,
        AP,
        BP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    BP: *const f32,
    info: *mut i32,
    arg1: usize
)
{
    sspgst_(
        itype,
        uplo,
        n,
        AP,
        BP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    BP: *mut f64,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dspgv_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    BP: *mut f32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sspgv_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    BP: *mut f64,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dspgvd_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    BP: *mut f32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sspgvd_(
        itype,
        jobz,
        uplo,
        n,
        AP,
        BP,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspgvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    BP: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dspgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        AP,
        BP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspgvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    BP: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    sspgvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        AP,
        BP,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    AFP: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    csprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    AFP: *const f64,
    ipiv: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    AFP: *const f32,
    ipiv: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ssprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsprfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    AFP: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zsprfs_(
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cspsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f64,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dspsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut f32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sspsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspsv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zspsv_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    AFP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    AFP: *mut f64,
    ipiv: *mut i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    AFP: *mut f32,
    ipiv: *mut i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zspsvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    AFP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zspsvx_(
        fact,
        uplo,
        n,
        nrhs,
        AP,
        AFP,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrd_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    D: *mut f64,
    E: *mut f64,
    tau: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsptrd_(
        uplo,
        n,
        AP,
        D,
        E,
        tau,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrd_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    D: *mut f32,
    E: *mut f32,
    tau: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssptrd_(
        uplo,
        n,
        AP,
        D,
        E,
        tau,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    csptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ssptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptrf_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    zsptrf_(
        uplo,
        n,
        AP,
        ipiv,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f64,
    ipiv: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut f32,
    ipiv: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptri_(
    uplo: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsptri_(
        uplo,
        n,
        AP,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsptrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsptrs_(
        uplo,
        n,
        nrhs,
        AP,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstebz_(
    range: *const c_char,
    order: *const c_char,
    n: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    D: *const f64,
    E: *const f64,
    m: *mut i32,
    nsplit: *mut i32,
    W: *mut f64,
    IBLOCK: *mut i32,
    ISPLIT: *mut i32,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dstebz_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        abstol,
        D,
        E,
        m,
        nsplit,
        W,
        IBLOCK,
        ISPLIT,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstebz_(
    range: *const c_char,
    order: *const c_char,
    n: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    D: *const f32,
    E: *const f32,
    m: *mut i32,
    nsplit: *mut i32,
    W: *mut f32,
    IBLOCK: *mut i32,
    ISPLIT: *mut i32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sstebz_(
        range,
        order,
        n,
        vl,
        vu,
        il,
        iu,
        abstol,
        D,
        E,
        m,
        nsplit,
        W,
        IBLOCK,
        ISPLIT,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstedc_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cstedc_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstedc_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dstedc_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstedc_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sstedc_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstedc_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zstedc_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cstegr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dstegr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sstegr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstegr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zstegr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstein_(
    n: *const i32,
    D: *const f32,
    E: *const f32,
    m: *const i32,
    W: *const f32,
    IBLOCK: *const i32,
    ISPLIT: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32
)
{
    cstein_(
        n,
        D,
        E,
        m,
        W,
        IBLOCK,
        ISPLIT,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstein_(
    n: *const i32,
    D: *const f64,
    E: *const f64,
    m: *const i32,
    W: *const f64,
    IBLOCK: *const i32,
    ISPLIT: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32
)
{
    dstein_(
        n,
        D,
        E,
        m,
        W,
        IBLOCK,
        ISPLIT,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstein_(
    n: *const i32,
    D: *const f32,
    E: *const f32,
    m: *const i32,
    W: *const f32,
    IBLOCK: *const i32,
    ISPLIT: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32
)
{
    sstein_(
        n,
        D,
        E,
        m,
        W,
        IBLOCK,
        ISPLIT,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstein_(
    n: *const i32,
    D: *const f64,
    E: *const f64,
    m: *const i32,
    W: *const f64,
    IBLOCK: *const i32,
    ISPLIT: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32
)
{
    zstein_(
        n,
        D,
        E,
        m,
        W,
        IBLOCK,
        ISPLIT,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    nzc: *const i32,
    ISUPPZ: *mut i32,
    tryrac: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cstemr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        m,
        W,
        Z,
        ldz,
        nzc,
        ISUPPZ,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    nzc: *const i32,
    ISUPPZ: *mut i32,
    tryrac: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dstemr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        m,
        W,
        Z,
        ldz,
        nzc,
        ISUPPZ,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    nzc: *const i32,
    ISUPPZ: *mut i32,
    tryrac: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sstemr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        m,
        W,
        Z,
        ldz,
        nzc,
        ISUPPZ,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zstemr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    m: *mut i32,
    W: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    nzc: *const i32,
    ISUPPZ: *mut i32,
    tryrac: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zstemr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        m,
        W,
        Z,
        ldz,
        nzc,
        ISUPPZ,
        tryrac,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    csteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsteqr_(
    compz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zsteqr_(
        compz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsterf_(
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    info: *mut i32
)
{
    dsterf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssterf_(
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    info: *mut i32
)
{
    ssterf_(
        n,
        D,
        E,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstev_(
    jobz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dstev_(
        jobz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstev_(
    jobz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    sstev_(
        jobz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevd_(
    jobz: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dstevd_(
        jobz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevd_(
    jobz: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    sstevd_(
        jobz,
        n,
        D,
        E,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dstevr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevr_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sstevr_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dstevx_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f64,
    E: *mut f64,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dstevx_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_sstevx_(
    jobz: *const c_char,
    range: *const c_char,
    n: *const i32,
    D: *mut f32,
    E: *mut f32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    sstevx_(
        jobz,
        range,
        n,
        D,
        E,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csycon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csycon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsycon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsycon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssycon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ssycon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsycon_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsycon_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csycon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csycon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsycon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    E: *const f64,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsycon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssycon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    E: *const f32,
    ipiv: *const i32,
    anorm: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ssycon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsycon_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    anorm: *const f64,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsycon_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        anorm,
        rcond,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    E: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    csyconv_(
        uplo,
        way,
        n,
        A,
        lda,
        ipiv,
        E,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *const i32,
    E: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyconv_(
        uplo,
        way,
        n,
        A,
        lda,
        ipiv,
        E,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *const i32,
    E: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyconv_(
        uplo,
        way,
        n,
        A,
        lda,
        ipiv,
        E,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyconv_(
    uplo: *const c_char,
    way: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    E: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zsyconv_(
        uplo,
        way,
        n,
        A,
        lda,
        ipiv,
        E,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csyequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsyequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    S: *mut f32,
    scond: *mut f32,
    amax: *mut f32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssyequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyequb_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    S: *mut f64,
    scond: *mut f64,
    amax: *mut f64,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsyequb_(
        uplo,
        n,
        A,
        lda,
        S,
        scond,
        amax,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyev_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyev_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyev_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyev_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyev_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyev_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyevd_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevd_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyevd_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyevd_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevd_2stage_(
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyevd_2stage_(
        jobz,
        uplo,
        n,
        A,
        lda,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsyevr_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevr_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssyevr_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsyevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevr_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    ISUPPZ: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssyevr_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        ISUPPZ,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsyevx_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevx_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssyevx_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsyevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyevx_2stage_(
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssyevx_2stage_(
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsygst_(
        itype,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygst_(
    itype: *const i32,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssygst_(
        itype,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsygv_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygv_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssygv_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygv_2stage_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsygv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygv_2stage_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssygv_2stage_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    W: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsygvd_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygvd_(
    itype: *const i32,
    jobz: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    W: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssygvd_(
        itype,
        jobz,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        W,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsygvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    vl: *const f64,
    vu: *const f64,
    il: *const i32,
    iu: *const i32,
    abstol: *const f64,
    m: *mut i32,
    W: *mut f64,
    Z: *mut f64,
    ldz: *const i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsygvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssygvx_(
    itype: *const i32,
    jobz: *const c_char,
    range: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    vl: *const f32,
    vu: *const f32,
    il: *const i32,
    iu: *const i32,
    abstol: *const f32,
    m: *mut i32,
    W: *mut f32,
    Z: *mut f32,
    ldz: *const i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    IFAIL: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssygvx_(
        itype,
        jobz,
        range,
        uplo,
        n,
        A,
        lda,
        B,
        ldb,
        vl,
        vu,
        il,
        iu,
        abstol,
        m,
        W,
        Z,
        ldz,
        work,
        lwork,
        iwork,
        IFAIL,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyr_(
    uplo: *const c_char,
    n: *const i32,
    alpha: *const _lapack_complex_float,
    X: *const _lapack_complex_float,
    incx: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    arg1: usize
)
{
    csyr_(
        uplo,
        n,
        alpha,
        X,
        incx,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyr_(
    uplo: *const c_char,
    n: *const i32,
    alpha: *const _lapack_complex_double,
    X: *const _lapack_complex_double,
    incx: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    arg1: usize
)
{
    zsyr_(
        uplo,
        n,
        alpha,
        X,
        incx,
        A,
        lda,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    csyrfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dsyrfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ssyrfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyrfs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    zsyrfs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *const _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    csyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *const f64,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *const f32,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyrfsx_(
    uplo: *const c_char,
    equed: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *const _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *const i32,
    S: *const f64,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zsyrfsx_(
        uplo,
        equed,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csysv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsysv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssysv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsysv_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csysv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsysv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssysv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsysv_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    TB: *mut f64,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    TB: *mut f32,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsysv_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *mut _lapack_complex_float,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csysv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    E: *mut f64,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsysv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    E: *mut f32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssysv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_rk_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *mut _lapack_complex_double,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsysv_rk_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csysv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsysv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssysv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysv_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsysv_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    csysvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsysvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssysvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysvx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zsysvx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        B,
        ldb,
        X,
        ldx,
        rcond,
        ferr,
        berr,
        work,
        lwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    AF: *mut _lapack_complex_float,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    X: *mut _lapack_complex_float,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    csysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f64,
    lda: *const i32,
    AF: *mut f64,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut f64,
    ldb: *const i32,
    X: *mut f64,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dsysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut f32,
    lda: *const i32,
    AF: *mut f32,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f32,
    B: *mut f32,
    ldb: *const i32,
    X: *mut f32,
    ldx: *const i32,
    rcond: *mut f32,
    rpvgrw: *mut f32,
    berr: *mut f32,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f32,
    err_bnds_comp: *mut f32,
    nparams: *const i32,
    params: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ssysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsysvxx_(
    fact: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    AF: *mut _lapack_complex_double,
    ldaf: *const i32,
    ipiv: *mut i32,
    equed: *mut c_char,
    S: *mut f64,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    X: *mut _lapack_complex_double,
    ldx: *const i32,
    rcond: *mut f64,
    rpvgrw: *mut f64,
    berr: *mut f64,
    n_err_bnds: *const i32,
    err_bnds_norm: *mut f64,
    err_bnds_comp: *mut f64,
    nparams: *const i32,
    params: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zsysvxx_(
        fact,
        uplo,
        n,
        nrhs,
        A,
        lda,
        AF,
        ldaf,
        ipiv,
        equed,
        S,
        B,
        ldb,
        X,
        ldx,
        rcond,
        rpvgrw,
        berr,
        n_err_bnds,
        err_bnds_norm,
        err_bnds_comp,
        nparams,
        params,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csyswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    csyswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsyswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    dsyswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssyswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    ssyswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsyswapr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    i1: *const i32,
    i2: *const i32,
    arg1: usize
)
{
    zsyswapr_(
        uplo,
        n,
        A,
        lda,
        i1,
        i2,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrd_(
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrd_(
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    D: *mut f64,
    E: *mut f64,
    tau: *mut f64,
    HOUS2: *mut f64,
    lhous2: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dsytrd_2stage_(
        vect,
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        HOUS2,
        lhous2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrd_2stage_(
    vect: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    D: *mut f32,
    E: *mut f32,
    tau: *mut f32,
    HOUS2: *mut f32,
    lhous2: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ssytrd_2stage_(
        vect,
        uplo,
        n,
        A,
        lda,
        D,
        E,
        tau,
        HOUS2,
        lhous2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrf_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_aa_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrf_aa_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    TB: *mut f64,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    TB: *mut f32,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *mut i32,
    ipiv2: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrf_aa_2stage_(
        uplo,
        n,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *mut _lapack_complex_float,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    E: *mut f64,
    ipiv: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    E: *mut f32,
    ipiv: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_rk_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *mut _lapack_complex_double,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrf_rk_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrf_rook_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrf_rook_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csytri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsytri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssytri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsytri_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri2_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytri2_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f64,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut f32,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri2x_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    nb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytri2x_(
        uplo,
        n,
        A,
        lda,
        ipiv,
        work,
        nb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    E: *const f64,
    ipiv: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    E: *const f32,
    ipiv: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytri_3_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytri_3_(
        uplo,
        n,
        A,
        lda,
        E,
        ipiv,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    csytrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs2_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs2_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    E: *const _lapack_complex_float,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    E: *const f64,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    E: *const f32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_3_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    E: *const _lapack_complex_double,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs_3_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        E,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_aa_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs_aa_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    TB: *mut _lapack_complex_float,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    TB: *mut f64,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    TB: *mut f32,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_aa_2stage_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    TB: *mut _lapack_complex_double,
    ltb: *const i32,
    ipiv: *const i32,
    ipiv2: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs_aa_2stage_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        TB,
        ltb,
        ipiv,
        ipiv2,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_csytrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    csytrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dsytrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dsytrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ssytrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ssytrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zsytrs_rook_(
    uplo: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ipiv: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zsytrs_rook_(
        uplo,
        n,
        nrhs,
        A,
        lda,
        ipiv,
        B,
        ldb,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        AB,
        ldab,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f64,
    ldab: *const i32,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        AB,
        ldab,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const f32,
    ldab: *const i32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        AB,
        ldab,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztbcon_(
        norm,
        uplo,
        diag,
        n,
        kd,
        AB,
        ldab,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *const _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *const f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *const f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *const _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztbrfs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_float,
    ldab: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f64,
    ldab: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const f32,
    ldab: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztbtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    kd: *const i32,
    nrhs: *const i32,
    AB: *const _lapack_complex_double,
    ldab: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztbtrs_(
        uplo,
        trans,
        diag,
        n,
        kd,
        nrhs,
        AB,
        ldab,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const _lapack_complex_float,
    A: *const _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    ctfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        A,
        B,
        ldb,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const f64,
    A: *const f64,
    B: *mut f64,
    ldb: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    dtfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        A,
        B,
        ldb,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const f32,
    A: *const f32,
    B: *mut f32,
    ldb: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    stfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        A,
        B,
        ldb,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfsm_(
    transr: *const c_char,
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    m: *const i32,
    n: *const i32,
    alpha: *const _lapack_complex_double,
    A: *const _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize
)
{
    ztfsm_(
        transr,
        side,
        uplo,
        trans,
        diag,
        m,
        n,
        alpha,
        A,
        B,
        ldb,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctftri_(
        transr,
        uplo,
        diag,
        n,
        A,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtftri_(
        transr,
        uplo,
        diag,
        n,
        A,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stftri_(
        transr,
        uplo,
        diag,
        n,
        A,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztftri_(
    transr: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztftri_(
        transr,
        uplo,
        diag,
        n,
        A,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const _lapack_complex_float,
    AP: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctfttp_(
        transr,
        uplo,
        n,
        ARF,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const f64,
    AP: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtfttp_(
        transr,
        uplo,
        n,
        ARF,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const f32,
    AP: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stfttp_(
        transr,
        uplo,
        n,
        ARF,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfttp_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const _lapack_complex_double,
    AP: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztfttp_(
        transr,
        uplo,
        n,
        ARF,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const _lapack_complex_float,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctfttr_(
        transr,
        uplo,
        n,
        ARF,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const f64,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtfttr_(
        transr,
        uplo,
        n,
        ARF,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const f32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stfttr_(
        transr,
        uplo,
        n,
        ARF,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztfttr_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    ARF: *const _lapack_complex_double,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztfttr_(
        transr,
        uplo,
        n,
        ARF,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    S: *const _lapack_complex_float,
    lds: *const i32,
    P: *const _lapack_complex_float,
    ldp: *const i32,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctgevc_(
        side,
        howmny,
        select,
        n,
        S,
        lds,
        P,
        ldp,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    S: *const f64,
    lds: *const i32,
    P: *const f64,
    ldp: *const i32,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtgevc_(
        side,
        howmny,
        select,
        n,
        S,
        lds,
        P,
        ldp,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    S: *const f32,
    lds: *const i32,
    P: *const f32,
    ldp: *const i32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stgevc_(
        side,
        howmny,
        select,
        n,
        S,
        lds,
        P,
        ldp,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    S: *const _lapack_complex_double,
    lds: *const i32,
    P: *const _lapack_complex_double,
    ldp: *const i32,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztgevc_(
        side,
        howmny,
        select,
        n,
        S,
        lds,
        P,
        ldp,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgexc_(
    wantq: *const i32,
    wantz: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    ifst: *const i32,
    ilst: *mut i32,
    info: *mut i32
)
{
    ctgexc_(
        wantq,
        wantz,
        n,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgexc_(
    wantq: *const i32,
    wantz: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    ifst: *mut i32,
    ilst: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dtgexc_(
        wantq,
        wantz,
        n,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        ifst,
        ilst,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgexc_(
    wantq: *const i32,
    wantz: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    ifst: *mut i32,
    ilst: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    stgexc_(
        wantq,
        wantz,
        n,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        ifst,
        ilst,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgexc_(
    wantq: *const i32,
    wantz: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    ifst: *const i32,
    ilst: *mut i32,
    info: *mut i32
)
{
    ztgexc_(
        wantq,
        wantz,
        n,
        A,
        lda,
        B,
        ldb,
        Q,
        ldq,
        Z,
        ldz,
        ifst,
        ilst,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsen_(
    ijob: *const i32,
    wantq: *const i32,
    wantz: *const i32,
    select: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    alpha: *mut _lapack_complex_float,
    beta: *mut _lapack_complex_float,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    Z: *mut _lapack_complex_float,
    ldz: *const i32,
    m: *mut i32,
    pl: *mut f32,
    pr: *mut f32,
    DIF: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32
)
{
    ctgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        m,
        pl,
        pr,
        DIF,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsen_(
    ijob: *const i32,
    wantq: *const i32,
    wantz: *const i32,
    select: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    alphar: *mut f64,
    alphai: *mut f64,
    beta: *mut f64,
    Q: *mut f64,
    ldq: *const i32,
    Z: *mut f64,
    ldz: *const i32,
    m: *mut i32,
    pl: *mut f64,
    pr: *mut f64,
    DIF: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32
)
{
    dtgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        m,
        pl,
        pr,
        DIF,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsen_(
    ijob: *const i32,
    wantq: *const i32,
    wantz: *const i32,
    select: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    alphar: *mut f32,
    alphai: *mut f32,
    beta: *mut f32,
    Q: *mut f32,
    ldq: *const i32,
    Z: *mut f32,
    ldz: *const i32,
    m: *mut i32,
    pl: *mut f32,
    pr: *mut f32,
    DIF: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32
)
{
    stgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        alphar,
        alphai,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        m,
        pl,
        pr,
        DIF,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsen_(
    ijob: *const i32,
    wantq: *const i32,
    wantz: *const i32,
    select: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    alpha: *mut _lapack_complex_double,
    beta: *mut _lapack_complex_double,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    Z: *mut _lapack_complex_double,
    ldz: *const i32,
    m: *mut i32,
    pl: *mut f64,
    pr: *mut f64,
    DIF: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32
)
{
    ztgsen_(
        ijob,
        wantq,
        wantz,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        alpha,
        beta,
        Q,
        ldq,
        Z,
        ldz,
        m,
        pl,
        pr,
        DIF,
        work,
        lwork,
        iwork,
        liwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    tola: *const f32,
    tolb: *const f32,
    alpha: *mut f32,
    beta: *mut f32,
    U: *mut _lapack_complex_float,
    ldu: *const i32,
    V: *mut _lapack_complex_float,
    ldv: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    work: *mut _lapack_complex_float,
    ncycle: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        ncycle,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    tola: *const f64,
    tolb: *const f64,
    alpha: *mut f64,
    beta: *mut f64,
    U: *mut f64,
    ldu: *const i32,
    V: *mut f64,
    ldv: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    work: *mut f64,
    ncycle: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        ncycle,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    tola: *const f32,
    tolb: *const f32,
    alpha: *mut f32,
    beta: *mut f32,
    U: *mut f32,
    ldu: *const i32,
    V: *mut f32,
    ldv: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    work: *mut f32,
    ncycle: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        ncycle,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsja_(
    jobu: *const c_char,
    jobv: *const c_char,
    jobq: *const c_char,
    m: *const i32,
    p: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    tola: *const f64,
    tolb: *const f64,
    alpha: *mut f64,
    beta: *mut f64,
    U: *mut _lapack_complex_double,
    ldu: *const i32,
    V: *mut _lapack_complex_double,
    ldv: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    work: *mut _lapack_complex_double,
    ncycle: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztgsja_(
        jobu,
        jobv,
        jobq,
        m,
        p,
        n,
        k,
        l,
        A,
        lda,
        B,
        ldb,
        tola,
        tolb,
        alpha,
        beta,
        U,
        ldu,
        V,
        ldv,
        Q,
        ldq,
        work,
        ncycle,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    VL: *const _lapack_complex_float,
    ldvl: *const i32,
    VR: *const _lapack_complex_float,
    ldvr: *const i32,
    S: *mut f32,
    DIF: *mut f32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctgsna_(
        job,
        howmny,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        DIF,
        mm,
        m,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    VL: *const f64,
    ldvl: *const i32,
    VR: *const f64,
    ldvr: *const i32,
    S: *mut f64,
    DIF: *mut f64,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtgsna_(
        job,
        howmny,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        DIF,
        mm,
        m,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    VL: *const f32,
    ldvl: *const i32,
    VR: *const f32,
    ldvr: *const i32,
    S: *mut f32,
    DIF: *mut f32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stgsna_(
        job,
        howmny,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        DIF,
        mm,
        m,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    VL: *const _lapack_complex_double,
    ldvl: *const i32,
    VR: *const _lapack_complex_double,
    ldvr: *const i32,
    S: *mut f64,
    DIF: *mut f64,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztgsna_(
        job,
        howmny,
        select,
        n,
        A,
        lda,
        B,
        ldb,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        DIF,
        mm,
        m,
        work,
        lwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctgsyl_(
    trans: *const c_char,
    ijob: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    D: *const _lapack_complex_float,
    ldd: *const i32,
    E: *const _lapack_complex_float,
    lde: *const i32,
    F: *mut _lapack_complex_float,
    ldf: *const i32,
    dif: *mut f32,
    scale: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ctgsyl_(
        trans,
        ijob,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        D,
        ldd,
        E,
        lde,
        F,
        ldf,
        dif,
        scale,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtgsyl_(
    trans: *const c_char,
    ijob: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    C: *mut f64,
    ldc: *const i32,
    D: *const f64,
    ldd: *const i32,
    E: *const f64,
    lde: *const i32,
    F: *mut f64,
    ldf: *const i32,
    dif: *mut f64,
    scale: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    dtgsyl_(
        trans,
        ijob,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        D,
        ldd,
        E,
        lde,
        F,
        ldf,
        dif,
        scale,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stgsyl_(
    trans: *const c_char,
    ijob: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    C: *mut f32,
    ldc: *const i32,
    D: *const f32,
    ldd: *const i32,
    E: *const f32,
    lde: *const i32,
    F: *mut f32,
    ldf: *const i32,
    dif: *mut f32,
    scale: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    stgsyl_(
        trans,
        ijob,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        D,
        ldd,
        E,
        lde,
        F,
        ldf,
        dif,
        scale,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztgsyl_(
    trans: *const c_char,
    ijob: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    D: *const _lapack_complex_double,
    ldd: *const i32,
    E: *const _lapack_complex_double,
    lde: *const i32,
    F: *mut _lapack_complex_double,
    ldf: *const i32,
    dif: *mut f64,
    scale: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize
)
{
    ztgsyl_(
        trans,
        ijob,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        D,
        ldd,
        E,
        lde,
        F,
        ldf,
        dif,
        scale,
        work,
        lwork,
        iwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctpcon_(
        norm,
        uplo,
        diag,
        n,
        AP,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const f64,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtpcon_(
        norm,
        uplo,
        diag,
        n,
        AP,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const f32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stpcon_(
        norm,
        uplo,
        diag,
        n,
        AP,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztpcon_(
        norm,
        uplo,
        diag,
        n,
        AP,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctplqt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    mb: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    ctplqt_(
        m,
        n,
        l,
        mb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtplqt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    mb: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    T: *mut f64,
    ldt: *const i32,
    work: *mut f64,
    info: *mut i32
)
{
    dtplqt_(
        m,
        n,
        l,
        mb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stplqt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    mb: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    T: *mut f32,
    ldt: *const i32,
    work: *mut f32,
    info: *mut i32
)
{
    stplqt_(
        m,
        n,
        l,
        mb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztplqt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    mb: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    ztplqt_(
        m,
        n,
        l,
        mb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctplqt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    info: *mut i32
)
{
    ctplqt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtplqt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    T: *mut f64,
    ldt: *const i32,
    info: *mut i32
)
{
    dtplqt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stplqt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    T: *mut f32,
    ldt: *const i32,
    info: *mut i32
)
{
    stplqt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztplqt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    info: *mut i32
)
{
    ztplqt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    mb: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    mb: *const i32,
    V: *const f64,
    ldv: *const i32,
    T: *const f64,
    ldt: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    mb: *const i32,
    V: *const f32,
    ldv: *const i32,
    T: *const f32,
    ldt: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpmlqt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    mb: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztpmlqt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        mb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    nb: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    nb: *const i32,
    V: *const f64,
    ldv: *const i32,
    T: *const f64,
    ldt: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    nb: *const i32,
    V: *const f32,
    ldv: *const i32,
    T: *const f32,
    ldt: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpmqrt_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    nb: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztpmqrt_(
        side,
        trans,
        m,
        n,
        k,
        l,
        nb,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpqrt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32
)
{
    ctpqrt_(
        m,
        n,
        l,
        nb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpqrt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    nb: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    T: *mut f64,
    ldt: *const i32,
    work: *mut f64,
    info: *mut i32
)
{
    dtpqrt_(
        m,
        n,
        l,
        nb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpqrt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    nb: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    T: *mut f32,
    ldt: *const i32,
    work: *mut f32,
    info: *mut i32
)
{
    stpqrt_(
        m,
        n,
        l,
        nb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpqrt_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32
)
{
    ztpqrt_(
        m,
        n,
        l,
        nb,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        work,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpqrt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    info: *mut i32
)
{
    ctpqrt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpqrt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    T: *mut f64,
    ldt: *const i32,
    info: *mut i32
)
{
    dtpqrt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpqrt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    T: *mut f32,
    ldt: *const i32,
    info: *mut i32
)
{
    stpqrt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpqrt2_(
    m: *const i32,
    n: *const i32,
    l: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    info: *mut i32
)
{
    ztpqrt2_(
        m,
        n,
        l,
        A,
        lda,
        B,
        ldb,
        T,
        ldt,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    V: *const _lapack_complex_float,
    ldv: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    work: *mut _lapack_complex_float,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    ctprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    V: *const f64,
    ldv: *const i32,
    T: *const f64,
    ldt: *const i32,
    A: *mut f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    work: *mut f64,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    dtprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    V: *const f32,
    ldv: *const i32,
    T: *const f32,
    ldt: *const i32,
    A: *mut f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    work: *mut f32,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    stprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztprfb_(
    side: *const c_char,
    trans: *const c_char,
    direct: *const c_char,
    storev: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    V: *const _lapack_complex_double,
    ldv: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    work: *mut _lapack_complex_double,
    ldwork: *const i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize
)
{
    ztprfb_(
        side,
        trans,
        direct,
        storev,
        m,
        n,
        k,
        l,
        V,
        ldv,
        T,
        ldt,
        A,
        lda,
        B,
        ldb,
        work,
        ldwork,
        arg1,
        arg2,
        arg3,
        arg4
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *const _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    B: *const f64,
    ldb: *const i32,
    X: *const f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    B: *const f32,
    ldb: *const i32,
    X: *const f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztprfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *const _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztprfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctptri_(
        uplo,
        diag,
        n,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtptri_(
        uplo,
        diag,
        n,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stptri_(
        uplo,
        diag,
        n,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztptri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    AP: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztptri_(
        uplo,
        diag,
        n,
        AP,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_float,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f64,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const f32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    stptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztptrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    AP: *const _lapack_complex_double,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztptrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        AP,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    ARF: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctpttf_(
        transr,
        uplo,
        n,
        AP,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    ARF: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtpttf_(
        transr,
        uplo,
        n,
        AP,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    ARF: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    stpttf_(
        transr,
        uplo,
        n,
        AP,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    ARF: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztpttf_(
        transr,
        uplo,
        n,
        AP,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctpttr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ctpttr_(
        uplo,
        n,
        AP,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtpttr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f64,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    dtpttr_(
        uplo,
        n,
        AP,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stpttr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const f32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    stpttr_(
        uplo,
        n,
        AP,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztpttr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ztpttr_(
        uplo,
        n,
        AP,
        A,
        lda,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    rcond: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctrcon_(
        norm,
        uplo,
        diag,
        n,
        A,
        lda,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    rcond: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtrcon_(
        norm,
        uplo,
        diag,
        n,
        A,
        lda,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    rcond: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    strcon_(
        norm,
        uplo,
        diag,
        n,
        A,
        lda,
        rcond,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrcon_(
    norm: *const c_char,
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    rcond: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztrcon_(
        norm,
        uplo,
        diag,
        n,
        A,
        lda,
        rcond,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrevc_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut i32,
    n: *const i32,
    T: *const f64,
    ldt: *const i32,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrevc_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut i32,
    n: *const i32,
    T: *const f32,
    ldt: *const i32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strevc_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrevc_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrevc_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    VL: *mut _lapack_complex_float,
    ldvl: *const i32,
    VR: *mut _lapack_complex_float,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrevc3_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut i32,
    n: *const i32,
    T: *const f64,
    ldt: *const i32,
    VL: *mut f64,
    ldvl: *const i32,
    VR: *mut f64,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrevc3_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *mut i32,
    n: *const i32,
    T: *const f32,
    ldt: *const i32,
    VL: *mut f32,
    ldvl: *const i32,
    VR: *mut f32,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strevc3_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrevc3_(
    side: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    VL: *mut _lapack_complex_double,
    ldvl: *const i32,
    VR: *mut _lapack_complex_double,
    ldvr: *const i32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrevc3_(
        side,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        mm,
        m,
        work,
        lwork,
        rwork,
        lrwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrexc_(
    compq: *const c_char,
    n: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    ifst: *const i32,
    ilst: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ctrexc_(
        compq,
        n,
        T,
        ldt,
        Q,
        ldq,
        ifst,
        ilst,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrexc_(
    compq: *const c_char,
    n: *const i32,
    T: *mut f64,
    ldt: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    ifst: *mut i32,
    ilst: *mut i32,
    work: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dtrexc_(
        compq,
        n,
        T,
        ldt,
        Q,
        ldq,
        ifst,
        ilst,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strexc_(
    compq: *const c_char,
    n: *const i32,
    T: *mut f32,
    ldt: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    ifst: *mut i32,
    ilst: *mut i32,
    work: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    strexc_(
        compq,
        n,
        T,
        ldt,
        Q,
        ldq,
        ifst,
        ilst,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrexc_(
    compq: *const c_char,
    n: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    ifst: *const i32,
    ilst: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    ztrexc_(
        compq,
        n,
        T,
        ldt,
        Q,
        ldq,
        ifst,
        ilst,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    X: *const _lapack_complex_float,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut _lapack_complex_float,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    X: *const f64,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut f64,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    X: *const f32,
    ldx: *const i32,
    ferr: *mut f32,
    berr: *mut f32,
    work: *mut f32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    strrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrrfs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    X: *const _lapack_complex_double,
    ldx: *const i32,
    ferr: *mut f64,
    berr: *mut f64,
    work: *mut _lapack_complex_double,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztrrfs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        X,
        ldx,
        ferr,
        berr,
        work,
        rwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    W: *mut _lapack_complex_float,
    m: *mut i32,
    s: *mut f32,
    sep: *mut f32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrsen_(
        job,
        compq,
        select,
        n,
        T,
        ldt,
        Q,
        ldq,
        W,
        m,
        s,
        sep,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut f64,
    ldt: *const i32,
    Q: *mut f64,
    ldq: *const i32,
    WR: *mut f64,
    WI: *mut f64,
    m: *mut i32,
    s: *mut f64,
    sep: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrsen_(
        job,
        compq,
        select,
        n,
        T,
        ldt,
        Q,
        ldq,
        WR,
        WI,
        m,
        s,
        sep,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut f32,
    ldt: *const i32,
    Q: *mut f32,
    ldq: *const i32,
    WR: *mut f32,
    WI: *mut f32,
    m: *mut i32,
    s: *mut f32,
    sep: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    iwork: *mut i32,
    liwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strsen_(
        job,
        compq,
        select,
        n,
        T,
        ldt,
        Q,
        ldq,
        WR,
        WI,
        m,
        s,
        sep,
        work,
        lwork,
        iwork,
        liwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsen_(
    job: *const c_char,
    compq: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    W: *mut _lapack_complex_double,
    m: *mut i32,
    s: *mut f64,
    sep: *mut f64,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrsen_(
        job,
        compq,
        select,
        n,
        T,
        ldt,
        Q,
        ldq,
        W,
        m,
        s,
        sep,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    VL: *const _lapack_complex_float,
    ldvl: *const i32,
    VR: *const _lapack_complex_float,
    ldvr: *const i32,
    S: *mut f32,
    SEP: *mut f32,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_float,
    ldwork: *const i32,
    rwork: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrsna_(
        job,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        SEP,
        mm,
        m,
        work,
        ldwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *const f64,
    ldt: *const i32,
    VL: *const f64,
    ldvl: *const i32,
    VR: *const f64,
    ldvr: *const i32,
    S: *mut f64,
    SEP: *mut f64,
    mm: *const i32,
    m: *mut i32,
    work: *mut f64,
    ldwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrsna_(
        job,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        SEP,
        mm,
        m,
        work,
        ldwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *const f32,
    ldt: *const i32,
    VL: *const f32,
    ldvl: *const i32,
    VR: *const f32,
    ldvr: *const i32,
    S: *mut f32,
    SEP: *mut f32,
    mm: *const i32,
    m: *mut i32,
    work: *mut f32,
    ldwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strsna_(
        job,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        SEP,
        mm,
        m,
        work,
        ldwork,
        iwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsna_(
    job: *const c_char,
    howmny: *const c_char,
    select: *const i32,
    n: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    VL: *const _lapack_complex_double,
    ldvl: *const i32,
    VR: *const _lapack_complex_double,
    ldvr: *const i32,
    S: *mut f64,
    SEP: *mut f64,
    mm: *const i32,
    m: *mut i32,
    work: *mut _lapack_complex_double,
    ldwork: *const i32,
    rwork: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrsna_(
        job,
        howmny,
        select,
        n,
        T,
        ldt,
        VL,
        ldvl,
        VR,
        ldvr,
        S,
        SEP,
        mm,
        m,
        work,
        ldwork,
        rwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    scale: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    C: *mut f64,
    ldc: *const i32,
    scale: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    C: *mut f32,
    ldc: *const i32,
    scale: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsyl_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    scale: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrsyl_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *const _lapack_complex_float,
    ldb: *const i32,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    scale: *mut f32,
    swork: *mut f32,
    ldswork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        swork,
        ldswork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *const f64,
    ldb: *const i32,
    C: *mut f64,
    ldc: *const i32,
    scale: *mut f64,
    iwork: *mut i32,
    liwork: *const i32,
    swork: *mut f64,
    ldswork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        iwork,
        liwork,
        swork,
        ldswork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *const f32,
    ldb: *const i32,
    C: *mut f32,
    ldc: *const i32,
    scale: *mut f32,
    iwork: *mut i32,
    liwork: *const i32,
    swork: *mut f32,
    ldswork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        iwork,
        liwork,
        swork,
        ldswork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrsyl3_(
    trana: *const c_char,
    tranb: *const c_char,
    isgn: *const i32,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *const _lapack_complex_double,
    ldb: *const i32,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    scale: *mut f64,
    swork: *mut f64,
    ldswork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrsyl3_(
        trana,
        tranb,
        isgn,
        m,
        n,
        A,
        lda,
        B,
        ldb,
        C,
        ldc,
        scale,
        swork,
        ldswork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
) -> i32
{
    ctrtri_(
        uplo,
        diag,
        n,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
) -> i32
{
    dtrtri_(
        uplo,
        diag,
        n,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
) -> i32
{
    strtri_(
        uplo,
        diag,
        n,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrtri_(
    uplo: *const c_char,
    diag: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
) -> i32
{
    ztrtri_(
        uplo,
        diag,
        n,
        A,
        lda,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    B: *mut _lapack_complex_float,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ctrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f64,
    lda: *const i32,
    B: *mut f64,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    dtrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const f32,
    lda: *const i32,
    B: *mut f32,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    strtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrtrs_(
    uplo: *const c_char,
    trans: *const c_char,
    diag: *const c_char,
    n: *const i32,
    nrhs: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    B: *mut _lapack_complex_double,
    ldb: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    ztrtrs_(
        uplo,
        trans,
        diag,
        n,
        nrhs,
        A,
        lda,
        B,
        ldb,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    ARF: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ctrttf_(
        transr,
        uplo,
        n,
        A,
        lda,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    ARF: *mut f64,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    dtrttf_(
        transr,
        uplo,
        n,
        A,
        lda,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    ARF: *mut f32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    strttf_(
        transr,
        uplo,
        n,
        A,
        lda,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrttf_(
    transr: *const c_char,
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    ARF: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    ztrttf_(
        transr,
        uplo,
        n,
        A,
        lda,
        ARF,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctrttp_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    AP: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    ctrttp_(
        uplo,
        n,
        A,
        lda,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtrttp_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f64,
    lda: *const i32,
    AP: *mut f64,
    info: *mut i32,
    arg1: usize
)
{
    dtrttp_(
        uplo,
        n,
        A,
        lda,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_strttp_(
    uplo: *const c_char,
    n: *const i32,
    A: *const f32,
    lda: *const i32,
    AP: *mut f32,
    info: *mut i32,
    arg1: usize
)
{
    strttp_(
        uplo,
        n,
        A,
        lda,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztrttp_(
    uplo: *const c_char,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    AP: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    ztrttp_(
        uplo,
        n,
        A,
        lda,
        AP,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ctzrzf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    ctzrzf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_dtzrzf_(
    m: *const i32,
    n: *const i32,
    A: *mut f64,
    lda: *const i32,
    tau: *mut f64,
    work: *mut f64,
    lwork: *const i32,
    info: *mut i32
)
{
    dtzrzf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_stzrzf_(
    m: *const i32,
    n: *const i32,
    A: *mut f32,
    lda: *const i32,
    tau: *mut f32,
    work: *mut f32,
    lwork: *const i32,
    info: *mut i32
)
{
    stzrzf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_ztzrzf_(
    m: *const i32,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    ztzrzf_(
        m,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunbdb_(
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_float,
    ldx11: *const i32,
    X12: *mut _lapack_complex_float,
    ldx12: *const i32,
    X21: *mut _lapack_complex_float,
    ldx21: *const i32,
    X22: *mut _lapack_complex_float,
    ldx22: *const i32,
    theta: *mut f32,
    phi: *mut f32,
    TAUP1: *mut _lapack_complex_float,
    TAUP2: *mut _lapack_complex_float,
    TAUQ1: *mut _lapack_complex_float,
    TAUQ2: *mut _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunbdb_(
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        phi,
        TAUP1,
        TAUP2,
        TAUQ1,
        TAUQ2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunbdb_(
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_double,
    ldx11: *const i32,
    X12: *mut _lapack_complex_double,
    ldx12: *const i32,
    X21: *mut _lapack_complex_double,
    ldx21: *const i32,
    X22: *mut _lapack_complex_double,
    ldx22: *const i32,
    theta: *mut f64,
    phi: *mut f64,
    TAUP1: *mut _lapack_complex_double,
    TAUP2: *mut _lapack_complex_double,
    TAUQ1: *mut _lapack_complex_double,
    TAUQ2: *mut _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunbdb_(
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        phi,
        TAUP1,
        TAUP2,
        TAUQ1,
        TAUQ2,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cuncsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_float,
    ldx11: *const i32,
    X12: *mut _lapack_complex_float,
    ldx12: *const i32,
    X21: *mut _lapack_complex_float,
    ldx21: *const i32,
    X22: *mut _lapack_complex_float,
    ldx22: *const i32,
    theta: *mut f32,
    U1: *mut _lapack_complex_float,
    ldu1: *const i32,
    U2: *mut _lapack_complex_float,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_float,
    ldv1t: *const i32,
    V2T: *mut _lapack_complex_float,
    ldv2t: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    cuncsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zuncsd_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    jobv2t: *const c_char,
    trans: *const c_char,
    signs: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_double,
    ldx11: *const i32,
    X12: *mut _lapack_complex_double,
    ldx12: *const i32,
    X21: *mut _lapack_complex_double,
    ldx21: *const i32,
    X22: *mut _lapack_complex_double,
    ldx22: *const i32,
    theta: *mut f64,
    U1: *mut _lapack_complex_double,
    ldu1: *const i32,
    U2: *mut _lapack_complex_double,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_double,
    ldv1t: *const i32,
    V2T: *mut _lapack_complex_double,
    ldv2t: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize,
    arg4: usize,
    arg5: usize,
    arg6: usize
)
{
    zuncsd_(
        jobu1,
        jobu2,
        jobv1t,
        jobv2t,
        trans,
        signs,
        m,
        p,
        q,
        X11,
        ldx11,
        X12,
        ldx12,
        X21,
        ldx21,
        X22,
        ldx22,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        V2T,
        ldv2t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3,
        arg4,
        arg5,
        arg6
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cuncsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_float,
    ldx11: *const i32,
    X21: *mut _lapack_complex_float,
    ldx21: *const i32,
    theta: *mut f32,
    U1: *mut _lapack_complex_float,
    ldu1: *const i32,
    U2: *mut _lapack_complex_float,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_float,
    ldv1t: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    rwork: *mut f32,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cuncsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        X11,
        ldx11,
        X21,
        ldx21,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zuncsd2by1_(
    jobu1: *const c_char,
    jobu2: *const c_char,
    jobv1t: *const c_char,
    m: *const i32,
    p: *const i32,
    q: *const i32,
    X11: *mut _lapack_complex_double,
    ldx11: *const i32,
    X21: *mut _lapack_complex_double,
    ldx21: *const i32,
    theta: *mut f64,
    U1: *mut _lapack_complex_double,
    ldu1: *const i32,
    U2: *mut _lapack_complex_double,
    ldu2: *const i32,
    V1T: *mut _lapack_complex_double,
    ldv1t: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    rwork: *mut f64,
    lrwork: *const i32,
    iwork: *mut i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zuncsd2by1_(
        jobu1,
        jobu2,
        jobv1t,
        m,
        p,
        q,
        X11,
        ldx11,
        X21,
        ldx21,
        theta,
        U1,
        ldu1,
        U2,
        ldu2,
        V1T,
        ldv1t,
        work,
        lwork,
        rwork,
        lrwork,
        iwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungbr_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cungbr_(
        vect,
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungbr_(
    vect: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zungbr_(
        vect,
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunghr_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cunghr_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunghr_(
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zunghr_(
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunglq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cunglq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunglq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zunglq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungql_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cungql_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungql_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zungql_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungqr_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cungqr_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungqr_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zungqr_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungrq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cungrq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungrq_(
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zungrq_(
        m,
        n,
        k,
        A,
        lda,
        tau,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungtr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    cungtr_(
        uplo,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungtr_(
    uplo: *const c_char,
    n: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize
)
{
    zungtr_(
        uplo,
        n,
        A,
        lda,
        tau,
        work,
        lwork,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cungtsqr_row_(
    m: *const i32,
    n: *const i32,
    mb: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *const _lapack_complex_float,
    ldt: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32
)
{
    cungtsqr_row_(
        m,
        n,
        mb,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zungtsqr_row_(
    m: *const i32,
    n: *const i32,
    mb: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *const _lapack_complex_double,
    ldt: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32
)
{
    zungtsqr_row_(
        m,
        n,
        mb,
        nb,
        A,
        lda,
        T,
        ldt,
        work,
        lwork,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunhr_col_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_float,
    lda: *const i32,
    T: *mut _lapack_complex_float,
    ldt: *const i32,
    D: *mut _lapack_complex_float,
    info: *mut i32
)
{
    cunhr_col_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        D,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunhr_col_(
    m: *const i32,
    n: *const i32,
    nb: *const i32,
    A: *mut _lapack_complex_double,
    lda: *const i32,
    T: *mut _lapack_complex_double,
    ldt: *const i32,
    D: *mut _lapack_complex_double,
    info: *mut i32
)
{
    zunhr_col_(
        m,
        n,
        nb,
        A,
        lda,
        T,
        ldt,
        D,
        info
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cunmbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmbr_(
    vect: *const c_char,
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zunmbr_(
        vect,
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmhr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    ilo: *const i32,
    ihi: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmhr_(
        side,
        trans,
        m,
        n,
        ilo,
        ihi,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmlq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmlq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmql_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmql_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmql_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmqr_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmqr_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmrq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmrq_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmrq_(
        side,
        trans,
        m,
        n,
        k,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    cunmrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmrz_(
    side: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    k: *const i32,
    l: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize
)
{
    zunmrz_(
        side,
        trans,
        m,
        n,
        k,
        l,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cunmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_float,
    lda: *const i32,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cunmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zunmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    A: *const _lapack_complex_double,
    lda: *const i32,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    lwork: *const i32,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zunmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        A,
        lda,
        tau,
        C,
        ldc,
        work,
        lwork,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cupgtr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_float,
    tau: *const _lapack_complex_float,
    Q: *mut _lapack_complex_float,
    ldq: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize
)
{
    cupgtr_(
        uplo,
        n,
        AP,
        tau,
        Q,
        ldq,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zupgtr_(
    uplo: *const c_char,
    n: *const i32,
    AP: *const _lapack_complex_double,
    tau: *const _lapack_complex_double,
    Q: *mut _lapack_complex_double,
    ldq: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize
)
{
    zupgtr_(
        uplo,
        n,
        AP,
        tau,
        Q,
        ldq,
        work,
        info,
        arg1
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_cupmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    AP: *const _lapack_complex_float,
    tau: *const _lapack_complex_float,
    C: *mut _lapack_complex_float,
    ldc: *const i32,
    work: *mut _lapack_complex_float,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    cupmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        AP,
        tau,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

#[no_mangle]
pub unsafe extern "C" fn ffi_zupmtr_(
    side: *const c_char,
    uplo: *const c_char,
    trans: *const c_char,
    m: *const i32,
    n: *const i32,
    AP: *const _lapack_complex_double,
    tau: *const _lapack_complex_double,
    C: *mut _lapack_complex_double,
    ldc: *const i32,
    work: *mut _lapack_complex_double,
    info: *mut i32,
    arg1: usize,
    arg2: usize,
    arg3: usize
)
{
    zupmtr_(
        side,
        uplo,
        trans,
        m,
        n,
        AP,
        tau,
        C,
        ldc,
        work,
        info,
        arg1,
        arg2,
        arg3
    )
}

    